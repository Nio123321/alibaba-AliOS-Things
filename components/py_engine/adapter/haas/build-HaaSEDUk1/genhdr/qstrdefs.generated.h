// This file was automatically generated by makeqstrdata.py

QDEF0(MP_QSTRnull, (const byte*)"\x00\x00\x00" "")
QDEF0(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF0(MP_QSTR___dir__, (const byte*)"\x7a\x8f\x07" "__dir__")
QDEF0(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF0(MP_QSTR__space_, (const byte*)"\x85\xb5\x01" " ")
QDEF0(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF0(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF0(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF0(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF0(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF0(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF0(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF0(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF0(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF0(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF0(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF0(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF0(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF0(MP_QSTR___int__, (const byte*)"\x16\x1b\x07" "__int__")
QDEF0(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF0(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF0(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF0(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF0(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF0(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF0(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF0(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF0(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF0(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF0(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF0(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF0(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF0(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF0(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF0(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF0(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF0(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF0(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF0(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF0(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF0(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF0(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF0(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF0(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF0(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF0(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF0(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF0(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF0(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF0(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF0(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF0(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF0(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF0(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF0(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF0(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF0(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF0(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF0(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF0(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF0(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF0(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF0(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF0(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF0(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF0(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF0(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF0(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF0(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF0(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF0(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF0(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF0(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF0(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF0(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF0(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF0(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF0(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF0(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF0(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF0(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF0(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF0(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF0(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF0(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF0(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF0(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF0(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF0(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF0(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF0(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF0(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF0(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF0(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF0(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF0(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF0(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF0(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF0(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF0(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF0(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF0(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF0(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF0(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF0(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF0(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF0(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF0(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF0(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF0(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF0(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF0(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF0(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF0(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF0(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF0(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF0(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF0(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF0(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF0(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF0(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF0(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF0(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF0(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF0(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF0(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF0(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF0(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF0(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF0(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF0(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF0(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF0(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF0(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF0(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF0(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF0(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF0(MP_QSTR_self, (const byte*)"\x79\x77\x04" "self")
QDEF0(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF0(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF0(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF0(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF0(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF0(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF0(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF0(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF0(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF0(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF0(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF0(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF0(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF0(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF0(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF0(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF0(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF0(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF0(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF0(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF0(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF0(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF0(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF0(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF0(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF0(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF0(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF0(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF0(MP_QSTR___SIZE__, (const byte*)"\xa0\xd1\x08" "__SIZE__")
QDEF0(MP_QSTR___abs__, (const byte*)"\x95\xd6\x07" "__abs__")
QDEF0(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF0(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF0(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF0(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF0(MP_QSTR___and__, (const byte*)"\x0e\xdb\x07" "__and__")
QDEF0(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF0(MP_QSTR___bases__, (const byte*)"\x03\x30\x09" "__bases__")
QDEF0(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF0(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF0(MP_QSTR___cast__, (const byte*)"\x80\x96\x08" "__cast__")
QDEF0(MP_QSTR___cast_instance__, (const byte*)"\xd6\xc2\x11" "__cast_instance__")
QDEF0(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF0(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
QDEF0(MP_QSTR___delattr__, (const byte*)"\x5b\x77\x0b" "__delattr__")
QDEF0(MP_QSTR___delete__, (const byte*)"\xdc\xed\x0a" "__delete__")
QDEF0(MP_QSTR___dereference__, (const byte*)"\x2f\x89\x0f" "__dereference__")
QDEF0(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF0(MP_QSTR___divmod__, (const byte*)"\x78\x11\x0a" "__divmod__")
QDEF0(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF0(MP_QSTR___file__, (const byte*)"\x03\x54\x08" "__file__")
QDEF0(MP_QSTR___floordiv__, (const byte*)"\x46\x5f\x0c" "__floordiv__")
QDEF0(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF0(MP_QSTR___get__, (const byte*)"\xb3\x8f\x07" "__get__")
QDEF0(MP_QSTR___globals__, (const byte*)"\x9d\xae\x0b" "__globals__")
QDEF0(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF0(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
QDEF0(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF0(MP_QSTR___invert__, (const byte*)"\xf7\x77\x0a" "__invert__")
QDEF0(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
QDEF0(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF0(MP_QSTR___lshift__, (const byte*)"\x09\x88\x0a" "__lshift__")
QDEF0(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF0(MP_QSTR___matmul__, (const byte*)"\x49\xf3\x0a" "__matmul__")
QDEF0(MP_QSTR___mod__, (const byte*)"\x63\x37\x07" "__mod__")
QDEF0(MP_QSTR___mul__, (const byte*)"\x31\x42\x07" "__mul__")
QDEF0(MP_QSTR___ne__, (const byte*)"\x0e\x0b\x06" "__ne__")
QDEF0(MP_QSTR___neg__, (const byte*)"\x69\xd5\x07" "__neg__")
QDEF0(MP_QSTR___or__, (const byte*)"\x38\xbb\x06" "__or__")
QDEF0(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF0(MP_QSTR___pos__, (const byte*)"\x29\xf0\x07" "__pos__")
QDEF0(MP_QSTR___pow__, (const byte*)"\x2d\x00\x07" "__pow__")
QDEF0(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF0(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF0(MP_QSTR___rshift__, (const byte*)"\x57\x98\x0a" "__rshift__")
QDEF0(MP_QSTR___set__, (const byte*)"\xa7\xb3\x07" "__set__")
QDEF0(MP_QSTR___setattr__, (const byte*)"\x54\x19\x0b" "__setattr__")
QDEF0(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF0(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF0(MP_QSTR___truediv__, (const byte*)"\x88\xef\x0b" "__truediv__")
QDEF0(MP_QSTR___xor__, (const byte*)"\x20\xec\x07" "__xor__")
QDEF1(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF1(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF1(MP_QSTR__slash_lib, (const byte*)"\x8d\x9c\x04" "/lib")
QDEF1(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF1(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF1(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF1(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF1(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF1(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF1(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF1(MP_QSTR_ACTIVE, (const byte*)"\xa9\x0e\x06" "ACTIVE")
QDEF1(MP_QSTR_ADC, (const byte*)"\x63\xb6\x03" "ADC")
QDEF1(MP_QSTR_ADDITIVE, (const byte*)"\xa3\x6d\x08" "ADDITIVE")
QDEF1(MP_QSTR_ADV_HITTEST, (const byte*)"\x4a\x9e\x0b" "ADV_HITTEST")
QDEF1(MP_QSTR_AF_INET, (const byte*)"\xeb\xb7\x07" "AF_INET")
QDEF1(MP_QSTR_AF_INET6, (const byte*)"\x7d\xb5\x08" "AF_INET6")
QDEF1(MP_QSTR_AIAgent, (const byte*)"\x74\x2c\x07" "AIAgent")
QDEF1(MP_QSTR_ALIGN, (const byte*)"\xc8\x1c\x05" "ALIGN")
QDEF1(MP_QSTR_ALL, (const byte*)"\x64\xb7\x03" "ALL")
QDEF1(MP_QSTR_ALPHA_1BIT, (const byte*)"\xe0\x8e\x0a" "ALPHA_1BIT")
QDEF1(MP_QSTR_ALPHA_2BIT, (const byte*)"\x03\x0b\x0a" "ALPHA_2BIT")
QDEF1(MP_QSTR_ALPHA_4BIT, (const byte*)"\x45\xc1\x0a" "ALPHA_4BIT")
QDEF1(MP_QSTR_ALPHA_8BIT, (const byte*)"\xc9\x91\x0a" "ALPHA_8BIT")
QDEF1(MP_QSTR_AMBER, (const byte*)"\xbc\x9d\x05" "AMBER")
QDEF1(MP_QSTR_ANGLE, (const byte*)"\xe4\x2c\x05" "ANGLE")
QDEF1(MP_QSTR_ANIM, (const byte*)"\xce\x9b\x04" "ANIM")
QDEF1(MP_QSTR_ANIM_IMG_PART, (const byte*)"\xda\x5e\x0d" "ANIM_IMG_PART")
QDEF1(MP_QSTR_ANIM_PLAYTIME, (const byte*)"\x80\x4a\x0d" "ANIM_PLAYTIME")
QDEF1(MP_QSTR_ANIM_REPEAT, (const byte*)"\x66\x61\x0b" "ANIM_REPEAT")
QDEF1(MP_QSTR_ANIM_SPEED, (const byte*)"\x56\x8b\x0a" "ANIM_SPEED")
QDEF1(MP_QSTR_ANIM_TIME, (const byte*)"\xa4\xfd\x09" "ANIM_TIME")
QDEF1(MP_QSTR_ANY, (const byte*)"\x33\xb7\x03" "ANY")
QDEF1(MP_QSTR_ARC, (const byte*)"\xb5\xb8\x03" "ARC")
QDEF1(MP_QSTR_ARC_COLOR, (const byte*)"\xd7\x28\x09" "ARC_COLOR")
QDEF1(MP_QSTR_ARC_COLOR_FILTERED, (const byte*)"\x29\x42\x12" "ARC_COLOR_FILTERED")
QDEF1(MP_QSTR_ARC_IMG_SRC, (const byte*)"\x94\x1c\x0b" "ARC_IMG_SRC")
QDEF1(MP_QSTR_ARC_OPA, (const byte*)"\xd4\xcf\x07" "ARC_OPA")
QDEF1(MP_QSTR_ARC_ROUNDED, (const byte*)"\x49\xfb\x0b" "ARC_ROUNDED")
QDEF1(MP_QSTR_ARC_WIDTH, (const byte*)"\xac\x84\x09" "ARC_WIDTH")
QDEF1(MP_QSTR_ARRAY, (const byte*)"\x5c\x7a\x05" "ARRAY")
QDEF1(MP_QSTR_AUDIO, (const byte*)"\x33\x1a\x05" "AUDIO")
QDEF1(MP_QSTR_AUDIOPLAYER_STAT_ERROR, (const byte*)"\x2a\xef\x16" "AUDIOPLAYER_STAT_ERROR")
QDEF1(MP_QSTR_AUDIOPLAYER_STAT_PAUSED, (const byte*)"\x04\xa2\x17" "AUDIOPLAYER_STAT_PAUSED")
QDEF1(MP_QSTR_AUDIOPLAYER_STAT_PLAYING, (const byte*)"\xf6\x4a\x18" "AUDIOPLAYER_STAT_PLAYING")
QDEF1(MP_QSTR_AUDIOPLAYER_STAT_STOP, (const byte*)"\x8a\x3e\x15" "AUDIOPLAYER_STAT_STOP")
QDEF1(MP_QSTR_AUTO, (const byte*)"\xea\xb8\x04" "AUTO")
QDEF1(MP_QSTR_AXIS, (const byte*)"\xc6\xf8\x04" "AXIS")
QDEF1(MP_QSTR_BACKGROUND, (const byte*)"\xab\xee\x0a" "BACKGROUND")
QDEF1(MP_QSTR_BACKSPACE, (const byte*)"\x8a\x9e\x09" "BACKSPACE")
QDEF1(MP_QSTR_BAR, (const byte*)"\x14\xc3\x03" "BAR")
QDEF1(MP_QSTR_BASE_DIR, (const byte*)"\xf0\xff\x08" "BASE_DIR")
QDEF1(MP_QSTR_BATTERY_1, (const byte*)"\x86\x37\x09" "BATTERY_1")
QDEF1(MP_QSTR_BATTERY_2, (const byte*)"\x85\x37\x09" "BATTERY_2")
QDEF1(MP_QSTR_BATTERY_3, (const byte*)"\x84\x37\x09" "BATTERY_3")
QDEF1(MP_QSTR_BATTERY_EMPTY, (const byte*)"\x42\xbf\x0d" "BATTERY_EMPTY")
QDEF1(MP_QSTR_BATTERY_FULL, (const byte*)"\xc4\xcf\x0c" "BATTERY_FULL")
QDEF1(MP_QSTR_BELL, (const byte*)"\x02\x14\x04" "BELL")
QDEF1(MP_QSTR_BFINT16, (const byte*)"\x95\xe2\x07" "BFINT16")
QDEF1(MP_QSTR_BFINT32, (const byte*)"\x53\xe2\x07" "BFINT32")
QDEF1(MP_QSTR_BFINT8, (const byte*)"\x4a\x9a\x06" "BFINT8")
QDEF1(MP_QSTR_BFUINT16, (const byte*)"\x40\xa6\x08" "BFUINT16")
QDEF1(MP_QSTR_BFUINT32, (const byte*)"\x06\xa6\x08" "BFUINT32")
QDEF1(MP_QSTR_BFUINT8, (const byte*)"\xbf\xaf\x07" "BFUINT8")
QDEF1(MP_QSTR_BF_LEN, (const byte*)"\x19\xb0\x06" "BF_LEN")
QDEF1(MP_QSTR_BF_POS, (const byte*)"\x52\x9d\x06" "BF_POS")
QDEF1(MP_QSTR_BG_COLOR, (const byte*)"\xa2\x7e\x08" "BG_COLOR")
QDEF1(MP_QSTR_BG_COLOR_FILTERED, (const byte*)"\x7c\x28\x11" "BG_COLOR_FILTERED")
QDEF1(MP_QSTR_BG_GRAD_COLOR, (const byte*)"\x6d\x10\x0d" "BG_GRAD_COLOR")
QDEF1(MP_QSTR_BG_GRAD_COLOR_FILTERED, (const byte*)"\x13\xef\x16" "BG_GRAD_COLOR_FILTERED")
QDEF1(MP_QSTR_BG_GRAD_DIR, (const byte*)"\xcf\x46\x0b" "BG_GRAD_DIR")
QDEF1(MP_QSTR_BG_GRAD_STOP, (const byte*)"\xa8\xfe\x0c" "BG_GRAD_STOP")
QDEF1(MP_QSTR_BG_IMG_OPA, (const byte*)"\x7d\x7e\x0a" "BG_IMG_OPA")
QDEF1(MP_QSTR_BG_IMG_RECOLOR, (const byte*)"\xc9\x41\x0e" "BG_IMG_RECOLOR")
QDEF1(MP_QSTR_BG_IMG_RECOLOR_FILTERED, (const byte*)"\x77\x5b\x17" "BG_IMG_RECOLOR_FILTERED")
QDEF1(MP_QSTR_BG_IMG_RECOLOR_OPA, (const byte*)"\x68\xf9\x12" "BG_IMG_RECOLOR_OPA")
QDEF1(MP_QSTR_BG_IMG_SRC, (const byte*)"\x21\x8b\x0a" "BG_IMG_SRC")
QDEF1(MP_QSTR_BG_IMG_TILED, (const byte*)"\x33\xd0\x0c" "BG_IMG_TILED")
QDEF1(MP_QSTR_BG_MAIN_STOP, (const byte*)"\x93\x9b\x0c" "BG_MAIN_STOP")
QDEF1(MP_QSTR_BG_OPA, (const byte*)"\xe1\x90\x06" "BG_OPA")
QDEF1(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x51\x0a" "BIG_ENDIAN")
QDEF1(MP_QSTR_BLEND_MODE, (const byte*)"\x98\xde\x0a" "BLEND_MODE")
QDEF1(MP_QSTR_BLUE, (const byte*)"\x3b\x3b\x04" "BLUE")
QDEF1(MP_QSTR_BLUETOOTH, (const byte*)"\x73\x8a\x09" "BLUETOOTH")
QDEF1(MP_QSTR_BLUE_GREY, (const byte*)"\xcd\xe3\x09" "BLUE_GREY")
QDEF1(MP_QSTR_BORDER_COLOR, (const byte*)"\x0b\x1e\x0c" "BORDER_COLOR")
QDEF1(MP_QSTR_BORDER_COLOR_FILTERED, (const byte*)"\x75\xe0\x15" "BORDER_COLOR_FILTERED")
QDEF1(MP_QSTR_BORDER_OPA, (const byte*)"\x08\x2f\x0a" "BORDER_OPA")
QDEF1(MP_QSTR_BORDER_POST, (const byte*)"\x2e\x18\x0b" "BORDER_POST")
QDEF1(MP_QSTR_BORDER_SIDE, (const byte*)"\x2d\x8a\x0b" "BORDER_SIDE")
QDEF1(MP_QSTR_BORDER_WIDTH, (const byte*)"\xf0\x90\x0c" "BORDER_WIDTH")
QDEF1(MP_QSTR_BOTH, (const byte*)"\x14\x3f\x04" "BOTH")
QDEF1(MP_QSTR_BOTTOM, (const byte*)"\x6a\x29\x06" "BOTTOM")
QDEF1(MP_QSTR_BOTTOM_LEFT, (const byte*)"\xee\x17\x0b" "BOTTOM_LEFT")
QDEF1(MP_QSTR_BOTTOM_MID, (const byte*)"\xf5\x02\x0a" "BOTTOM_MID")
QDEF1(MP_QSTR_BOTTOM_RIGHT, (const byte*)"\x35\xb2\x0c" "BOTTOM_RIGHT")
QDEF1(MP_QSTR_BOX, (const byte*)"\xd0\xc3\x03" "BOX")
QDEF1(MP_QSTR_BREAK, (const byte*)"\x1a\xd9\x05" "BREAK")
QDEF1(MP_QSTR_BROWN, (const byte*)"\xc3\x12\x05" "BROWN")
QDEF1(MP_QSTR_BTN, (const byte*)"\xbd\xc4\x03" "BTN")
QDEF1(MP_QSTR_BTNMATRIX_BTN, (const byte*)"\x41\x4b\x0d" "BTNMATRIX_BTN")
QDEF1(MP_QSTR_BULLET, (const byte*)"\xa3\x9c\x06" "BULLET")
QDEF1(MP_QSTR_BUSY, (const byte*)"\xf8\x54\x04" "BUSY")
QDEF1(MP_QSTR_BUTTON, (const byte*)"\xf3\xda\x06" "BUTTON")
QDEF1(MP_QSTR_Battery, (const byte*)"\xc8\x2f\x07" "Battery")
QDEF1(MP_QSTR_Blob, (const byte*)"\x86\xd4\x04" "Blob")
QDEF1(MP_QSTR_BufferedWriter, (const byte*)"\xeb\x2c\x0e" "BufferedWriter")
QDEF1(MP_QSTR_BytesIO, (const byte*)"\x1a\xb7\x07" "BytesIO")
QDEF1(MP_QSTR_CALL, (const byte*)"\xa7\xc0\x04" "CALL")
QDEF1(MP_QSTR_CANCEL, (const byte*)"\x03\xac\x06" "CANCEL")
QDEF1(MP_QSTR_CB_ENUM_DATA, (const byte*)"\x67\x67\x0c" "CB_ENUM_DATA")
QDEF1(MP_QSTR_CB_ENUM_EVENT, (const byte*)"\x1b\x22\x0d" "CB_ENUM_EVENT")
QDEF1(MP_QSTR_CB_ENUM_URL, (const byte*)"\x9c\xd3\x0b" "CB_ENUM_URL")
QDEF1(MP_QSTR_CELL, (const byte*)"\xa3\xb0\x04" "CELL")
QDEF1(MP_QSTR_CELL_CTRL, (const byte*)"\xb5\x44\x09" "CELL_CTRL")
QDEF1(MP_QSTR_CENTER, (const byte*)"\x8e\xdb\x06" "CENTER")
QDEF1(MP_QSTR_CF, (const byte*)"\xe0\x72\x02" "CF")
QDEF1(MP_QSTR_CHANGED, (const byte*)"\x07\x18\x07" "CHANGED")
QDEF1(MP_QSTR_CHARAWRITE, (const byte*)"\xa1\x84\x0a" "CHARAWRITE")
QDEF1(MP_QSTR_CHARGE, (const byte*)"\xff\x11\x06" "CHARGE")
QDEF1(MP_QSTR_CHART_POINT, (const byte*)"\xfa\x8e\x0b" "CHART_POINT")
QDEF1(MP_QSTR_CHECKABLE, (const byte*)"\xe9\x25\x09" "CHECKABLE")
QDEF1(MP_QSTR_CHECKED, (const byte*)"\xe2\x94\x07" "CHECKED")
QDEF1(MP_QSTR_CHECKED_DISABLED, (const byte*)"\x6d\xd9\x10" "CHECKED_DISABLED")
QDEF1(MP_QSTR_CHECKED_PRESSED, (const byte*)"\x5b\xb6\x0f" "CHECKED_PRESSED")
QDEF1(MP_QSTR_CHECKED_RELEASED, (const byte*)"\xb0\xe2\x10" "CHECKED_RELEASED")
QDEF1(MP_QSTR_CHILD_CHANGED, (const byte*)"\xb2\x46\x0d" "CHILD_CHANGED")
QDEF1(MP_QSTR_CHILD_CREATED, (const byte*)"\x50\x56\x0d" "CHILD_CREATED")
QDEF1(MP_QSTR_CHILD_DELETED, (const byte*)"\x6d\x60\x0d" "CHILD_DELETED")
QDEF1(MP_QSTR_CIRCLE, (const byte*)"\xf7\x02\x06" "CIRCLE")
QDEF1(MP_QSTR_CIRCULAR, (const byte*)"\xb4\x76\x08" "CIRCULAR")
QDEF1(MP_QSTR_CLASS_EDITABLE, (const byte*)"\x82\xe9\x0e" "CLASS_EDITABLE")
QDEF1(MP_QSTR_CLASS_GROUP_DEF, (const byte*)"\x53\x91\x0f" "CLASS_GROUP_DEF")
QDEF1(MP_QSTR_CLICKABLE, (const byte*)"\x61\x65\x09" "CLICKABLE")
QDEF1(MP_QSTR_CLICKED, (const byte*)"\x6a\xd4\x07" "CLICKED")
QDEF1(MP_QSTR_CLICK_FOCUSABLE, (const byte*)"\x92\x17\x0f" "CLICK_FOCUSABLE")
QDEF1(MP_QSTR_CLICK_TRIG, (const byte*)"\x9c\x76\x0a" "CLICK_TRIG")
QDEF1(MP_QSTR_CLIP, (const byte*)"\x93\xdc\x04" "CLIP")
QDEF1(MP_QSTR_CLIP_CORNER, (const byte*)"\x6b\xfb\x0b" "CLIP_CORNER")
QDEF1(MP_QSTR_CLOSE, (const byte*)"\x53\x88\x05" "CLOSE")
QDEF1(MP_QSTR_CLOUD_MODE, (const byte*)"\x28\xd7\x0a" "CLOUD_MODE")
QDEF1(MP_QSTR_CODEC_IMAGE_SOURCE_NONE, (const byte*)"\x64\x77\x17" "CODEC_IMAGE_SOURCE_NONE")
QDEF1(MP_QSTR_CODEC_IMAG_SOURCE_IMAGE_BMP, (const byte*)"\x8c\x6a\x1b" "CODEC_IMAG_SOURCE_IMAGE_BMP")
QDEF1(MP_QSTR_CODEC_IMAG_SOURCE_IMAGE_GIF, (const byte*)"\x9b\x66\x1b" "CODEC_IMAG_SOURCE_IMAGE_GIF")
QDEF1(MP_QSTR_CODEC_IMAG_SOURCE_IMAGE_JPG, (const byte*)"\x2e\x89\x1b" "CODEC_IMAG_SOURCE_IMAGE_JPG")
QDEF1(MP_QSTR_CODEC_IMAG_SOURCE_IMAGE_PNG, (const byte*)"\xea\x1e\x1b" "CODEC_IMAG_SOURCE_IMAGE_PNG")
QDEF1(MP_QSTR_CODEC_IMAG_SOURCE_MAX, (const byte*)"\xbf\xd9\x15" "CODEC_IMAG_SOURCE_MAX")
QDEF1(MP_QSTR_COLOR, (const byte*)"\xb8\xed\x05" "COLOR")
QDEF1(MP_QSTR_COLOR_16, (const byte*)"\x80\x80\x08" "COLOR_16")
QDEF1(MP_QSTR_COLOR_FILTER_DSC, (const byte*)"\xcc\xd4\x10" "COLOR_FILTER_DSC")
QDEF1(MP_QSTR_COLOR_FILTER_OPA, (const byte*)"\xa6\xbe\x10" "COLOR_FILTER_OPA")
QDEF1(MP_QSTR_COLUMN, (const byte*)"\xd3\xce\x06" "COLUMN")
QDEF1(MP_QSTR_COLUMN_REVERSE, (const byte*)"\x4c\x21\x0e" "COLUMN_REVERSE")
QDEF1(MP_QSTR_COLUMN_WRAP, (const byte*)"\x78\x5c\x0b" "COLUMN_WRAP")
QDEF1(MP_QSTR_COLUMN_WRAP_REVERSE, (const byte*)"\xe7\x58\x13" "COLUMN_WRAP_REVERSE")
QDEF1(MP_QSTR_COMPRESSED, (const byte*)"\x42\xb8\x0a" "COMPRESSED")
QDEF1(MP_QSTR_COMPRESSED_NO_PREFILTER, (const byte*)"\x44\x7d\x17" "COMPRESSED_NO_PREFILTER")
QDEF1(MP_QSTR_CONTENT, (const byte*)"\x4c\x3d\x07" "CONTENT")
QDEF1(MP_QSTR_COORD, (const byte*)"\x90\x03\x05" "COORD")
QDEF1(MP_QSTR_COPY, (const byte*)"\x20\xdb\x04" "COPY")
QDEF1(MP_QSTR_COVER, (const byte*)"\xe8\x6b\x05" "COVER")
QDEF1(MP_QSTR_COVER_CHECK, (const byte*)"\xb1\x0f\x0b" "COVER_CHECK")
QDEF1(MP_QSTR_COVER_RES, (const byte*)"\x73\xfc\x09" "COVER_RES")
QDEF1(MP_QSTR_CTRL, (const byte*)"\x2c\xfd\x04" "CTRL")
QDEF1(MP_QSTR_CUR, (const byte*)"\x01\xd1\x03" "CUR")
QDEF1(MP_QSTR_CURSOR, (const byte*)"\xcf\x1f\x06" "CURSOR")
QDEF1(MP_QSTR_CUSTOM_1, (const byte*)"\x78\x0a\x08" "CUSTOM_1")
QDEF1(MP_QSTR_CUSTOM_2, (const byte*)"\x7b\x0a\x08" "CUSTOM_2")
QDEF1(MP_QSTR_CUSTOM_3, (const byte*)"\x7a\x0a\x08" "CUSTOM_3")
QDEF1(MP_QSTR_CUSTOM_4, (const byte*)"\x7d\x0a\x08" "CUSTOM_4")
QDEF1(MP_QSTR_CUSTOM_FIRST, (const byte*)"\x93\xa3\x0c" "CUSTOM_FIRST")
QDEF1(MP_QSTR_CUT, (const byte*)"\x07\xd1\x03" "CUT")
QDEF1(MP_QSTR_CYAN, (const byte*)"\x10\x26\x04" "CYAN")
QDEF1(MP_QSTR_C_Array, (const byte*)"\xe0\xb4\x07" "C_Array")
QDEF1(MP_QSTR_C_Pointer, (const byte*)"\x02\xab\x09" "C_Pointer")
QDEF1(MP_QSTR_CancelledError, (const byte*)"\xf6\x9b\x0e" "CancelledError")
QDEF1(MP_QSTR_Charger, (const byte*)"\x8d\x2c\x07" "Charger")
QDEF1(MP_QSTR_DATA_INPUT_CAMERA_NUMBER_BACK, (const byte*)"\xb2\x09\x1d" "DATA_INPUT_CAMERA_NUMBER_BACK")
QDEF1(MP_QSTR_DATA_INPUT_CAMERA_NUMBER_FRONT, (const byte*)"\xf8\x06\x1e" "DATA_INPUT_CAMERA_NUMBER_FRONT")
QDEF1(MP_QSTR_DATA_INPUT_CAMERA_NUMBER_MAX, (const byte*)"\x4d\x11\x1c" "DATA_INPUT_CAMERA_NUMBER_MAX")
QDEF1(MP_QSTR_DATA_INPUT_CAMERA_NUMBER_NONE, (const byte*)"\x13\xd0\x1d" "DATA_INPUT_CAMERA_NUMBER_NONE")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_CAMERA_IP, (const byte*)"\xde\x4d\x1b" "DATA_INPUT_SOURCE_CAMERA_IP")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_CAMERA_LOCAL, (const byte*)"\xca\x07\x1e" "DATA_INPUT_SOURCE_CAMERA_LOCAL")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_CAMERA_USB, (const byte*)"\x23\x16\x1c" "DATA_INPUT_SOURCE_CAMERA_USB")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_IMAGE_BMP, (const byte*)"\x46\xd1\x1b" "DATA_INPUT_SOURCE_IMAGE_BMP")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_IMAGE_GIF, (const byte*)"\x51\xcd\x1b" "DATA_INPUT_SOURCE_IMAGE_GIF")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_IMAGE_JPG, (const byte*)"\xe4\xad\x1b" "DATA_INPUT_SOURCE_IMAGE_JPG")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_IMAGE_PNG, (const byte*)"\x20\x74\x1b" "DATA_INPUT_SOURCE_IMAGE_PNG")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_MAX, (const byte*)"\x75\x6b\x15" "DATA_INPUT_SOURCE_MAX")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_NONE, (const byte*)"\xab\x4b\x16" "DATA_INPUT_SOURCE_NONE")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_VIDEO_FILE, (const byte*)"\xc9\x4d\x1c" "DATA_INPUT_SOURCE_VIDEO_FILE")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_VIDEO_RTMP, (const byte*)"\x74\x14\x1c" "DATA_INPUT_SOURCE_VIDEO_RTMP")
QDEF1(MP_QSTR_DATA_INPUT_SOURCE_VIDEO_RTSP, (const byte*)"\xaa\x16\x1c" "DATA_INPUT_SOURCE_VIDEO_RTSP")
QDEF1(MP_QSTR_DEEPSLEEP, (const byte*)"\x7e\xf3\x09" "DEEPSLEEP")
QDEF1(MP_QSTR_DEEPSLEEP_RESET, (const byte*)"\x14\x0e\x0f" "DEEPSLEEP_RESET")
QDEF1(MP_QSTR_DEEP_ORANGE, (const byte*)"\xbe\x1a\x0b" "DEEP_ORANGE")
QDEF1(MP_QSTR_DEEP_PURPLE, (const byte*)"\x80\x35\x0b" "DEEP_PURPLE")
QDEF1(MP_QSTR_DEF, (const byte*)"\x82\xba\x03" "DEF")
QDEF1(MP_QSTR_DEFAULT, (const byte*)"\x2e\xd8\x07" "DEFAULT")
QDEF1(MP_QSTR_DEFOCUSED, (const byte*)"\x29\xc4\x09" "DEFOCUSED")
QDEF1(MP_QSTR_DEL, (const byte*)"\x88\xba\x03" "DEL")
QDEF1(MP_QSTR_DELETE, (const byte*)"\x1c\x2c\x06" "DELETE")
QDEF1(MP_QSTR_DENIED, (const byte*)"\x22\xf0\x06" "DENIED")
QDEF1(MP_QSTR_DEPTH, (const byte*)"\x08\xb5\x05" "DEPTH")
QDEF1(MP_QSTR_DIR, (const byte*)"\x1a\xbb\x03" "DIR")
QDEF1(MP_QSTR_DIRECTORY, (const byte*)"\xac\x75\x09" "DIRECTORY")
QDEF1(MP_QSTR_DISABLED, (const byte*)"\x95\x70\x08" "DISABLED")
QDEF1(MP_QSTR_DISP_ROT, (const byte*)"\xfd\xef\x08" "DISP_ROT")
QDEF1(MP_QSTR_DIV_LINE_HOR, (const byte*)"\xc5\x13\x0c" "DIV_LINE_HOR")
QDEF1(MP_QSTR_DIV_LINE_INIT, (const byte*)"\x6a\x38\x0d" "DIV_LINE_INIT")
QDEF1(MP_QSTR_DIV_LINE_VER, (const byte*)"\x11\xd7\x0c" "DIV_LINE_VER")
QDEF1(MP_QSTR_DOT, (const byte*)"\x5a\xbc\x03" "DOT")
QDEF1(MP_QSTR_DOWN, (const byte*)"\x37\x47\x04" "DOWN")
QDEF1(MP_QSTR_DOWNLOAD, (const byte*)"\x91\x3e\x08" "DOWNLOAD")
QDEF1(MP_QSTR_DPI, (const byte*)"\x38\xbc\x03" "DPI")
QDEF1(MP_QSTR_DRAW_MAIN, (const byte*)"\x91\xed\x09" "DRAW_MAIN")
QDEF1(MP_QSTR_DRAW_MAIN_BEGIN, (const byte*)"\x29\xf2\x0f" "DRAW_MAIN_BEGIN")
QDEF1(MP_QSTR_DRAW_MAIN_END, (const byte*)"\xe1\xbb\x0d" "DRAW_MAIN_END")
QDEF1(MP_QSTR_DRAW_MASK_LINE_SIDE, (const byte*)"\x5b\xda\x13" "DRAW_MASK_LINE_SIDE")
QDEF1(MP_QSTR_DRAW_MASK_RES, (const byte*)"\x55\x1c\x0d" "DRAW_MASK_RES")
QDEF1(MP_QSTR_DRAW_MASK_TYPE, (const byte*)"\x09\xf0\x0e" "DRAW_MASK_TYPE")
QDEF1(MP_QSTR_DRAW_PART, (const byte*)"\x4d\xd6\x09" "DRAW_PART")
QDEF1(MP_QSTR_DRAW_PART_BEGIN, (const byte*)"\xf5\xd0\x0f" "DRAW_PART_BEGIN")
QDEF1(MP_QSTR_DRAW_PART_END, (const byte*)"\xbd\xe7\x0d" "DRAW_PART_END")
QDEF1(MP_QSTR_DRAW_POST, (const byte*)"\x22\xac\x09" "DRAW_POST")
QDEF1(MP_QSTR_DRAW_POST_BEGIN, (const byte*)"\x5a\x0c\x0f" "DRAW_POST_BEGIN")
QDEF1(MP_QSTR_DRAW_POST_END, (const byte*)"\xd2\x85\x0d" "DRAW_POST_END")
QDEF1(MP_QSTR_DRIVE, (const byte*)"\xa9\xe9\x05" "DRIVE")
QDEF1(MP_QSTR_DROPDOWN_POS, (const byte*)"\xcd\x6b\x0c" "DROPDOWN_POS")
QDEF1(MP_QSTR_DUMMY, (const byte*)"\x2d\x4e\x05" "DUMMY")
QDEF1(MP_QSTR_DataInput, (const byte*)"\x63\x48\x09" "DataInput")
QDEF1(MP_QSTR_DecompIO, (const byte*)"\x93\xb7\x08" "DecompIO")
QDEF1(MP_QSTR_DevInfo, (const byte*)"\xdc\xe0\x07" "DevInfo")
QDEF1(MP_QSTR_Device, (const byte*)"\x1d\xb7\x06" "Device")
QDEF1(MP_QSTR_EACCES, (const byte*)"\x37\xc2\x06" "EACCES")
QDEF1(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x11\x0a" "EADDRINUSE")
QDEF1(MP_QSTR_EAGAIN, (const byte*)"\x20\xec\x06" "EAGAIN")
QDEF1(MP_QSTR_EALREADY, (const byte*)"\x46\x15\x08" "EALREADY")
QDEF1(MP_QSTR_EBADF, (const byte*)"\x61\xa3\x05" "EBADF")
QDEF1(MP_QSTR_ECONNABORTED, (const byte*)"\x27\xab\x0c" "ECONNABORTED")
QDEF1(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x2c\x0c" "ECONNREFUSED")
QDEF1(MP_QSTR_ECONNRESET, (const byte*)"\x19\xfb\x0a" "ECONNRESET")
QDEF1(MP_QSTR_EDIT, (const byte*)"\x59\x74\x04" "EDIT")
QDEF1(MP_QSTR_EDITED, (const byte*)"\xf8\xe6\x06" "EDITED")
QDEF1(MP_QSTR_EEXIST, (const byte*)"\x53\xad\x06" "EEXIST")
QDEF1(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x25\x0c" "EHOSTUNREACH")
QDEF1(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\xa0\x0b" "EINPROGRESS")
QDEF1(MP_QSTR_EINVAL, (const byte*)"\x5c\xff\x06" "EINVAL")
QDEF1(MP_QSTR_EIO, (const byte*)"\x86\xa6\x03" "EIO")
QDEF1(MP_QSTR_EISDIR, (const byte*)"\xa5\x4f\x06" "EISDIR")
QDEF1(MP_QSTR_EJECT, (const byte*)"\x18\x16\x05" "EJECT")
QDEF1(MP_QSTR_ELLIPSIS, (const byte*)"\x10\x85\x08" "ELLIPSIS")
QDEF1(MP_QSTR_ENCODER, (const byte*)"\x31\x4d\x07" "ENCODER")
QDEF1(MP_QSTR_END, (const byte*)"\x2a\xa7\x03" "END")
QDEF1(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x87\x07" "ENOBUFS")
QDEF1(MP_QSTR_ENODEV, (const byte*)"\xb6\x67\x06" "ENODEV")
QDEF1(MP_QSTR_ENOENT, (const byte*)"\x5e\x65\x06" "ENOENT")
QDEF1(MP_QSTR_ENOMEM, (const byte*)"\xa4\x85\x06" "ENOMEM")
QDEF1(MP_QSTR_ENOTCONN, (const byte*)"\x79\xd7\x08" "ENOTCONN")
QDEF1(MP_QSTR_ENTER, (const byte*)"\x4d\x56\x05" "ENTER")
QDEF1(MP_QSTR_ENUM_LV_ANIM_PLAYTIME, (const byte*)"\xc9\xae\x15" "ENUM_LV_ANIM_PLAYTIME")
QDEF1(MP_QSTR_ENUM_LV_ANIM_REPEAT, (const byte*)"\x2f\x0c\x13" "ENUM_LV_ANIM_REPEAT")
QDEF1(MP_QSTR_ENUM_LV_BTNMATRIX_BTN, (const byte*)"\x88\x36\x15" "ENUM_LV_BTNMATRIX_BTN")
QDEF1(MP_QSTR_ENUM_LV_CHART_POINT, (const byte*)"\xb3\x57\x13" "ENUM_LV_CHART_POINT")
QDEF1(MP_QSTR_ENUM_LV_COLOR, (const byte*)"\x31\xc6\x0d" "ENUM_LV_COLOR")
QDEF1(MP_QSTR_ENUM_LV_COLOR_16, (const byte*)"\xe9\xcd\x10" "ENUM_LV_COLOR_16")
QDEF1(MP_QSTR_ENUM_LV_COORD, (const byte*)"\xd9\xe6\x0d" "ENUM_LV_COORD")
QDEF1(MP_QSTR_ENUM_LV_DPI, (const byte*)"\xf1\x52\x0b" "ENUM_LV_DPI")
QDEF1(MP_QSTR_ENUM_LV_DROPDOWN_POS, (const byte*)"\x64\xb9\x14" "ENUM_LV_DROPDOWN_POS")
QDEF1(MP_QSTR_ENUM_LV_GRID, (const byte*)"\x34\x4d\x0c" "ENUM_LV_GRID")
QDEF1(MP_QSTR_ENUM_LV_GRID_TEMPLATE, (const byte*)"\x9b\xdd\x15" "ENUM_LV_GRID_TEMPLATE")
QDEF1(MP_QSTR_ENUM_LV_IMG_ZOOM, (const byte*)"\x47\x50\x10" "ENUM_LV_IMG_ZOOM")
QDEF1(MP_QSTR_ENUM_LV_LABEL_DOT, (const byte*)"\xea\x30\x11" "ENUM_LV_LABEL_DOT")
QDEF1(MP_QSTR_ENUM_LV_LABEL_POS, (const byte*)"\xf9\xfc\x11" "ENUM_LV_LABEL_POS")
QDEF1(MP_QSTR_ENUM_LV_LABEL_TEXT_SELECTION, (const byte*)"\x37\xd5\x1c" "ENUM_LV_LABEL_TEXT_SELECTION")
QDEF1(MP_QSTR_ENUM_LV_LOG_LEVEL, (const byte*)"\x61\x8a\x11" "ENUM_LV_LOG_LEVEL")
QDEF1(MP_QSTR_ENUM_LV_OBJ_FLAG_FLEX_IN_NEW, (const byte*)"\xab\xa6\x1c" "ENUM_LV_OBJ_FLAG_FLEX_IN_NEW")
QDEF1(MP_QSTR_ENUM_LV_RADIUS, (const byte*)"\xd4\xbc\x0e" "ENUM_LV_RADIUS")
QDEF1(MP_QSTR_ENUM_LV_SIZE, (const byte*)"\xc9\xd2\x0c" "ENUM_LV_SIZE")
QDEF1(MP_QSTR_ENUM_LV_TABLE_CELL, (const byte*)"\xeb\x36\x12" "ENUM_LV_TABLE_CELL")
QDEF1(MP_QSTR_ENUM_LV_TEXTAREA_CURSOR, (const byte*)"\xf3\xa7\x17" "ENUM_LV_TEXTAREA_CURSOR")
QDEF1(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x97\x0a" "EOPNOTSUPP")
QDEF1(MP_QSTR_EPERM, (const byte*)"\xea\x7f\x05" "EPERM")
QDEF1(MP_QSTR_ERROR, (const byte*)"\x9d\x19\x05" "ERROR")
QDEF1(MP_QSTR_ESC, (const byte*)"\x50\xa8\x03" "ESC")
QDEF1(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\xf8\x09" "ETIMEDOUT")
QDEF1(MP_QSTR_EVENT, (const byte*)"\x29\x8a\x05" "EVENT")
QDEF1(MP_QSTR_EVENT_BUBBLE, (const byte*)"\x08\x1e\x0c" "EVENT_BUBBLE")
QDEF1(MP_QSTR_EXPAND, (const byte*)"\x23\xcb\x06" "EXPAND")
QDEF1(MP_QSTR_EXT0_WAKE, (const byte*)"\x5b\xf3\x09" "EXT0_WAKE")
QDEF1(MP_QSTR_EXT1_WAKE, (const byte*)"\xfa\xda\x09" "EXT1_WAKE")
QDEF1(MP_QSTR_EYE_CLOSE, (const byte*)"\xd5\x14\x09" "EYE_CLOSE")
QDEF1(MP_QSTR_EYE_OPEN, (const byte*)"\x57\x69\x08" "EYE_OPEN")
QDEF1(MP_QSTR_FADE, (const byte*)"\x83\xf2\x04" "FADE")
QDEF1(MP_QSTR_FADE_ON, (const byte*)"\x9d\xe8\x07" "FADE_ON")
QDEF1(MP_QSTR_FALSE, (const byte*)"\x78\x67\x05" "FALSE")
QDEF1(MP_QSTR_FILE, (const byte*)"\x83\x13\x04" "FILE")
QDEF1(MP_QSTR_FIT, (const byte*)"\x1e\xb3\x03" "FIT")
QDEF1(MP_QSTR_FIXED, (const byte*)"\xb3\xb7\x05" "FIXED")
QDEF1(MP_QSTR_FLAG, (const byte*)"\x29\x29\x04" "FLAG")
QDEF1(MP_QSTR_FLEX_ALIGN, (const byte*)"\xe0\xdc\x0a" "FLEX_ALIGN")
QDEF1(MP_QSTR_FLEX_FLOW, (const byte*)"\x1f\x83\x09" "FLEX_FLOW")
QDEF1(MP_QSTR_FLOAT32, (const byte*)"\xb4\x87\x07" "FLOAT32")
QDEF1(MP_QSTR_FLOAT64, (const byte*)"\x17\x87\x07" "FLOAT64")
QDEF1(MP_QSTR_FLOATING, (const byte*)"\xf5\x54\x08" "FLOATING")
QDEF1(MP_QSTR_FOCUSED, (const byte*)"\x08\xf4\x07" "FOCUSED")
QDEF1(MP_QSTR_FOCUS_KEY, (const byte*)"\x61\xd8\x09" "FOCUS_KEY")
QDEF1(MP_QSTR_FONT_ASC12_8, (const byte*)"\xbc\xfc\x0c" "FONT_ASC12_8")
QDEF1(MP_QSTR_FONT_ASC16_8, (const byte*)"\xb8\x0c\x0c" "FONT_ASC16_8")
QDEF1(MP_QSTR_FONT_ASC24_12, (const byte*)"\xe2\xaa\x0d" "FONT_ASC24_12")
QDEF1(MP_QSTR_FONT_ASC32_16, (const byte*)"\xe1\xa3\x0d" "FONT_ASC32_16")
QDEF1(MP_QSTR_FONT_ASC8_8, (const byte*)"\xe7\x5b\x0b" "FONT_ASC8_8")
QDEF1(MP_QSTR_FONT_FMT_TXT, (const byte*)"\xf1\x1a\x0c" "FONT_FMT_TXT")
QDEF1(MP_QSTR_FONT_FMT_TXT_CMAP, (const byte*)"\x51\xbd\x11" "FONT_FMT_TXT_CMAP")
QDEF1(MP_QSTR_FONT_HZK12, (const byte*)"\x13\xad\x0a" "FONT_HZK12")
QDEF1(MP_QSTR_FONT_HZK16, (const byte*)"\x17\xad\x0a" "FONT_HZK16")
QDEF1(MP_QSTR_FONT_HZK24, (const byte*)"\x76\xad\x0a" "FONT_HZK24")
QDEF1(MP_QSTR_FONT_HZK32, (const byte*)"\x51\xad\x0a" "FONT_HZK32")
QDEF1(MP_QSTR_FONT_SUBPX, (const byte*)"\x05\x0e\x0a" "FONT_SUBPX")
QDEF1(MP_QSTR_FOREGROUND, (const byte*)"\x5e\x52\x0a" "FOREGROUND")
QDEF1(MP_QSTR_FORMAT0_FULL, (const byte*)"\x9a\x9c\x0c" "FORMAT0_FULL")
QDEF1(MP_QSTR_FORMAT0_TINY, (const byte*)"\x83\x16\x0c" "FORMAT0_TINY")
QDEF1(MP_QSTR_FS_ERR, (const byte*)"\xaa\x8a\x06" "FS_ERR")
QDEF1(MP_QSTR_FS_MODE, (const byte*)"\xac\x81\x07" "FS_MODE")
QDEF1(MP_QSTR_FS_RES, (const byte*)"\x0b\xd9\x06" "FS_RES")
QDEF1(MP_QSTR_FS_SEEK, (const byte*)"\x57\x58\x07" "FS_SEEK")
QDEF1(MP_QSTR_FULL, (const byte*)"\x96\x47\x04" "FULL")
QDEF1(MP_QSTR_FULL_COVER, (const byte*)"\x64\xcf\x0a" "FULL_COVER")
QDEF1(MP_QSTR_FallingEdge, (const byte*)"\xa1\x8f\x0b" "FallingEdge")
QDEF1(MP_QSTR_FileIO, (const byte*)"\xc5\x15\x06" "FileIO")
QDEF1(MP_QSTR_FrameBuffer, (const byte*)"\xd8\xbe\x0b" "FrameBuffer")
QDEF1(MP_QSTR_FrameBuffer1, (const byte*)"\xe9\x99\x0c" "FrameBuffer1")
QDEF1(MP_QSTR_GESTURE, (const byte*)"\x02\x99\x07" "GESTURE")
QDEF1(MP_QSTR_GESTURE_BUBBLE, (const byte*)"\x43\xa1\x0e" "GESTURE_BUBBLE")
QDEF1(MP_QSTR_GET_SELF_SIZE, (const byte*)"\xaa\xbf\x0d" "GET_SELF_SIZE")
QDEF1(MP_QSTR_GPIO, (const byte*)"\x14\xe0\x04" "GPIO")
QDEF1(MP_QSTR_GPS, (const byte*)"\xe1\xc0\x03" "GPS")
QDEF1(MP_QSTR_GRAD_DIR, (const byte*)"\x15\x01\x08" "GRAD_DIR")
QDEF1(MP_QSTR_GREEN, (const byte*)"\xde\x98\x05" "GREEN")
QDEF1(MP_QSTR_GREY, (const byte*)"\x8c\xc6\x04" "GREY")
QDEF1(MP_QSTR_GREY_ALPHA, (const byte*)"\x67\x4c\x0a" "GREY_ALPHA")
QDEF1(MP_QSTR_GRID, (const byte*)"\x1d\xc7\x04" "GRID")
QDEF1(MP_QSTR_GRID_ALIGN, (const byte*)"\x8f\x3d\x0a" "GRID_ALIGN")
QDEF1(MP_QSTR_GRID_TEMPLATE, (const byte*)"\xd2\xf0\x0d" "GRID_TEMPLATE")
QDEF1(MP_QSTR_GROUP_REFOCUS_POLICY, (const byte*)"\x61\xe3\x14" "GROUP_REFOCUS_POLICY")
QDEF1(MP_QSTR_GS2_HMSB, (const byte*)"\x28\xc3\x08" "GS2_HMSB")
QDEF1(MP_QSTR_GS4_HMSB, (const byte*)"\x6e\x73\x08" "GS4_HMSB")
QDEF1(MP_QSTR_GS8, (const byte*)"\xa9\xc0\x03" "GS8")
QDEF1(MP_QSTR_Gateway, (const byte*)"\x9d\x89\x07" "Gateway")
QDEF1(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x51\x0a" "HARD_RESET")
QDEF1(MP_QSTR_HEIGHT, (const byte*)"\xfa\x57\x06" "HEIGHT")
QDEF1(MP_QSTR_HIDDEN, (const byte*)"\xef\x84\x06" "HIDDEN")
QDEF1(MP_QSTR_HIT_TEST, (const byte*)"\xf9\x9c\x08" "HIT_TEST")
QDEF1(MP_QSTR_HOME, (const byte*)"\x6a\x76\x04" "HOME")
QDEF1(MP_QSTR_HOR, (const byte*)"\x50\xec\x03" "HOR")
QDEF1(MP_QSTR_HOVERED, (const byte*)"\x82\x05\x07" "HOVERED")
QDEF1(MP_QSTR_HTTPConnection, (const byte*)"\xcb\x3a\x0e" "HTTPConnection")
QDEF1(MP_QSTR_HUE, (const byte*)"\x9d\xee\x03" "HUE")
QDEF1(MP_QSTR_HW_ERR, (const byte*)"\x60\x4a\x06" "HW_ERR")
QDEF1(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF1(MP_QSTR_IDLE, (const byte*)"\xa1\xe4\x04" "IDLE")
QDEF1(MP_QSTR_IGNORE_LAYOUT, (const byte*)"\x98\x51\x0d" "IGNORE_LAYOUT")
QDEF1(MP_QSTR_IMAGE, (const byte*)"\x62\xa0\x05" "IMAGE")
QDEF1(MP_QSTR_IMAGE_PROC_CPU, (const byte*)"\x2a\x71\x0e" "IMAGE_PROC_CPU")
QDEF1(MP_QSTR_IMAGE_PROC_HAL, (const byte*)"\x89\x40\x0e" "IMAGE_PROC_HAL")
QDEF1(MP_QSTR_IMAGE_PROC_MAX, (const byte*)"\x18\x44\x0e" "IMAGE_PROC_MAX")
QDEF1(MP_QSTR_IMAGE_PROC_NONE, (const byte*)"\xe6\x92\x0f" "IMAGE_PROC_NONE")
QDEF1(MP_QSTR_IMAGE_PROC_OPENCV, (const byte*)"\x0d\x1b\x11" "IMAGE_PROC_OPENCV")
QDEF1(MP_QSTR_IMG_OPA, (const byte*)"\xe7\x46\x07" "IMG_OPA")
QDEF1(MP_QSTR_IMG_RECOLOR, (const byte*)"\x53\x62\x0b" "IMG_RECOLOR")
QDEF1(MP_QSTR_IMG_RECOLOR_FILTERED, (const byte*)"\x2d\xab\x14" "IMG_RECOLOR_FILTERED")
QDEF1(MP_QSTR_IMG_RECOLOR_OPA, (const byte*)"\x72\x69\x0f" "IMG_RECOLOR_OPA")
QDEF1(MP_QSTR_IMG_ZOOM, (const byte*)"\x6e\x01\x08" "IMG_ZOOM")
QDEF1(MP_QSTR_IN, (const byte*)"\x22\x73\x02" "IN")
QDEF1(MP_QSTR_INDEV_STATE, (const byte*)"\xfd\x1c\x0b" "INDEV_STATE")
QDEF1(MP_QSTR_INDEV_TYPE, (const byte*)"\x72\xf7\x0a" "INDEV_TYPE")
QDEF1(MP_QSTR_INDEXED_1BIT, (const byte*)"\x8b\x4d\x0c" "INDEXED_1BIT")
QDEF1(MP_QSTR_INDEXED_2BIT, (const byte*)"\x68\xd1\x0c" "INDEXED_2BIT")
QDEF1(MP_QSTR_INDEXED_4BIT, (const byte*)"\x2e\x77\x0c" "INDEXED_4BIT")
QDEF1(MP_QSTR_INDEXED_8BIT, (const byte*)"\xa2\x09\x0c" "INDEXED_8BIT")
QDEF1(MP_QSTR_INDICATOR, (const byte*)"\x44\xf7\x09" "INDICATOR")
QDEF1(MP_QSTR_INDICATOR_TYPE, (const byte*)"\xc3\xbc\x0e" "INDICATOR_TYPE")
QDEF1(MP_QSTR_INDIGO, (const byte*)"\x87\x6a\x06" "INDIGO")
QDEF1(MP_QSTR_INFINITE, (const byte*)"\xfb\xbf\x08" "INFINITE")
QDEF1(MP_QSTR_INFO, (const byte*)"\xeb\xbb\x04" "INFO")
QDEF1(MP_QSTR_INHERIT, (const byte*)"\x60\x44\x07" "INHERIT")
QDEF1(MP_QSTR_INSERT, (const byte*)"\xd2\x58\x06" "INSERT")
QDEF1(MP_QSTR_INT, (const byte*)"\x36\xd7\x03" "INT")
QDEF1(MP_QSTR_INT16, (const byte*)"\x91\x76\x05" "INT16")
QDEF1(MP_QSTR_INT32, (const byte*)"\x57\x76\x05" "INT32")
QDEF1(MP_QSTR_INT64, (const byte*)"\xf4\x75\x05" "INT64")
QDEF1(MP_QSTR_INT8, (const byte*)"\xce\xbd\x04" "INT8")
QDEF1(MP_QSTR_INTERNAL, (const byte*)"\x42\xcc\x08" "INTERNAL")
QDEF1(MP_QSTR_INV, (const byte*)"\x34\xd7\x03" "INV")
QDEF1(MP_QSTR_INV_PARAM, (const byte*)"\xc4\x97\x09" "INV_PARAM")
QDEF1(MP_QSTR_IOBase, (const byte*)"\x36\xbe\x06" "IOBase")
QDEF1(MP_QSTR_IPPROTO_IP, (const byte*)"\x0c\x8e\x0a" "IPPROTO_IP")
QDEF1(MP_QSTR_IPPROTO_TCP, (const byte*)"\xb2\xde\x0b" "IPPROTO_TCP")
QDEF1(MP_QSTR_IPPROTO_UDP, (const byte*)"\x54\xdb\x0b" "IPPROTO_UDP")
QDEF1(MP_QSTR_IP_ADD_MEMBERSHIP, (const byte*)"\x6f\x5b\x11" "IP_ADD_MEMBERSHIP")
QDEF1(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\xc0\x0b" "IRQ_FALLING")
QDEF1(MP_QSTR_IRQ_RISING, (const byte*)"\x78\xed\x0a" "IRQ_RISING")
QDEF1(MP_QSTR_ITEMS, (const byte*)"\x03\x74\x05" "ITEMS")
QDEF1(MP_QSTR_ImageCodec, (const byte*)"\xac\x7e\x0a" "ImageCodec")
QDEF1(MP_QSTR_ImageProc, (const byte*)"\x6c\x19\x09" "ImageProc")
QDEF1(MP_QSTR_KEY, (const byte*)"\x12\xf1\x03" "KEY")
QDEF1(MP_QSTR_KEYBOARD, (const byte*)"\xa8\x7e\x08" "KEYBOARD")
QDEF1(MP_QSTR_KEYPAD, (const byte*)"\x27\xd3\x06" "KEYPAD")
QDEF1(MP_QSTR_KNOB, (const byte*)"\xcd\xe5\x04" "KNOB")
QDEF1(MP_QSTR_KNOB_LEFT, (const byte*)"\xa9\x4f\x09" "KNOB_LEFT")
QDEF1(MP_QSTR_LABEL_DOT, (const byte*)"\xe3\x4c\x09" "LABEL_DOT")
QDEF1(MP_QSTR_LABEL_POS, (const byte*)"\xf0\x18\x09" "LABEL_POS")
QDEF1(MP_QSTR_LABEL_TEXT_SELECTION, (const byte*)"\x9e\x4b\x14" "LABEL_TEXT_SELECTION")
QDEF1(MP_QSTR_LAST, (const byte*)"\x2f\x5f\x04" "LAST")
QDEF1(MP_QSTR_LAYOUT, (const byte*)"\x9f\xfb\x06" "LAYOUT")
QDEF1(MP_QSTR_LAYOUT_1, (const byte*)"\x11\x53\x08" "LAYOUT_1")
QDEF1(MP_QSTR_LAYOUT_2, (const byte*)"\x12\x53\x08" "LAYOUT_2")
QDEF1(MP_QSTR_LAYOUT_CHANGED, (const byte*)"\x02\x97\x0e" "LAYOUT_CHANGED")
QDEF1(MP_QSTR_LAYOUT_FLEX, (const byte*)"\x97\x8b\x0b" "LAYOUT_FLEX")
QDEF1(MP_QSTR_LAYOUT_GRID, (const byte*)"\x38\x22\x0b" "LAYOUT_GRID")
QDEF1(MP_QSTR_LCT, (const byte*)"\xde\xdc\x03" "LCT")
QDEF1(MP_QSTR_LEAVE, (const byte*)"\x9e\x3d\x05" "LEAVE")
QDEF1(MP_QSTR_LEFT, (const byte*)"\x9e\x6d\x04" "LEFT")
QDEF1(MP_QSTR_LEFT_MID, (const byte*)"\x01\x43\x08" "LEFT_MID")
QDEF1(MP_QSTR_LIGHT_BLUE, (const byte*)"\x5a\xfb\x0a" "LIGHT_BLUE")
QDEF1(MP_QSTR_LIGHT_GREEN, (const byte*)"\x5f\x7d\x0b" "LIGHT_GREEN")
QDEF1(MP_QSTR_LIME, (const byte*)"\xe8\x3c\x04" "LIME")
QDEF1(MP_QSTR_LINE, (const byte*)"\x8b\x3c\x04" "LINE")
QDEF1(MP_QSTR_LINE_AND_POINT, (const byte*)"\xec\xf9\x0e" "LINE_AND_POINT")
QDEF1(MP_QSTR_LINE_COLOR, (const byte*)"\xa9\x53\x0a" "LINE_COLOR")
QDEF1(MP_QSTR_LINE_COLOR_FILTERED, (const byte*)"\x57\x38\x13" "LINE_COLOR_FILTERED")
QDEF1(MP_QSTR_LINE_DASH_GAP, (const byte*)"\x83\x48\x0d" "LINE_DASH_GAP")
QDEF1(MP_QSTR_LINE_DASH_WIDTH, (const byte*)"\xd3\x9e\x0f" "LINE_DASH_WIDTH")
QDEF1(MP_QSTR_LINE_OPA, (const byte*)"\xaa\x84\x08" "LINE_OPA")
QDEF1(MP_QSTR_LINE_ROUNDED, (const byte*)"\xb7\xb0\x0c" "LINE_ROUNDED")
QDEF1(MP_QSTR_LINE_WIDTH, (const byte*)"\x12\xb6\x0a" "LINE_WIDTH")
QDEF1(MP_QSTR_LIST, (const byte*)"\x27\x3d\x04" "LIST")
QDEF1(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x5b\x0d" "LITTLE_ENDIAN")
QDEF1(MP_QSTR_LOCKED, (const byte*)"\xcf\x3f\x06" "LOCKED")
QDEF1(MP_QSTR_LOG_DEBUG, (const byte*)"\x6f\xdb\x09" "LOG_DEBUG")
QDEF1(MP_QSTR_LOG_ERROR, (const byte*)"\x06\xce\x09" "LOG_ERROR")
QDEF1(MP_QSTR_LOG_FATAL, (const byte*)"\x60\x81\x09" "LOG_FATAL")
QDEF1(MP_QSTR_LOG_INFO, (const byte*)"\xd0\x75\x08" "LOG_INFO")
QDEF1(MP_QSTR_LOG_LEVEL, (const byte*)"\x68\xc5\x09" "LOG_LEVEL")
QDEF1(MP_QSTR_LOG_WARN, (const byte*)"\x54\xad\x08" "LOG_WARN")
QDEF1(MP_QSTR_LONG, (const byte*)"\x0f\x65\x04" "LONG")
QDEF1(MP_QSTR_LONGLONG, (const byte*)"\x85\xd4\x08" "LONGLONG")
QDEF1(MP_QSTR_LONG_PRESSED, (const byte*)"\xb6\xf6\x0c" "LONG_PRESSED")
QDEF1(MP_QSTR_LONG_PRESSED_REPEAT, (const byte*)"\x5e\x31\x13" "LONG_PRESSED_REPEAT")
QDEF1(MP_QSTR_LOOP, (const byte*)"\x39\x65\x04" "LOOP")
QDEF1(MP_QSTR_LSB, (const byte*)"\xd8\xde\x03" "LSB")
QDEF1(MP_QSTR_LTR, (const byte*)"\xaf\xde\x03" "LTR")
QDEF1(MP_QSTR_LV_ALIGN, (const byte*)"\xcd\xd1\x08" "LV_ALIGN")
QDEF1(MP_QSTR_LV_ANIM, (const byte*)"\x2b\x25\x07" "LV_ANIM")
QDEF1(MP_QSTR_LV_ANIM_IMG_PART, (const byte*)"\x5f\x1a\x10" "LV_ANIM_IMG_PART")
QDEF1(MP_QSTR_LV_ARC_DRAW_PART, (const byte*)"\x67\x33\x10" "LV_ARC_DRAW_PART")
QDEF1(MP_QSTR_LV_ARC_MODE, (const byte*)"\x4c\x44\x0b" "LV_ARC_MODE")
QDEF1(MP_QSTR_LV_BAR_DRAW_PART, (const byte*)"\x46\x91\x10" "LV_BAR_DRAW_PART")
QDEF1(MP_QSTR_LV_BAR_MODE, (const byte*)"\x4d\xc2\x0b" "LV_BAR_MODE")
QDEF1(MP_QSTR_LV_BASE_DIR, (const byte*)"\x95\x88\x0b" "LV_BASE_DIR")
QDEF1(MP_QSTR_LV_BLEND_MODE, (const byte*)"\xbd\x62\x0d" "LV_BLEND_MODE")
QDEF1(MP_QSTR_LV_BORDER_SIDE, (const byte*)"\x28\x32\x0e" "LV_BORDER_SIDE")
QDEF1(MP_QSTR_LV_BTNMATRIX_CTRL, (const byte*)"\xf5\x78\x11" "LV_BTNMATRIX_CTRL")
QDEF1(MP_QSTR_LV_BTNMATRIX_DRAW_PART, (const byte*)"\x74\x09\x16" "LV_BTNMATRIX_DRAW_PART")
QDEF1(MP_QSTR_LV_CHART_AXIS, (const byte*)"\xb0\x8c\x0d" "LV_CHART_AXIS")
QDEF1(MP_QSTR_LV_CHART_DRAW_PART, (const byte*)"\xfb\x2a\x12" "LV_CHART_DRAW_PART")
QDEF1(MP_QSTR_LV_CHART_TYPE, (const byte*)"\x2b\x07\x0d" "LV_CHART_TYPE")
QDEF1(MP_QSTR_LV_CHART_UPDATE_MODE, (const byte*)"\xbe\xf2\x14" "LV_CHART_UPDATE_MODE")
QDEF1(MP_QSTR_LV_CHECKBOX_DRAW_PART, (const byte*)"\xa4\xa6\x15" "LV_CHECKBOX_DRAW_PART")
QDEF1(MP_QSTR_LV_COLORWHEEL_MODE, (const byte*)"\xd2\xab\x12" "LV_COLORWHEEL_MODE")
QDEF1(MP_QSTR_LV_COVER_RES, (const byte*)"\xb6\x2f\x0c" "LV_COVER_RES")
QDEF1(MP_QSTR_LV_DIR, (const byte*)"\xdf\x2d\x06" "LV_DIR")
QDEF1(MP_QSTR_LV_DISP_ROT, (const byte*)"\x98\x9b\x0b" "LV_DISP_ROT")
QDEF1(MP_QSTR_LV_DRAW_MASK_LINE_SIDE, (const byte*)"\x1e\xc3\x16" "LV_DRAW_MASK_LINE_SIDE")
QDEF1(MP_QSTR_LV_DRAW_MASK_RES, (const byte*)"\xd0\xb7\x10" "LV_DRAW_MASK_RES")
QDEF1(MP_QSTR_LV_DRAW_MASK_TYPE, (const byte*)"\x2c\xfb\x11" "LV_DRAW_MASK_TYPE")
QDEF1(MP_QSTR_LV_EVENT, (const byte*)"\x6c\x5f\x08" "LV_EVENT")
QDEF1(MP_QSTR_LV_FLEX_ALIGN, (const byte*)"\x45\xdb\x0d" "LV_FLEX_ALIGN")
QDEF1(MP_QSTR_LV_FLEX_FLOW, (const byte*)"\x9a\xb1\x0c" "LV_FLEX_FLOW")
QDEF1(MP_QSTR_LV_FONT_FMT_TXT, (const byte*)"\x94\xc1\x0f" "LV_FONT_FMT_TXT")
QDEF1(MP_QSTR_LV_FONT_FMT_TXT_CMAP, (const byte*)"\xd4\x6f\x14" "LV_FONT_FMT_TXT_CMAP")
QDEF1(MP_QSTR_LV_FONT_SUBPX, (const byte*)"\xa0\xa1\x0d" "LV_FONT_SUBPX")
QDEF1(MP_QSTR_LV_FS_MODE, (const byte*)"\x29\x5a\x0a" "LV_FS_MODE")
QDEF1(MP_QSTR_LV_FS_RES, (const byte*)"\xae\x15\x09" "LV_FS_RES")
QDEF1(MP_QSTR_LV_FS_SEEK, (const byte*)"\x92\x50\x0a" "LV_FS_SEEK")
QDEF1(MP_QSTR_LV_GRAD_DIR, (const byte*)"\x70\x2b\x0b" "LV_GRAD_DIR")
QDEF1(MP_QSTR_LV_GRID_ALIGN, (const byte*)"\xaa\xfd\x0d" "LV_GRID_ALIGN")
QDEF1(MP_QSTR_LV_GROUP_REFOCUS_POLICY, (const byte*)"\x04\xd6\x17" "LV_GROUP_REFOCUS_POLICY")
QDEF1(MP_QSTR_LV_IMGBTN_STATE, (const byte*)"\xd3\x6a\x0f" "LV_IMGBTN_STATE")
QDEF1(MP_QSTR_LV_IMG_CF, (const byte*)"\xd9\x90\x09" "LV_IMG_CF")
QDEF1(MP_QSTR_LV_IMG_SIZE_MODE, (const byte*)"\x05\x39\x10" "LV_IMG_SIZE_MODE")
QDEF1(MP_QSTR_LV_IMG_SRC, (const byte*)"\x3e\x6a\x0a" "LV_IMG_SRC")
QDEF1(MP_QSTR_LV_INDEV_STATE, (const byte*)"\xf8\x46\x0e" "LV_INDEV_STATE")
QDEF1(MP_QSTR_LV_INDEV_TYPE, (const byte*)"\x57\x54\x0d" "LV_INDEV_TYPE")
QDEF1(MP_QSTR_LV_KEY, (const byte*)"\xd7\x4a\x06" "LV_KEY")
QDEF1(MP_QSTR_LV_KEYBOARD_MODE, (const byte*)"\x51\x8d\x10" "LV_KEYBOARD_MODE")
QDEF1(MP_QSTR_LV_LABEL_LONG, (const byte*)"\xf3\x0a\x0d" "LV_LABEL_LONG")
QDEF1(MP_QSTR_LV_LED_DRAW_PART, (const byte*)"\xda\x1e\x10" "LV_LED_DRAW_PART")
QDEF1(MP_QSTR_LV_METER_DRAW_PART, (const byte*)"\x7c\xbd\x12" "LV_METER_DRAW_PART")
QDEF1(MP_QSTR_LV_METER_INDICATOR_TYPE, (const byte*)"\x12\xff\x17" "LV_METER_INDICATOR_TYPE")
QDEF1(MP_QSTR_LV_OBJ_CLASS_EDITABLE, (const byte*)"\x1f\xad\x15" "LV_OBJ_CLASS_EDITABLE")
QDEF1(MP_QSTR_LV_OBJ_CLASS_GROUP_DEF, (const byte*)"\x6e\x1b\x16" "LV_OBJ_CLASS_GROUP_DEF")
QDEF1(MP_QSTR_LV_OBJ_DRAW_PART, (const byte*)"\xb0\x4c\x10" "LV_OBJ_DRAW_PART")
QDEF1(MP_QSTR_LV_OBJ_FLAG, (const byte*)"\x34\xc2\x0b" "LV_OBJ_FLAG")
QDEF1(MP_QSTR_LV_OBJ_TREE_WALK, (const byte*)"\x90\xd5\x10" "LV_OBJ_TREE_WALK")
QDEF1(MP_QSTR_LV_OPA, (const byte*)"\x7e\x5d\x06" "LV_OPA")
QDEF1(MP_QSTR_LV_PALETTE, (const byte*)"\xfd\x06\x0a" "LV_PALETTE")
QDEF1(MP_QSTR_LV_PART, (const byte*)"\x77\x58\x07" "LV_PART")
QDEF1(MP_QSTR_LV_PART_TEXTAREA, (const byte*)"\x82\x7d\x10" "LV_PART_TEXTAREA")
QDEF1(MP_QSTR_LV_RES, (const byte*)"\x44\x58\x06" "LV_RES")
QDEF1(MP_QSTR_LV_ROLLER_MODE, (const byte*)"\xf6\xc9\x0e" "LV_ROLLER_MODE")
QDEF1(MP_QSTR_LV_SCROLLBAR_MODE, (const byte*)"\xe0\x58\x11" "LV_SCROLLBAR_MODE")
QDEF1(MP_QSTR_LV_SCROLL_SNAP, (const byte*)"\x3e\x34\x0e" "LV_SCROLL_SNAP")
QDEF1(MP_QSTR_LV_SCR_LOAD_ANIM, (const byte*)"\x4f\x8c\x10" "LV_SCR_LOAD_ANIM")
QDEF1(MP_QSTR_LV_SLIDER_DRAW_PART, (const byte*)"\x92\x6a\x13" "LV_SLIDER_DRAW_PART")
QDEF1(MP_QSTR_LV_SLIDER_MODE, (const byte*)"\x99\xd7\x0e" "LV_SLIDER_MODE")
QDEF1(MP_QSTR_LV_SPAN_MODE, (const byte*)"\x10\x67\x0c" "LV_SPAN_MODE")
QDEF1(MP_QSTR_LV_SPAN_OVERFLOW, (const byte*)"\x0f\xe5\x10" "LV_SPAN_OVERFLOW")
QDEF1(MP_QSTR_LV_STATE, (const byte*)"\x77\xc6\x08" "LV_STATE")
QDEF1(MP_QSTR_LV_STYLE, (const byte*)"\x77\x29\x08" "LV_STYLE")
QDEF1(MP_QSTR_LV_SYMBOL, (const byte*)"\xc6\x8a\x09" "LV_SYMBOL")
QDEF1(MP_QSTR_LV_TABLE_CELL_CTRL, (const byte*)"\xb1\x6d\x12" "LV_TABLE_CELL_CTRL")
QDEF1(MP_QSTR_LV_TABLE_DRAW_PART, (const byte*)"\x49\xa2\x12" "LV_TABLE_DRAW_PART")
QDEF1(MP_QSTR_LV_TEXT_ALIGN, (const byte*)"\xaf\xa7\x0d" "LV_TEXT_ALIGN")
QDEF1(MP_QSTR_LV_TEXT_CMD_STATE, (const byte*)"\xc0\x1b\x11" "LV_TEXT_CMD_STATE")
QDEF1(MP_QSTR_LV_TEXT_DECOR, (const byte*)"\x1d\xb3\x0d" "LV_TEXT_DECOR")
QDEF1(MP_QSTR_LV_TEXT_FLAG, (const byte*)"\x6e\x2b\x0c" "LV_TEXT_FLAG")
QDEF1(MP_QSTR_LockType, (const byte*)"\x36\x20\x08" "LockType")
QDEF1(MP_QSTR_LodePNGColorMode, (const byte*)"\x80\xa8\x10" "LodePNGColorMode")
QDEF1(MP_QSTR_LodePNGDecoderSettings, (const byte*)"\xe5\xd3\x16" "LodePNGDecoderSettings")
QDEF1(MP_QSTR_LodePNGDecompressSettings, (const byte*)"\x5c\xfe\x19" "LodePNGDecompressSettings")
QDEF1(MP_QSTR_LodePNGDecompressSettings_custom_inflate, (const byte*)"\x32\x93\x28" "LodePNGDecompressSettings_custom_inflate")
QDEF1(MP_QSTR_LodePNGDecompressSettings_custom_zlib, (const byte*)"\x92\x80\x25" "LodePNGDecompressSettings_custom_zlib")
QDEF1(MP_QSTR_LodePNGInfo, (const byte*)"\x50\xa4\x0b" "LodePNGInfo")
QDEF1(MP_QSTR_LodePNGState, (const byte*)"\x89\xaf\x0c" "LodePNGState")
QDEF1(MP_QSTR_LodePNGTime, (const byte*)"\x4b\x76\x0b" "LodePNGTime")
QDEF1(MP_QSTR_LvReferenceError, (const byte*)"\x2c\xdd\x10" "LvReferenceError")
QDEF1(MP_QSTR_MAIN, (const byte*)"\xce\xb7\x04" "MAIN")
QDEF1(MP_QSTR_MAP, (const byte*)"\x99\xc7\x03" "MAP")
QDEF1(MP_QSTR_MASKED, (const byte*)"\x30\xab\x06" "MASKED")
QDEF1(MP_QSTR_MAX, (const byte*)"\x91\xc7\x03" "MAX")
QDEF1(MP_QSTR_MAX_HEIGHT, (const byte*)"\xd1\x70\x0a" "MAX_HEIGHT")
QDEF1(MP_QSTR_MAX_OCTET_VALUE, (const byte*)"\x13\x35\x0f" "MAX_OCTET_VALUE")
QDEF1(MP_QSTR_MAX_WIDTH, (const byte*)"\x88\x7b\x09" "MAX_WIDTH")
QDEF1(MP_QSTR_MERGE_RIGHT, (const byte*)"\x62\x27\x0b" "MERGE_RIGHT")
QDEF1(MP_QSTR_MIN, (const byte*)"\x8f\xc6\x03" "MIN")
QDEF1(MP_QSTR_MINUS, (const byte*)"\x29\x9f\x05" "MINUS")
QDEF1(MP_QSTR_MIN_HEIGHT, (const byte*)"\x0f\xd1\x0a" "MIN_HEIGHT")
QDEF1(MP_QSTR_MIN_WIDTH, (const byte*)"\x16\x11\x09" "MIN_WIDTH")
QDEF1(MP_QSTR_ML, (const byte*)"\xa4\x72\x02" "ML")
QDEF1(MP_QSTR_ML_ENGINE_CLOUD, (const byte*)"\x7b\x80\x0f" "ML_ENGINE_CLOUD")
QDEF1(MP_QSTR_ML_ENGINE_MAX, (const byte*)"\xbe\x81\x0d" "ML_ENGINE_MAX")
QDEF1(MP_QSTR_ML_ENGINE_MNN, (const byte*)"\x07\x82\x0d" "ML_ENGINE_MNN")
QDEF1(MP_QSTR_ML_ENGINE_NONE, (const byte*)"\xc0\x63\x0e" "ML_ENGINE_NONE")
QDEF1(MP_QSTR_ML_ENGINE_ODLA, (const byte*)"\x2c\xc3\x0e" "ML_ENGINE_ODLA")
QDEF1(MP_QSTR_MODE, (const byte*)"\x66\xc0\x04" "MODE")
QDEF1(MP_QSTR_MONO_HLSB, (const byte*)"\x4c\x98\x09" "MONO_HLSB")
QDEF1(MP_QSTR_MONO_HMSB, (const byte*)"\xcd\x83\x09" "MONO_HMSB")
QDEF1(MP_QSTR_MONO_VLSB, (const byte*)"\x12\xfc\x09" "MONO_VLSB")
QDEF1(MP_QSTR_MOVE_BOTTOM, (const byte*)"\xc4\x4c\x0b" "MOVE_BOTTOM")
QDEF1(MP_QSTR_MOVE_LEFT, (const byte*)"\xf0\xbe\x09" "MOVE_LEFT")
QDEF1(MP_QSTR_MOVE_RIGHT, (const byte*)"\xeb\x69\x0a" "MOVE_RIGHT")
QDEF1(MP_QSTR_MOVE_TOP, (const byte*)"\x60\xdf\x08" "MOVE_TOP")
QDEF1(MP_QSTR_MSB, (const byte*)"\x59\xca\x03" "MSB")
QDEF1(MP_QSTR_MULTIPLY, (const byte*)"\x09\xe0\x08" "MULTIPLY")
QDEF1(MP_QSTR_MUTE, (const byte*)"\x6c\x0b\x04" "MUTE")
QDEF1(MP_QSTR_MVLSB, (const byte*)"\x03\x14\x05" "MVLSB")
QDEF1(MP_QSTR_NATIVE, (const byte*)"\x04\x8e\x06" "NATIVE")
QDEF1(MP_QSTR_NEEDLE_IMG, (const byte*)"\x7a\xbe\x0a" "NEEDLE_IMG")
QDEF1(MP_QSTR_NEEDLE_LINE, (const byte*)"\x77\x31\x0b" "NEEDLE_LINE")
QDEF1(MP_QSTR_NET_AP_CONNECTED, (const byte*)"\xf4\xe2\x10" "NET_AP_CONNECTED")
QDEF1(MP_QSTR_NET_AP_CONNECTING, (const byte*)"\xf5\x72\x11" "NET_AP_CONNECTING")
QDEF1(MP_QSTR_NET_AP_DISCONNECTED, (const byte*)"\xea\x2b\x13" "NET_AP_DISCONNECTED")
QDEF1(MP_QSTR_NET_AP_DISCONNECTING, (const byte*)"\xab\x77\x14" "NET_AP_DISCONNECTING")
QDEF1(MP_QSTR_NET_FAILED, (const byte*)"\x46\x93\x0a" "NET_FAILED")
QDEF1(MP_QSTR_NET_IP_OBTAINED, (const byte*)"\x1d\x61\x0f" "NET_IP_OBTAINED")
QDEF1(MP_QSTR_NET_IP_OBTAINING, (const byte*)"\xbc\x73\x10" "NET_IP_OBTAINING")
QDEF1(MP_QSTR_NET_TYPE_CELLULAR, (const byte*)"\x4e\xa5\x11" "NET_TYPE_CELLULAR")
QDEF1(MP_QSTR_NET_TYPE_ETH, (const byte*)"\xfb\x81\x0c" "NET_TYPE_ETH")
QDEF1(MP_QSTR_NET_TYPE_WIFI, (const byte*)"\xd3\x37\x0d" "NET_TYPE_WIFI")
QDEF1(MP_QSTR_NEUTRAL, (const byte*)"\xf0\x40\x07" "NEUTRAL")
QDEF1(MP_QSTR_NEW_LINE, (const byte*)"\x68\x20\x08" "NEW_LINE")
QDEF1(MP_QSTR_NEXT, (const byte*)"\x02\x67\x04" "NEXT")
QDEF1(MP_QSTR_NONE, (const byte*)"\x4f\x4d\x04" "NONE")
QDEF1(MP_QSTR_NORMAL, (const byte*)"\xf6\x79\x06" "NORMAL")
QDEF1(MP_QSTR_NOT_COVER, (const byte*)"\xa2\x21\x09" "NOT_COVER")
QDEF1(MP_QSTR_NOT_EX, (const byte*)"\x32\xe4\x06" "NOT_EX")
QDEF1(MP_QSTR_NOT_IMP, (const byte*)"\x5b\x59\x07" "NOT_IMP")
QDEF1(MP_QSTR_NO_REPEAT, (const byte*)"\xec\x6b\x09" "NO_REPEAT")
QDEF1(MP_QSTR_NUM, (const byte*)"\x93\xd6\x03" "NUM")
QDEF1(MP_QSTR_NUMBER, (const byte*)"\x46\x91\x06" "NUMBER")
QDEF1(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
QDEF1(MP_QSTR_NotImplemented, (const byte*)"\x3e\xc6\x0e" "NotImplemented")
QDEF1(MP_QSTR_OBJ_FLAG_FLEX_IN_NEW, (const byte*)"\x02\xf8\x14" "OBJ_FLAG_FLEX_IN_NEW")
QDEF1(MP_QSTR_OFF, (const byte*)"\xaa\xe0\x03" "OFF")
QDEF1(MP_QSTR_OK, (const byte*)"\x61\x73\x02" "OK")
QDEF1(MP_QSTR_ON, (const byte*)"\x64\x73\x02" "ON")
QDEF1(MP_QSTR_ONE_SHOT, (const byte*)"\x5e\xff\x08" "ONE_SHOT")
QDEF1(MP_QSTR_ON_CLOSE, (const byte*)"\x2d\xad\x08" "ON_CLOSE")
QDEF1(MP_QSTR_ON_CONNECT, (const byte*)"\x05\x5a\x0a" "ON_CONNECT")
QDEF1(MP_QSTR_ON_DISCONNECT, (const byte*)"\x9b\xe2\x0d" "ON_DISCONNECT")
QDEF1(MP_QSTR_ON_ERROR, (const byte*)"\x63\xc2\x08" "ON_ERROR")
QDEF1(MP_QSTR_ON_LOGIN, (const byte*)"\x58\x64\x08" "ON_LOGIN")
QDEF1(MP_QSTR_ON_LOGOUT, (const byte*)"\xf1\xc3\x09" "ON_LOGOUT")
QDEF1(MP_QSTR_ON_PROPS, (const byte*)"\x55\x54\x08" "ON_PROPS")
QDEF1(MP_QSTR_ON_RAWDATA, (const byte*)"\xaf\x04\x0a" "ON_RAWDATA")
QDEF1(MP_QSTR_ON_SERVICE, (const byte*)"\x46\x63\x0a" "ON_SERVICE")
QDEF1(MP_QSTR_ON_SUBCRIBE, (const byte*)"\x40\x17\x0b" "ON_SUBCRIBE")
QDEF1(MP_QSTR_ON_SUBREGISTER, (const byte*)"\x56\x40\x0e" "ON_SUBREGISTER")
QDEF1(MP_QSTR_ON_TOPOADD, (const byte*)"\x9e\x39\x0a" "ON_TOPOADD")
QDEF1(MP_QSTR_ON_TOPOGET, (const byte*)"\xa9\x31\x0a" "ON_TOPOGET")
QDEF1(MP_QSTR_ON_TOPOREMOVE, (const byte*)"\xd9\xda\x0d" "ON_TOPOREMOVE")
QDEF1(MP_QSTR_OPA, (const byte*)"\xfb\xe2\x03" "OPA")
QDEF1(MP_QSTR_OPEN_DRAIN, (const byte*)"\x5e\x48\x0a" "OPEN_DRAIN")
QDEF1(MP_QSTR_ORANGE, (const byte*)"\xf5\xc1\x06" "ORANGE")
QDEF1(MP_QSTR_OUT, (const byte*)"\x0b\xe3\x03" "OUT")
QDEF1(MP_QSTR_OUTLINE_COLOR, (const byte*)"\xa7\xeb\x0d" "OUTLINE_COLOR")
QDEF1(MP_QSTR_OUTLINE_COLOR_FILTERED, (const byte*)"\x19\xb7\x16" "OUTLINE_COLOR_FILTERED")
QDEF1(MP_QSTR_OUTLINE_OPA, (const byte*)"\xa4\xf2\x0b" "OUTLINE_OPA")
QDEF1(MP_QSTR_OUTLINE_PAD, (const byte*)"\x0f\xc6\x0b" "OUTLINE_PAD")
QDEF1(MP_QSTR_OUTLINE_WIDTH, (const byte*)"\x1c\x3c\x0d" "OUTLINE_WIDTH")
QDEF1(MP_QSTR_OUT_BOTTOM_LEFT, (const byte*)"\x3f\xd7\x0f" "OUT_BOTTOM_LEFT")
QDEF1(MP_QSTR_OUT_BOTTOM_MID, (const byte*)"\x04\x29\x0e" "OUT_BOTTOM_MID")
QDEF1(MP_QSTR_OUT_BOTTOM_RIGHT, (const byte*)"\x84\x6f\x10" "OUT_BOTTOM_RIGHT")
QDEF1(MP_QSTR_OUT_LEFT_BOTTOM, (const byte*)"\xbf\x18\x0f" "OUT_LEFT_BOTTOM")
QDEF1(MP_QSTR_OUT_LEFT_MID, (const byte*)"\x30\xd6\x0c" "OUT_LEFT_MID")
QDEF1(MP_QSTR_OUT_LEFT_TOP, (const byte*)"\x7b\x6e\x0c" "OUT_LEFT_TOP")
QDEF1(MP_QSTR_OUT_OF_MEM, (const byte*)"\x07\x79\x0a" "OUT_OF_MEM")
QDEF1(MP_QSTR_OUT_RIGHT_BOTTOM, (const byte*)"\xa4\x4d\x10" "OUT_RIGHT_BOTTOM")
QDEF1(MP_QSTR_OUT_RIGHT_MID, (const byte*)"\x8b\x05\x0d" "OUT_RIGHT_MID")
QDEF1(MP_QSTR_OUT_RIGHT_TOP, (const byte*)"\xc0\x5c\x0d" "OUT_RIGHT_TOP")
QDEF1(MP_QSTR_OUT_TOP_LEFT, (const byte*)"\xfb\x91\x0c" "OUT_TOP_LEFT")
QDEF1(MP_QSTR_OUT_TOP_MID, (const byte*)"\xc0\x8a\x0b" "OUT_TOP_MID")
QDEF1(MP_QSTR_OUT_TOP_RIGHT, (const byte*)"\x40\xa0\x0d" "OUT_TOP_RIGHT")
QDEF1(MP_QSTR_OVER_BOTTOM, (const byte*)"\x9b\x22\x0b" "OVER_BOTTOM")
QDEF1(MP_QSTR_OVER_LEFT, (const byte*)"\xaf\xea\x09" "OVER_LEFT")
QDEF1(MP_QSTR_OVER_RIGHT, (const byte*)"\x14\xe5\x0a" "OVER_RIGHT")
QDEF1(MP_QSTR_OVER_TOP, (const byte*)"\x5f\x93\x08" "OVER_TOP")
QDEF1(MP_QSTR_OrderedDict, (const byte*)"\xf0\x7e\x0b" "OrderedDict")
QDEF1(MP_QSTR_PAD_BOTTOM, (const byte*)"\xa0\x2e\x0a" "PAD_BOTTOM")
QDEF1(MP_QSTR_PAD_COLUMN, (const byte*)"\x99\x15\x0a" "PAD_COLUMN")
QDEF1(MP_QSTR_PAD_LEFT, (const byte*)"\x54\x78\x08" "PAD_LEFT")
QDEF1(MP_QSTR_PAD_RIGHT, (const byte*)"\x4f\x9f\x09" "PAD_RIGHT")
QDEF1(MP_QSTR_PAD_ROW, (const byte*)"\xc5\xf5\x07" "PAD_ROW")
QDEF1(MP_QSTR_PAD_TOP, (const byte*)"\x44\xdd\x07" "PAD_TOP")
QDEF1(MP_QSTR_PALETTE, (const byte*)"\x78\x46\x07" "PALETTE")
QDEF1(MP_QSTR_PAR, (const byte*)"\x06\x0f\x03" "PAR")
QDEF1(MP_QSTR_PARITY_EVEN, (const byte*)"\x05\x9f\x0b" "PARITY_EVEN")
QDEF1(MP_QSTR_PARITY_NONE, (const byte*)"\x97\x20\x0b" "PARITY_NONE")
QDEF1(MP_QSTR_PARITY_ODD, (const byte*)"\x32\x39\x0a" "PARITY_ODD")
QDEF1(MP_QSTR_PART, (const byte*)"\x92\xef\x04" "PART")
QDEF1(MP_QSTR_PART_TEXTAREA, (const byte*)"\x87\xc7\x0d" "PART_TEXTAREA")
QDEF1(MP_QSTR_PASTE, (const byte*)"\x56\xe6\x05" "PASTE")
QDEF1(MP_QSTR_PAUSE, (const byte*)"\xf7\xdd\x05" "PAUSE")
QDEF1(MP_QSTR_PERIODIC, (const byte*)"\x0a\x35\x08" "PERIODIC")
QDEF1(MP_QSTR_PINK, (const byte*)"\x19\x12\x04" "PINK")
QDEF1(MP_QSTR_PIN_WAKE, (const byte*)"\xd5\x94\x08" "PIN_WAKE")
QDEF1(MP_QSTR_PLACEHOLDER, (const byte*)"\xe6\x1e\x0b" "PLACEHOLDER")
QDEF1(MP_QSTR_PLAIN, (const byte*)"\x5f\xe5\x05" "PLAIN")
QDEF1(MP_QSTR_PLAY, (const byte*)"\xe1\x06\x04" "PLAY")
QDEF1(MP_QSTR_PLUS, (const byte*)"\x7f\x05\x04" "PLUS")
QDEF1(MP_QSTR_PM, (const byte*)"\xd8\x74\x02" "PM")
QDEF1(MP_QSTR_POINTER, (const byte*)"\x7e\x49\x07" "POINTER")
QDEF1(MP_QSTR_POLLERR, (const byte*)"\xdf\xc0\x07" "POLLERR")
QDEF1(MP_QSTR_POLLHUP, (const byte*)"\x77\x8a\x07" "POLLHUP")
QDEF1(MP_QSTR_POLLIN, (const byte*)"\x7d\x61\x06" "POLLIN")
QDEF1(MP_QSTR_POLLOUT, (const byte*)"\x74\x85\x07" "POLLOUT")
QDEF1(MP_QSTR_POPOVER, (const byte*)"\xc4\xb3\x07" "POPOVER")
QDEF1(MP_QSTR_POWER, (const byte*)"\xfa\x4e\x05" "POWER")
QDEF1(MP_QSTR_POWER_ON, (const byte*)"\xc4\x64\x08" "POWER_ON")
QDEF1(MP_QSTR_PRESSED, (const byte*)"\x63\x5a\x07" "PRESSED")
QDEF1(MP_QSTR_PRESSING, (const byte*)"\xc2\xb7\x08" "PRESSING")
QDEF1(MP_QSTR_PRESS_LOCK, (const byte*)"\xf6\x09\x0a" "PRESS_LOCK")
QDEF1(MP_QSTR_PRESS_LOST, (const byte*)"\xf9\x07\x0a" "PRESS_LOST")
QDEF1(MP_QSTR_PREV, (const byte*)"\x74\xca\x04" "PREV")
QDEF1(MP_QSTR_PRIMARY_X, (const byte*)"\xae\xf9\x09" "PRIMARY_X")
QDEF1(MP_QSTR_PRIMARY_Y, (const byte*)"\xaf\xf9\x09" "PRIMARY_Y")
QDEF1(MP_QSTR_PROP_ANY, (const byte*)"\x51\x10\x08" "PROP_ANY")
QDEF1(MP_QSTR_PROP_INV, (const byte*)"\x56\x30\x08" "PROP_INV")
QDEF1(MP_QSTR_PTR, (const byte*)"\xb3\x0c\x03" "PTR")
QDEF1(MP_QSTR_PULL_DOWN, (const byte*)"\xad\xfb\x09" "PULL_DOWN")
QDEF1(MP_QSTR_PULL_HOLD, (const byte*)"\x50\xee\x09" "PULL_HOLD")
QDEF1(MP_QSTR_PULL_UP, (const byte*)"\xba\x5e\x07" "PULL_UP")
QDEF1(MP_QSTR_PURPLE, (const byte*)"\x0b\x40\x06" "PURPLE")
QDEF1(MP_QSTR_PWM, (const byte*)"\x4f\x0d\x03" "PWM")
QDEF1(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\xcb\x0b" "PWRON_RESET")
QDEF1(MP_QSTR_Pin, (const byte*)"\x12\x14\x03" "Pin")
QDEF1(MP_QSTR_Player, (const byte*)"\xb6\x6b\x06" "Player")
QDEF1(MP_QSTR_RADIUS, (const byte*)"\xbd\x91\x06" "RADIUS")
QDEF1(MP_QSTR_RANGE, (const byte*)"\x7a\x36\x05" "RANGE")
QDEF1(MP_QSTR_RAW, (const byte*)"\x01\x07\x03" "RAW")
QDEF1(MP_QSTR_RAW_ALPHA, (const byte*)"\x6a\x87\x09" "RAW_ALPHA")
QDEF1(MP_QSTR_RAW_CHROMA_KEYED, (const byte*)"\x0d\x83\x10" "RAW_CHROMA_KEYED")
QDEF1(MP_QSTR_RD, (const byte*)"\x93\x74\x02" "RD")
QDEF1(MP_QSTR_READY, (const byte*)"\xce\xef\x05" "READY")
QDEF1(MP_QSTR_REAL, (const byte*)"\xbf\xd8\x04" "REAL")
QDEF1(MP_QSTR_RECOLOR, (const byte*)"\x4f\x07\x07" "RECOLOR")
QDEF1(MP_QSTR_RECTANGLE, (const byte*)"\x44\x6d\x09" "RECTANGLE")
QDEF1(MP_QSTR_RED, (const byte*)"\x96\x06\x03" "RED")
QDEF1(MP_QSTR_REFRESH, (const byte*)"\xb8\xa8\x07" "REFRESH")
QDEF1(MP_QSTR_REFR_EXT_DRAW_SIZE, (const byte*)"\x15\x70\x12" "REFR_EXT_DRAW_SIZE")
QDEF1(MP_QSTR_RELEASED, (const byte*)"\xc8\x6a\x08" "RELEASED")
QDEF1(MP_QSTR_RES, (const byte*)"\x81\x06\x03" "RES")
QDEF1(MP_QSTR_RESERVED_15, (const byte*)"\x1a\x04\x0b" "RESERVED_15")
QDEF1(MP_QSTR_RESERVED_16, (const byte*)"\x19\x04\x0b" "RESERVED_16")
QDEF1(MP_QSTR_RESERVED_17, (const byte*)"\x18\x04\x0b" "RESERVED_17")
QDEF1(MP_QSTR_RESERVED_18, (const byte*)"\x17\x04\x0b" "RESERVED_18")
QDEF1(MP_QSTR_RESERVED_19, (const byte*)"\x16\x04\x0b" "RESERVED_19")
QDEF1(MP_QSTR_RESERVED_20, (const byte*)"\xfc\x03\x0b" "RESERVED_20")
QDEF1(MP_QSTR_RESERVED_21, (const byte*)"\xfd\x03\x0b" "RESERVED_21")
QDEF1(MP_QSTR_RESERVED_22, (const byte*)"\xfe\x03\x0b" "RESERVED_22")
QDEF1(MP_QSTR_RESERVED_23, (const byte*)"\xff\x03\x0b" "RESERVED_23")
QDEF1(MP_QSTR_REVERSE, (const byte*)"\x85\x5d\x07" "REVERSE")
QDEF1(MP_QSTR_RGB, (const byte*)"\xd2\x06\x03" "RGB")
QDEF1(MP_QSTR_RGB565, (const byte*)"\x64\xcc\x06" "RGB565")
QDEF1(MP_QSTR_RGB888, (const byte*)"\xaa\xd0\x06" "RGB888")
QDEF1(MP_QSTR_RGBA, (const byte*)"\x53\xe1\x04" "RGBA")
QDEF1(MP_QSTR_RIGHT, (const byte*)"\xc5\x79\x05" "RIGHT")
QDEF1(MP_QSTR_RIGHT_MID, (const byte*)"\x5a\x2c\x09" "RIGHT_MID")
QDEF1(MP_QSTR_ROW, (const byte*)"\xcf\x07\x03" "ROW")
QDEF1(MP_QSTR_ROW_REVERSE, (const byte*)"\x50\x15\x0b" "ROW_REVERSE")
QDEF1(MP_QSTR_ROW_WRAP, (const byte*)"\xe4\xb5\x08" "ROW_WRAP")
QDEF1(MP_QSTR_ROW_WRAP_REVERSE, (const byte*)"\x7b\x79\x10" "ROW_WRAP_REVERSE")
QDEF1(MP_QSTR_RTC, (const byte*)"\xa0\x04\x03" "RTC")
QDEF1(MP_QSTR_RTC_WAKE, (const byte*)"\xa7\x56\x08" "RTC_WAKE")
QDEF1(MP_QSTR_RTL, (const byte*)"\xaf\x04\x03" "RTL")
QDEF1(MP_QSTR_Recorder, (const byte*)"\x7f\xc5\x08" "Recorder")
QDEF1(MP_QSTR_RisingEdge, (const byte*)"\xae\xa8\x0a" "RisingEdge")
QDEF1(MP_QSTR_SATURATION, (const byte*)"\x99\xeb\x0a" "SATURATION")
QDEF1(MP_QSTR_SAVE, (const byte*)"\xe4\x83\x04" "SAVE")
QDEF1(MP_QSTR_SCALE_LINES, (const byte*)"\xff\xd9\x0b" "SCALE_LINES")
QDEF1(MP_QSTR_SCATTER, (const byte*)"\xe3\x2a\x07" "SCATTER")
QDEF1(MP_QSTR_SCREEN_LOADED, (const byte*)"\xb1\x3b\x0d" "SCREEN_LOADED")
QDEF1(MP_QSTR_SCREEN_LOAD_START, (const byte*)"\xef\xa8\x11" "SCREEN_LOAD_START")
QDEF1(MP_QSTR_SCREEN_UNLOADED, (const byte*)"\x8a\x03\x0f" "SCREEN_UNLOADED")
QDEF1(MP_QSTR_SCREEN_UNLOAD_START, (const byte*)"\x54\x9e\x13" "SCREEN_UNLOAD_START")
QDEF1(MP_QSTR_SCROLL, (const byte*)"\x68\x5e\x06" "SCROLL")
QDEF1(MP_QSTR_SCROLLABLE, (const byte*)"\x42\xb6\x0a" "SCROLLABLE")
QDEF1(MP_QSTR_SCROLLBAR, (const byte*)"\xd9\x95\x09" "SCROLLBAR")
QDEF1(MP_QSTR_SCROLLBAR_MODE, (const byte*)"\x45\xc3\x0e" "SCROLLBAR_MODE")
QDEF1(MP_QSTR_SCROLLED, (const byte*)"\x89\x90\x08" "SCROLLED")
QDEF1(MP_QSTR_SCROLL_BEGIN, (const byte*)"\x10\x05\x0c" "SCROLL_BEGIN")
QDEF1(MP_QSTR_SCROLL_CHAIN, (const byte*)"\x7a\xf2\x0c" "SCROLL_CHAIN")
QDEF1(MP_QSTR_SCROLL_CIRCULAR, (const byte*)"\xc6\xb3\x0f" "SCROLL_CIRCULAR")
QDEF1(MP_QSTR_SCROLL_ELASTIC, (const byte*)"\xd2\xa7\x0e" "SCROLL_ELASTIC")
QDEF1(MP_QSTR_SCROLL_END, (const byte*)"\x18\x78\x0a" "SCROLL_END")
QDEF1(MP_QSTR_SCROLL_MOMENTUM, (const byte*)"\x9f\x88\x0f" "SCROLL_MOMENTUM")
QDEF1(MP_QSTR_SCROLL_ONE, (const byte*)"\x93\x7f\x0a" "SCROLL_ONE")
QDEF1(MP_QSTR_SCROLL_ON_FOCUS, (const byte*)"\x65\x26\x0f" "SCROLL_ON_FOCUS")
QDEF1(MP_QSTR_SCROLL_SNAP, (const byte*)"\xbb\x9c\x0b" "SCROLL_SNAP")
QDEF1(MP_QSTR_SCR_LOAD_ANIM, (const byte*)"\xca\x7e\x0d" "SCR_LOAD_ANIM")
QDEF1(MP_QSTR_SD_CARD, (const byte*)"\x59\xc5\x07" "SD_CARD")
QDEF1(MP_QSTR_SECONDARY_X, (const byte*)"\xd8\x1d\x0b" "SECONDARY_X")
QDEF1(MP_QSTR_SECONDARY_Y, (const byte*)"\xd9\x1d\x0b" "SECONDARY_Y")
QDEF1(MP_QSTR_SELECTED, (const byte*)"\x2c\x63\x08" "SELECTED")
QDEF1(MP_QSTR_SET, (const byte*)"\x07\x13\x03" "SET")
QDEF1(MP_QSTR_SETTINGS, (const byte*)"\x20\xf2\x08" "SETTINGS")
QDEF1(MP_QSTR_SET_FRAME_SIZE, (const byte*)"\xdf\x0d\x0e" "SET_FRAME_SIZE")
QDEF1(MP_QSTR_SET_LED_BRIGHTNESS, (const byte*)"\x63\x77\x12" "SET_LED_BRIGHTNESS")
QDEF1(MP_QSTR_SET_MODE, (const byte*)"\x5b\x31\x08" "SET_MODE")
QDEF1(MP_QSTR_SET_WIFI_SSID_PWD, (const byte*)"\x67\x6e\x11" "SET_WIFI_SSID_PWD")
QDEF1(MP_QSTR_SHADOW_COLOR, (const byte*)"\x01\x7e\x0c" "SHADOW_COLOR")
QDEF1(MP_QSTR_SHADOW_COLOR_FILTERED, (const byte*)"\x3f\x24\x15" "SHADOW_COLOR_FILTERED")
QDEF1(MP_QSTR_SHADOW_OFS_X, (const byte*)"\xa1\x5b\x0c" "SHADOW_OFS_X")
QDEF1(MP_QSTR_SHADOW_OFS_Y, (const byte*)"\xa0\x5b\x0c" "SHADOW_OFS_Y")
QDEF1(MP_QSTR_SHADOW_OPA, (const byte*)"\x02\x45\x0a" "SHADOW_OPA")
QDEF1(MP_QSTR_SHADOW_SPREAD, (const byte*)"\x8d\x4b\x0d" "SHADOW_SPREAD")
QDEF1(MP_QSTR_SHADOW_WIDTH, (const byte*)"\xfa\xdf\x0c" "SHADOW_WIDTH")
QDEF1(MP_QSTR_SHIFT, (const byte*)"\xe5\x25\x05" "SHIFT")
QDEF1(MP_QSTR_SHORT, (const byte*)"\xf7\x1b\x05" "SHORT")
QDEF1(MP_QSTR_SHORT_CLICKED, (const byte*)"\x87\xbe\x0d" "SHORT_CLICKED")
QDEF1(MP_QSTR_SHUFFLE, (const byte*)"\xa2\x91\x07" "SHUFFLE")
QDEF1(MP_QSTR_SIZE, (const byte*)"\x60\xa5\x04" "SIZE")
QDEF1(MP_QSTR_SIZE_160X120, (const byte*)"\xc3\xae\x0c" "SIZE_160X120")
QDEF1(MP_QSTR_SIZE_240X240, (const byte*)"\x07\xf0\x0c" "SIZE_240X240")
QDEF1(MP_QSTR_SIZE_320X240, (const byte*)"\x80\xa5\x0c" "SIZE_320X240")
QDEF1(MP_QSTR_SIZE_640X480, (const byte*)"\x09\x29\x0c" "SIZE_640X480")
QDEF1(MP_QSTR_SIZE_800X600, (const byte*)"\x09\xfa\x0c" "SIZE_800X600")
QDEF1(MP_QSTR_SIZE_CHANGED, (const byte*)"\xfd\x17\x0c" "SIZE_CHANGED")
QDEF1(MP_QSTR_SIZE_MODE, (const byte*)"\x1c\x06\x09" "SIZE_MODE")
QDEF1(MP_QSTR_SKIP_CHILDREN, (const byte*)"\xa8\x94\x0d" "SKIP_CHILDREN")
QDEF1(MP_QSTR_SLEEP, (const byte*)"\x0a\x27\x05" "SLEEP")
QDEF1(MP_QSTR_SNAPPABLE, (const byte*)"\x93\xab\x09" "SNAPPABLE")
QDEF1(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x14\x0a" "SOCK_DGRAM")
QDEF1(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x96\x08" "SOCK_RAW")
QDEF1(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\xbe\x0b" "SOCK_STREAM")
QDEF1(MP_QSTR_SOFT_RESET, (const byte*)"\x01\xc6\x0a" "SOFT_RESET")
QDEF1(MP_QSTR_SOL_SOCKET, (const byte*)"\x0f\xdf\x0a" "SOL_SOCKET")
QDEF1(MP_QSTR_SO_REUSEADDR, (const byte*)"\x21\x53\x0c" "SO_REUSEADDR")
QDEF1(MP_QSTR_SPACE_AROUND, (const byte*)"\x3d\x96\x0c" "SPACE_AROUND")
QDEF1(MP_QSTR_SPACE_BETWEEN, (const byte*)"\xd4\xc9\x0d" "SPACE_BETWEEN")
QDEF1(MP_QSTR_SPACE_EVENLY, (const byte*)"\x73\x5f\x0c" "SPACE_EVENLY")
QDEF1(MP_QSTR_SPAN_MODE, (const byte*)"\x95\xda\x09" "SPAN_MODE")
QDEF1(MP_QSTR_SPAN_OVERFLOW, (const byte*)"\x8a\xf9\x0d" "SPAN_OVERFLOW")
QDEF1(MP_QSTR_SPARSE_FULL, (const byte*)"\x0f\xf0\x0b" "SPARSE_FULL")
QDEF1(MP_QSTR_SPARSE_TINY, (const byte*)"\x16\x05\x0b" "SPARSE_TINY")
QDEF1(MP_QSTR_SPECIAL, (const byte*)"\x64\xbc\x07" "SPECIAL")
QDEF1(MP_QSTR_SPI, (const byte*)"\xef\x11\x03" "SPI")
QDEF1(MP_QSTR_SRC, (const byte*)"\x27\x11\x03" "SRC")
QDEF1(MP_QSTR_START, (const byte*)"\xe5\xef\x05" "START")
QDEF1(MP_QSTR_STATE, (const byte*)"\x32\xf0\x05" "STATE")
QDEF1(MP_QSTR_STATUS, (const byte*)"\x31\xf4\x06" "STATUS")
QDEF1(MP_QSTR_STOP, (const byte*)"\x5d\x3f\x04" "STOP")
QDEF1(MP_QSTR_STRETCH, (const byte*)"\x6a\x92\x07" "STRETCH")
QDEF1(MP_QSTR_STRIKETHROUGH, (const byte*)"\x2c\x38\x0d" "STRIKETHROUGH")
QDEF1(MP_QSTR_STYLE, (const byte*)"\x32\x53\x05" "STYLE")
QDEF1(MP_QSTR_STYLE_CHANGED, (const byte*)"\xaf\x98\x0d" "STYLE_CHANGED")
QDEF1(MP_QSTR_STYLE_FLEX_CROSS_PLACE, (const byte*)"\x1f\xf4\x16" "STYLE_FLEX_CROSS_PLACE")
QDEF1(MP_QSTR_STYLE_FLEX_FLOW, (const byte*)"\xb7\xdb\x0f" "STYLE_FLEX_FLOW")
QDEF1(MP_QSTR_STYLE_FLEX_GROW, (const byte*)"\x08\x3b\x0f" "STYLE_FLEX_GROW")
QDEF1(MP_QSTR_STYLE_FLEX_MAIN_PLACE, (const byte*)"\x8a\xe8\x15" "STYLE_FLEX_MAIN_PLACE")
QDEF1(MP_QSTR_STYLE_FLEX_TRACK_PLACE, (const byte*)"\x0e\x5b\x16" "STYLE_FLEX_TRACK_PLACE")
QDEF1(MP_QSTR_STYLE_GRID_CELL_COLUMN_POS, (const byte*)"\xb6\x3b\x1a" "STYLE_GRID_CELL_COLUMN_POS")
QDEF1(MP_QSTR_STYLE_GRID_CELL_COLUMN_SPAN, (const byte*)"\xd6\x5c\x1b" "STYLE_GRID_CELL_COLUMN_SPAN")
QDEF1(MP_QSTR_STYLE_GRID_CELL_ROW_POS, (const byte*)"\x6a\xa5\x17" "STYLE_GRID_CELL_ROW_POS")
QDEF1(MP_QSTR_STYLE_GRID_CELL_ROW_SPAN, (const byte*)"\x8a\x97\x18" "STYLE_GRID_CELL_ROW_SPAN")
QDEF1(MP_QSTR_STYLE_GRID_CELL_X_ALIGN, (const byte*)"\x59\x11\x17" "STYLE_GRID_CELL_X_ALIGN")
QDEF1(MP_QSTR_STYLE_GRID_CELL_Y_ALIGN, (const byte*)"\x98\x0c\x17" "STYLE_GRID_CELL_Y_ALIGN")
QDEF1(MP_QSTR_STYLE_GRID_COLUMN_ALIGN, (const byte*)"\x4e\xf5\x17" "STYLE_GRID_COLUMN_ALIGN")
QDEF1(MP_QSTR_STYLE_GRID_COLUMN_DSC_ARRAY, (const byte*)"\x51\xd3\x1b" "STYLE_GRID_COLUMN_DSC_ARRAY")
QDEF1(MP_QSTR_STYLE_GRID_ROW_ALIGN, (const byte*)"\xb2\x37\x14" "STYLE_GRID_ROW_ALIGN")
QDEF1(MP_QSTR_STYLE_GRID_ROW_DSC_ARRAY, (const byte*)"\x2d\xbf\x18" "STYLE_GRID_ROW_DSC_ARRAY")
QDEF1(MP_QSTR_SUBTRACTIVE, (const byte*)"\x6b\x02\x0b" "SUBTRACTIVE")
QDEF1(MP_QSTR_SWAP, (const byte*)"\x10\x39\x04" "SWAP")
QDEF1(MP_QSTR_SYMBOL, (const byte*)"\xe3\x0c\x06" "SYMBOL")
QDEF1(MP_QSTR_SYMMETRICAL, (const byte*)"\x6b\x35\x0b" "SYMMETRICAL")
QDEF1(MP_QSTR_Signal, (const byte*)"\x9b\xe4\x06" "Signal")
QDEF1(MP_QSTR_Snd, (const byte*)"\xbc\x0f\x03" "Snd")
QDEF1(MP_QSTR_SoftI2C, (const byte*)"\x13\xf2\x07" "SoftI2C")
QDEF1(MP_QSTR_SoftSPI, (const byte*)"\x21\x58\x07" "SoftSPI")
QDEF1(MP_QSTR_SoftTimer, (const byte*)"\xec\xc2\x09" "SoftTimer")
QDEF1(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF1(MP_QSTR_StringIO, (const byte*)"\x76\x76\x08" "StringIO")
QDEF1(MP_QSTR_Struct, (const byte*)"\xf2\x94\x06" "Struct")
QDEF1(MP_QSTR_SystemInfo, (const byte*)"\x4e\xb2\x0a" "SystemInfo")
QDEF1(MP_QSTR_TABLE_CELL, (const byte*)"\x82\x79\x0a" "TABLE_CELL")
QDEF1(MP_QSTR_TEAL, (const byte*)"\x79\xd1\x04" "TEAL")
QDEF1(MP_QSTR_TEXTAREA_CURSOR, (const byte*)"\x3a\x1c\x0f" "TEXTAREA_CURSOR")
QDEF1(MP_QSTR_TEXT_ALIGN, (const byte*)"\x0a\x92\x0a" "TEXT_ALIGN")
QDEF1(MP_QSTR_TEXT_CMD_STATE, (const byte*)"\x65\xe6\x0e" "TEXT_CMD_STATE")
QDEF1(MP_QSTR_TEXT_COLOR, (const byte*)"\x7a\x33\x0a" "TEXT_COLOR")
QDEF1(MP_QSTR_TEXT_COLOR_FILTERED, (const byte*)"\xa4\x6c\x13" "TEXT_COLOR_FILTERED")
QDEF1(MP_QSTR_TEXT_CROP, (const byte*)"\xc9\xae\x09" "TEXT_CROP")
QDEF1(MP_QSTR_TEXT_DECOR, (const byte*)"\xb8\x16\x0a" "TEXT_DECOR")
QDEF1(MP_QSTR_TEXT_FLAG, (const byte*)"\xab\xce\x09" "TEXT_FLAG")
QDEF1(MP_QSTR_TEXT_FONT, (const byte*)"\x54\xc1\x09" "TEXT_FONT")
QDEF1(MP_QSTR_TEXT_LETTER_SPACE, (const byte*)"\x62\x3b\x11" "TEXT_LETTER_SPACE")
QDEF1(MP_QSTR_TEXT_LINE_SPACE, (const byte*)"\x12\x00\x0f" "TEXT_LINE_SPACE")
QDEF1(MP_QSTR_TEXT_LOWER, (const byte*)"\x24\x82\x0a" "TEXT_LOWER")
QDEF1(MP_QSTR_TEXT_OPA, (const byte*)"\xb9\xcf\x08" "TEXT_OPA")
QDEF1(MP_QSTR_TEXT_UPPER, (const byte*)"\xc5\x12\x0a" "TEXT_UPPER")
QDEF1(MP_QSTR_TICK, (const byte*)"\x30\xe2\x04" "TICK")
QDEF1(MP_QSTR_TICKS, (const byte*)"\x63\x28\x05" "TICKS")
QDEF1(MP_QSTR_TICK_LABEL, (const byte*)"\x49\xcb\x0a" "TICK_LABEL")
QDEF1(MP_QSTR_TIMER, (const byte*)"\xa2\x1f\x05" "TIMER")
QDEF1(MP_QSTR_TIMER_WAKE, (const byte*)"\x65\x11\x0a" "TIMER_WAKE")
QDEF1(MP_QSTR_TOP, (const byte*)"\x4e\x00\x03" "TOP")
QDEF1(MP_QSTR_TOP_LEFT, (const byte*)"\xca\x2a\x08" "TOP_LEFT")
QDEF1(MP_QSTR_TOP_MID, (const byte*)"\xd1\x5a\x07" "TOP_MID")
QDEF1(MP_QSTR_TOP_RIGHT, (const byte*)"\x11\xb0\x09" "TOP_RIGHT")
QDEF1(MP_QSTR_TOUCHPAD_WAKE, (const byte*)"\xb2\x8c\x0d" "TOUCHPAD_WAKE")
QDEF1(MP_QSTR_TOUT, (const byte*)"\xff\x09\x04" "TOUT")
QDEF1(MP_QSTR_TRACE, (const byte*)"\xc4\xc5\x05" "TRACE")
QDEF1(MP_QSTR_TRACK, (const byte*)"\xca\xc5\x05" "TRACK")
QDEF1(MP_QSTR_TRANSFORM_ANGLE, (const byte*)"\x57\xce\x0f" "TRANSFORM_ANGLE")
QDEF1(MP_QSTR_TRANSFORM_HEIGHT, (const byte*)"\xa9\xcd\x10" "TRANSFORM_HEIGHT")
QDEF1(MP_QSTR_TRANSFORM_WIDTH, (const byte*)"\xf0\x2e\x0f" "TRANSFORM_WIDTH")
QDEF1(MP_QSTR_TRANSFORM_ZOOM, (const byte*)"\x61\xec\x0e" "TRANSFORM_ZOOM")
QDEF1(MP_QSTR_TRANSITION, (const byte*)"\x2a\x78\x0a" "TRANSITION")
QDEF1(MP_QSTR_TRANSLATE_X, (const byte*)"\xc4\x64\x0b" "TRANSLATE_X")
QDEF1(MP_QSTR_TRANSLATE_Y, (const byte*)"\xc5\x64\x0b" "TRANSLATE_Y")
QDEF1(MP_QSTR_TRANSP, (const byte*)"\xcf\x9e\x06" "TRANSP")
QDEF1(MP_QSTR_TRASH, (const byte*)"\xd9\xc7\x05" "TRASH")
QDEF1(MP_QSTR_TREE_WALK, (const byte*)"\xed\x5d\x09" "TREE_WALK")
QDEF1(MP_QSTR_TRUE, (const byte*)"\xf3\x9b\x04" "TRUE")
QDEF1(MP_QSTR_TRUE_COLOR, (const byte*)"\x91\xb3\x0a" "TRUE_COLOR")
QDEF1(MP_QSTR_TRUE_COLOR_ALPHA, (const byte*)"\xfa\xd3\x10" "TRUE_COLOR_ALPHA")
QDEF1(MP_QSTR_TRUE_COLOR_CHROMA_KEYED, (const byte*)"\x9d\x81\x17" "TRUE_COLOR_CHROMA_KEYED")
QDEF1(MP_QSTR_TYPE, (const byte*)"\x5d\xa0\x04" "TYPE")
QDEF1(MP_QSTR_Task, (const byte*)"\x08\x42\x04" "Task")
QDEF1(MP_QSTR_TaskQueue, (const byte*)"\x99\x5c\x09" "TaskQueue")
QDEF1(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x8d\x0d" "TextIOWrapper")
QDEF1(MP_QSTR_Timer, (const byte*)"\xa2\x1f\x05" "Timer")
QDEF1(MP_QSTR_Tts, (const byte*)"\x76\x01\x03" "Tts")
QDEF1(MP_QSTR_UART, (const byte*)"\xb7\x19\x04" "UART")
QDEF1(MP_QSTR_UART_MODE, (const byte*)"\xeb\xe5\x09" "UART_MODE")
QDEF1(MP_QSTR_UI, (const byte*)"\xb9\x73\x02" "UI")
QDEF1(MP_QSTR_UINT, (const byte*)"\x23\x3d\x04" "UINT")
QDEF1(MP_QSTR_UINT16, (const byte*)"\xc4\x17\x06" "UINT16")
QDEF1(MP_QSTR_UINT32, (const byte*)"\x82\x17\x06" "UINT32")
QDEF1(MP_QSTR_UINT64, (const byte*)"\x61\x18\x06" "UINT64")
QDEF1(MP_QSTR_UINT8, (const byte*)"\xbb\xe1\x05" "UINT8")
QDEF1(MP_QSTR_UI_FRAMEWORK_FB, (const byte*)"\xc1\x40\x0f" "UI_FRAMEWORK_FB")
QDEF1(MP_QSTR_UI_FRAMEWORK_GREENUI, (const byte*)"\xa2\xf3\x14" "UI_FRAMEWORK_GREENUI")
QDEF1(MP_QSTR_UI_FRAMEWORK_LVGL, (const byte*)"\xf4\xfb\x11" "UI_FRAMEWORK_LVGL")
QDEF1(MP_QSTR_UI_FRAMEWORK_MAX, (const byte*)"\xd1\x6e\x10" "UI_FRAMEWORK_MAX")
QDEF1(MP_QSTR_UI_FRAMEWORK_NONE, (const byte*)"\x0f\xbb\x11" "UI_FRAMEWORK_NONE")
QDEF1(MP_QSTR_UI_FRAMEWORK_SDL, (const byte*)"\xbe\x98\x10" "UI_FRAMEWORK_SDL")
QDEF1(MP_QSTR_ULONG, (const byte*)"\x7a\x8d\x05" "ULONG")
QDEF1(MP_QSTR_ULONGLONG, (const byte*)"\x70\xc6\x09" "ULONGLONG")
QDEF1(MP_QSTR_ULP_WAKE, (const byte*)"\x6b\x56\x08" "ULP_WAKE")
QDEF1(MP_QSTR_UNDERLINE, (const byte*)"\xc3\x61\x09" "UNDERLINE")
QDEF1(MP_QSTR_UNKNOWN, (const byte*)"\x8d\x87\x07" "UNKNOWN")
QDEF1(MP_QSTR_UP, (const byte*)"\xa0\x73\x02" "UP")
QDEF1(MP_QSTR_UPDATE_MODE, (const byte*)"\x08\xe6\x0b" "UPDATE_MODE")
QDEF1(MP_QSTR_UPLOAD, (const byte*)"\x46\xc2\x06" "UPLOAD")
QDEF1(MP_QSTR_USB, (const byte*)"\x41\xe8\x03" "USB")
QDEF1(MP_QSTR_USER, (const byte*)"\x54\xf1\x04" "USER")
QDEF1(MP_QSTR_USER_1, (const byte*)"\xda\x8c\x06" "USER_1")
QDEF1(MP_QSTR_USER_2, (const byte*)"\xd9\x8c\x06" "USER_2")
QDEF1(MP_QSTR_USER_3, (const byte*)"\xd8\x8c\x06" "USER_3")
QDEF1(MP_QSTR_USER_4, (const byte*)"\xdf\x8c\x06" "USER_4")
QDEF1(MP_QSTR_USER_ENCODED_0, (const byte*)"\x26\x17\x0e" "USER_ENCODED_0")
QDEF1(MP_QSTR_USER_ENCODED_1, (const byte*)"\x27\x17\x0e" "USER_ENCODED_1")
QDEF1(MP_QSTR_USER_ENCODED_2, (const byte*)"\x24\x17\x0e" "USER_ENCODED_2")
QDEF1(MP_QSTR_USER_ENCODED_3, (const byte*)"\x25\x17\x0e" "USER_ENCODED_3")
QDEF1(MP_QSTR_USER_ENCODED_4, (const byte*)"\x22\x17\x0e" "USER_ENCODED_4")
QDEF1(MP_QSTR_USER_ENCODED_5, (const byte*)"\x23\x17\x0e" "USER_ENCODED_5")
QDEF1(MP_QSTR_USER_ENCODED_6, (const byte*)"\x20\x17\x0e" "USER_ENCODED_6")
QDEF1(MP_QSTR_USER_ENCODED_7, (const byte*)"\x21\x17\x0e" "USER_ENCODED_7")
QDEF1(MP_QSTR_USHORT, (const byte*)"\xa2\xf4\x06" "USHORT")
QDEF1(MP_QSTR_UnicodeError, (const byte*)"\x22\xd1\x0c" "UnicodeError")
QDEF1(MP_QSTR_VALUE, (const byte*)"\xae\xea\x05" "VALUE")
QDEF1(MP_QSTR_VALUE_CHANGED, (const byte*)"\x33\x99\x0d" "VALUE_CHANGED")
QDEF1(MP_QSTR_VARIABLE, (const byte*)"\xe3\x2e\x08" "VARIABLE")
QDEF1(MP_QSTR_VER, (const byte*)"\x84\xf6\x03" "VER")
QDEF1(MP_QSTR_VIDEO, (const byte*)"\xb4\x2d\x05" "VIDEO")
QDEF1(MP_QSTR_VIDEO_CODEC_FFMPEG, (const byte*)"\xe5\x7b\x12" "VIDEO_CODEC_FFMPEG")
QDEF1(MP_QSTR_VIDEO_CODEC_HAL, (const byte*)"\x9f\xc5\x0f" "VIDEO_CODEC_HAL")
QDEF1(MP_QSTR_VIDEO_CODEC_MAX, (const byte*)"\x0e\xca\x0f" "VIDEO_CODEC_MAX")
QDEF1(MP_QSTR_VIDEO_CODEC_NONE, (const byte*)"\x30\x99\x10" "VIDEO_CODEC_NONE")
QDEF1(MP_QSTR_VIRTUAL, (const byte*)"\xa4\xf1\x07" "VIRTUAL")
QDEF1(MP_QSTR_VOID, (const byte*)"\x31\xf2\x04" "VOID")
QDEF1(MP_QSTR_VOLUME_MAX, (const byte*)"\xa6\x01\x0a" "VOLUME_MAX")
QDEF1(MP_QSTR_VOLUME_MID, (const byte*)"\xb2\x00\x0a" "VOLUME_MID")
QDEF1(MP_QSTR_VfsPosix, (const byte*)"\xbb\x4e\x08" "VfsPosix")
QDEF1(MP_QSTR_VideoCodec, (const byte*)"\xfa\x3d\x0a" "VideoCodec")
QDEF1(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x05\x0e" "ViperTypeError")
QDEF1(MP_QSTR_WAIT, (const byte*)"\x8e\x55\x04" "WAIT")
QDEF1(MP_QSTR_WAKE_HIGH, (const byte*)"\x0c\xf7\x09" "WAKE_HIGH")
QDEF1(MP_QSTR_WAKE_LOW, (const byte*)"\x96\x2e\x08" "WAKE_LOW")
QDEF1(MP_QSTR_WARN, (const byte*)"\xef\x52\x04" "WARN")
QDEF1(MP_QSTR_WARNING, (const byte*)"\x4f\xe2\x07" "WARNING")
QDEF1(MP_QSTR_WDT, (const byte*)"\x62\x03\x03" "WDT")
QDEF1(MP_QSTR_WDT_RESET, (const byte*)"\x08\x72\x09" "WDT_RESET")
QDEF1(MP_QSTR_WEAK, (const byte*)"\x9d\x65\x04" "WEAK")
QDEF1(MP_QSTR_WIDGET_1, (const byte*)"\xc7\xdd\x08" "WIDGET_1")
QDEF1(MP_QSTR_WIDGET_2, (const byte*)"\xc4\xdd\x08" "WIDGET_2")
QDEF1(MP_QSTR_WIDTH, (const byte*)"\xc3\x5c\x05" "WIDTH")
QDEF1(MP_QSTR_WIDTH_10BIT, (const byte*)"\xc2\x7c\x0b" "WIDTH_10BIT")
QDEF1(MP_QSTR_WIDTH_11BIT, (const byte*)"\xa3\xdf\x0b" "WIDTH_11BIT")
QDEF1(MP_QSTR_WIDTH_12BIT, (const byte*)"\x80\xa4\x0b" "WIDTH_12BIT")
QDEF1(MP_QSTR_WIDTH_13BIT, (const byte*)"\x61\x08\x0b" "WIDTH_13BIT")
QDEF1(MP_QSTR_WIDTH_9BIT, (const byte*)"\x5a\x2c\x0a" "WIDTH_9BIT")
QDEF1(MP_QSTR_WIFI, (const byte*)"\x74\x77\x04" "WIFI")
QDEF1(MP_QSTR_WIFI_STA_MODE, (const byte*)"\xd1\x5b\x0d" "WIFI_STA_MODE")
QDEF1(MP_QSTR_WLAN_WAKE, (const byte*)"\xb6\xc0\x09" "WLAN_WAKE")
QDEF1(MP_QSTR_WR, (const byte*)"\x60\x74\x02" "WR")
QDEF1(MP_QSTR_WRAP, (const byte*)"\x11\x04\x04" "WRAP")
QDEF1(MP_QSTR_WifiInfo, (const byte*)"\xda\x9d\x08" "WifiInfo")
QDEF1(MP_QSTR_X, (const byte*)"\xfd\xb5\x01" "X")
QDEF1(MP_QSTR_Y, (const byte*)"\xfc\xb5\x01" "Y")
QDEF1(MP_QSTR_YELLOW, (const byte*)"\x41\x49\x06" "YELLOW")
QDEF1(MP_QSTR__0, (const byte*)"\x0a\x75\x02" "_0")
QDEF1(MP_QSTR__10, (const byte*)"\x5b\x16\x03" "_10")
QDEF1(MP_QSTR__100, (const byte*)"\x8b\xe1\x04" "_100")
QDEF1(MP_QSTR__180, (const byte*)"\x83\xe0\x04" "_180")
QDEF1(MP_QSTR__20, (const byte*)"\x38\x16\x03" "_20")
QDEF1(MP_QSTR__270, (const byte*)"\x2f\xde\x04" "_270")
QDEF1(MP_QSTR__30, (const byte*)"\x19\x16\x03" "_30")
QDEF1(MP_QSTR__40, (const byte*)"\xfe\x16\x03" "_40")
QDEF1(MP_QSTR__50, (const byte*)"\xdf\x16\x03" "_50")
QDEF1(MP_QSTR__60, (const byte*)"\xbc\x16\x03" "_60")
QDEF1(MP_QSTR__70, (const byte*)"\x9d\x16\x03" "_70")
QDEF1(MP_QSTR__80, (const byte*)"\x72\x15\x03" "_80")
QDEF1(MP_QSTR__90, (const byte*)"\x53\x15\x03" "_90")
QDEF1(MP_QSTR__del, (const byte*)"\xb7\x50\x04" "_del")
QDEF1(MP_QSTR__lv_draw_mask_common_dsc_t, (const byte*)"\x26\x05\x1a" "_lv_draw_mask_common_dsc_t")
QDEF1(MP_QSTR__lv_draw_mask_common_dsc_t_cb, (const byte*)"\x98\xf7\x1d" "_lv_draw_mask_common_dsc_t_cb")
QDEF1(MP_QSTR__lv_draw_mask_radius_circle_dsc_t, (const byte*)"\x3e\x4e\x21" "_lv_draw_mask_radius_circle_dsc_t")
QDEF1(MP_QSTR__lv_indev_proc_t, (const byte*)"\x95\x4d\x10" "_lv_indev_proc_t")
QDEF1(MP_QSTR__lv_indev_proc_types_keypad_t, (const byte*)"\xfc\x47\x1d" "_lv_indev_proc_types_keypad_t")
QDEF1(MP_QSTR__lv_indev_proc_types_pointer_t, (const byte*)"\x45\x2e\x1e" "_lv_indev_proc_types_pointer_t")
QDEF1(MP_QSTR__lv_indev_proc_types_t, (const byte*)"\xc1\x8f\x16" "_lv_indev_proc_types_t")
QDEF1(MP_QSTR__lv_mp_int_wrapper, (const byte*)"\x62\xeb\x12" "_lv_mp_int_wrapper")
QDEF1(MP_QSTR__onewire, (const byte*)"\xf7\x79\x08" "_onewire")
QDEF1(MP_QSTR__task_queue, (const byte*)"\xd9\xc5\x0b" "_task_queue")
QDEF1(MP_QSTR__thread, (const byte*)"\xd4\x02\x07" "_thread")
QDEF1(MP_QSTR__uasyncio, (const byte*)"\xcf\x5f\x09" "_uasyncio")
QDEF1(MP_QSTR__webrepl, (const byte*)"\x21\x95\x08" "_webrepl")
QDEF1(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0b\x0a" "a2b_base64")
QDEF1(MP_QSTR_abs_tol, (const byte*)"\x7d\x6d\x07" "abs_tol")
QDEF1(MP_QSTR_accept, (const byte*)"\x85\x89\x06" "accept")
QDEF1(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF1(MP_QSTR_acosh, (const byte*)"\x13\xa3\x05" "acosh")
QDEF1(MP_QSTR_acquire, (const byte*)"\x1d\xd3\x07" "acquire")
QDEF1(MP_QSTR_act_obj, (const byte*)"\xab\x33\x07" "act_obj")
QDEF1(MP_QSTR_act_point, (const byte*)"\x40\x1e\x09" "act_point")
QDEF1(MP_QSTR_act_scr, (const byte*)"\xce\xaa\x07" "act_scr")
QDEF1(MP_QSTR_act_time, (const byte*)"\xb9\x0f\x08" "act_time")
QDEF1(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF1(MP_QSTR_addService, (const byte*)"\xd9\x55\x0a" "addService")
QDEF1(MP_QSTR_addTopo, (const byte*)"\xe0\x02\x07" "addTopo")
QDEF1(MP_QSTR_add_arc, (const byte*)"\xcb\x95\x07" "add_arc")
QDEF1(MP_QSTR_add_btn, (const byte*)"\x03\x9a\x07" "add_btn")
QDEF1(MP_QSTR_add_cell_ctrl, (const byte*)"\x2b\x90\x0d" "add_cell_ctrl")
QDEF1(MP_QSTR_add_char, (const byte*)"\xc3\x70\x08" "add_char")
QDEF1(MP_QSTR_add_cursor, (const byte*)"\xd1\xdc\x0a" "add_cursor")
QDEF1(MP_QSTR_add_event_cb, (const byte*)"\xc9\x80\x0c" "add_event_cb")
QDEF1(MP_QSTR_add_file, (const byte*)"\xdd\x22\x08" "add_file")
QDEF1(MP_QSTR_add_flag, (const byte*)"\x77\x0d\x08" "add_flag")
QDEF1(MP_QSTR_add_itext, (const byte*)"\x0f\x77\x09" "add_itext")
QDEF1(MP_QSTR_add_needle_img, (const byte*)"\x84\x67\x0e" "add_needle_img")
QDEF1(MP_QSTR_add_needle_line, (const byte*)"\xa9\xfd\x0f" "add_needle_line")
QDEF1(MP_QSTR_add_obj, (const byte*)"\x5c\x8f\x07" "add_obj")
QDEF1(MP_QSTR_add_option, (const byte*)"\x58\xcd\x0a" "add_option")
QDEF1(MP_QSTR_add_scale, (const byte*)"\xa3\x01\x09" "add_scale")
QDEF1(MP_QSTR_add_scale_lines, (const byte*)"\x21\x27\x0f" "add_scale_lines")
QDEF1(MP_QSTR_add_series, (const byte*)"\x00\xf5\x0a" "add_series")
QDEF1(MP_QSTR_add_state, (const byte*)"\x8c\x5a\x09" "add_state")
QDEF1(MP_QSTR_add_style, (const byte*)"\x8c\xf7\x09" "add_style")
QDEF1(MP_QSTR_add_tab, (const byte*)"\xac\x60\x07" "add_tab")
QDEF1(MP_QSTR_add_text, (const byte*)"\x06\x66\x08" "add_text")
QDEF1(MP_QSTR_add_tile, (const byte*)"\x8f\x54\x08" "add_tile")
QDEF1(MP_QSTR_add_title, (const byte*)"\x3b\x09\x09" "add_title")
QDEF1(MP_QSTR_addr, (const byte*)"\xb6\x7a\x04" "addr")
QDEF1(MP_QSTR_addressof, (const byte*)"\x5a\xf9\x09" "addressof")
QDEF1(MP_QSTR_addrsize, (const byte*)"\x93\x91\x08" "addrsize")
QDEF1(MP_QSTR_adv_w, (const byte*)"\x1e\x26\x05" "adv_w")
QDEF1(MP_QSTR_aes, (const byte*)"\x32\x32\x03" "aes")
QDEF1(MP_QSTR_aiagent, (const byte*)"\x94\xc8\x07" "aiagent")
QDEF1(MP_QSTR_align, (const byte*)"\xa8\xfb\x05" "align")
QDEF1(MP_QSTR_align_to, (const byte*)"\x6c\x84\x08" "align_to")
QDEF1(MP_QSTR_aliyunIoT, (const byte*)"\x11\x9e\x09" "aliyunIoT")
QDEF1(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x2a\x1d" "alloc_emergency_exception_buf")
QDEF1(MP_QSTR_allocate_lock, (const byte*)"\xec\xed\x0d" "allocate_lock")
QDEF1(MP_QSTR_allocate_spec_attr, (const byte*)"\x2e\x0d\x12" "allocate_spec_attr")
QDEF1(MP_QSTR_always_zero, (const byte*)"\xe9\xc1\x0b" "always_zero")
QDEF1(MP_QSTR_angle, (const byte*)"\x84\x2c\x05" "angle")
QDEF1(MP_QSTR_angle_init, (const byte*)"\x41\x45\x0a" "angle_init")
QDEF1(MP_QSTR_angle_range, (const byte*)"\x84\x07\x0b" "angle_range")
QDEF1(MP_QSTR_anim_count_running, (const byte*)"\xca\xbe\x12" "anim_count_running")
QDEF1(MP_QSTR_anim_del, (const byte*)"\x7c\x83\x08" "anim_del")
QDEF1(MP_QSTR_anim_del_all, (const byte*)"\xe2\xad\x0c" "anim_del_all")
QDEF1(MP_QSTR_anim_get, (const byte*)"\x27\xa0\x08" "anim_get")
QDEF1(MP_QSTR_anim_refr_now, (const byte*)"\xbb\x99\x0d" "anim_refr_now")
QDEF1(MP_QSTR_anim_speed_to_time, (const byte*)"\x58\xed\x12" "anim_speed_to_time")
QDEF1(MP_QSTR_anim_t, (const byte*)"\xc5\x86\x06" "anim_t")
QDEF1(MP_QSTR_anim_timeline_add, (const byte*)"\x34\x71\x11" "anim_timeline_add")
QDEF1(MP_QSTR_anim_timeline_create, (const byte*)"\xf1\xf2\x14" "anim_timeline_create")
QDEF1(MP_QSTR_anim_timeline_del, (const byte*)"\x58\x5d\x11" "anim_timeline_del")
QDEF1(MP_QSTR_anim_timeline_get_playtime, (const byte*)"\x2d\x70\x1a" "anim_timeline_get_playtime")
QDEF1(MP_QSTR_anim_timeline_get_reverse, (const byte*)"\xfc\xff\x19" "anim_timeline_get_reverse")
QDEF1(MP_QSTR_anim_timeline_set_progress, (const byte*)"\x75\x7f\x1a" "anim_timeline_set_progress")
QDEF1(MP_QSTR_anim_timeline_set_reverse, (const byte*)"\xe8\x4c\x19" "anim_timeline_set_reverse")
QDEF1(MP_QSTR_anim_timeline_start, (const byte*)"\x75\xca\x13" "anim_timeline_start")
QDEF1(MP_QSTR_anim_timeline_stop, (const byte*)"\xad\x0e\x12" "anim_timeline_stop")
QDEF1(MP_QSTR_animimg, (const byte*)"\x4d\xc7\x07" "animimg")
QDEF1(MP_QSTR_animimg_class, (const byte*)"\xbc\x35\x0d" "animimg_class")
QDEF1(MP_QSTR_antialias, (const byte*)"\x81\xac\x09" "antialias")
QDEF1(MP_QSTR_antialiasing, (const byte*)"\x01\x8a\x0c" "antialiasing")
QDEF1(MP_QSTR_apply_cb, (const byte*)"\x4f\x73\x08" "apply_cb")
QDEF1(MP_QSTR_arc, (const byte*)"\x95\x34\x03" "arc")
QDEF1(MP_QSTR_arc_class, (const byte*)"\xe4\x9d\x09" "arc_class")
QDEF1(MP_QSTR_arc_dsc, (const byte*)"\xfe\x2e\x07" "arc_dsc")
QDEF1(MP_QSTR_area, (const byte*)"\x92\xc6\x04" "area")
QDEF1(MP_QSTR_area_is_visible, (const byte*)"\xe6\xed\x0f" "area_is_visible")
QDEF1(MP_QSTR_area_t, (const byte*)"\x59\xaa\x06" "area_t")
QDEF1(MP_QSTR_arg, (const byte*)"\x91\x34\x03" "arg")
QDEF1(MP_QSTR_argv, (const byte*)"\xc7\xc6\x04" "argv")
QDEF1(MP_QSTR_array, (const byte*)"\x7c\x72\x05" "array")
QDEF1(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF1(MP_QSTR_asinh, (const byte*)"\x38\x8f\x05" "asinh")
QDEF1(MP_QSTR_async_call, (const byte*)"\xfe\xed\x0a" "async_call")
QDEF1(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF1(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF1(MP_QSTR_atanh, (const byte*)"\x97\x81\x05" "atanh")
QDEF1(MP_QSTR_atexit, (const byte*)"\xb0\x98\x06" "atexit")
QDEF1(MP_QSTR_audio, (const byte*)"\x53\x12\x05" "audio")
QDEF1(MP_QSTR_autoReconnect, (const byte*)"\x03\xf1\x0d" "autoReconnect")
QDEF1(MP_QSTR_autoSaveAP, (const byte*)"\x1a\xb4\x0a" "autoSaveAP")
QDEF1(MP_QSTR_b2a_base64, (const byte*)"\x3c\x8f\x0a" "b2a_base64")
QDEF1(MP_QSTR_background_b, (const byte*)"\xb6\x0b\x0c" "background_b")
QDEF1(MP_QSTR_background_defined, (const byte*)"\x95\x21\x12" "background_defined")
QDEF1(MP_QSTR_background_g, (const byte*)"\xb3\x0b\x0c" "background_g")
QDEF1(MP_QSTR_background_r, (const byte*)"\xa6\x0b\x0c" "background_r")
QDEF1(MP_QSTR_bar, (const byte*)"\xf4\x47\x03" "bar")
QDEF1(MP_QSTR_bar_class, (const byte*)"\x45\x95\x09" "bar_class")
QDEF1(MP_QSTR_base_class, (const byte*)"\x41\xc3\x0a" "base_class")
QDEF1(MP_QSTR_base_line, (const byte*)"\xe1\x7c\x09" "base_line")
QDEF1(MP_QSTR_baudrate, (const byte*)"\xf5\xd8\x08" "baudrate")
QDEF1(MP_QSTR_bezier3, (const byte*)"\x55\x57\x07" "bezier3")
QDEF1(MP_QSTR_bg_color, (const byte*)"\x02\x32\x08" "bg_color")
QDEF1(MP_QSTR_bg_fn, (const byte*)"\x57\x5d\x05" "bg_fn")
QDEF1(MP_QSTR_bg_grad_color, (const byte*)"\x0d\x33\x0d" "bg_grad_color")
QDEF1(MP_QSTR_bg_grad_color_stop, (const byte*)"\x6a\xb9\x12" "bg_grad_color_stop")
QDEF1(MP_QSTR_bg_grad_dir, (const byte*)"\xef\x1e\x0b" "bg_grad_dir")
QDEF1(MP_QSTR_bg_img, (const byte*)"\x7c\xf4\x06" "bg_img")
QDEF1(MP_QSTR_bg_img_opa, (const byte*)"\x7d\xb9\x0a" "bg_img_opa")
QDEF1(MP_QSTR_bg_img_recolor, (const byte*)"\x09\xfc\x0e" "bg_img_recolor")
QDEF1(MP_QSTR_bg_img_recolor_opa, (const byte*)"\x48\x98\x12" "bg_img_recolor_opa")
QDEF1(MP_QSTR_bg_img_src, (const byte*)"\x21\xc6\x0a" "bg_img_src")
QDEF1(MP_QSTR_bg_img_symbol_font, (const byte*)"\x29\xfe\x12" "bg_img_symbol_font")
QDEF1(MP_QSTR_bg_img_tiled, (const byte*)"\xf3\xd7\x0c" "bg_img_tiled")
QDEF1(MP_QSTR_bg_main_color_stop, (const byte*)"\x91\x22\x12" "bg_main_color_stop")
QDEF1(MP_QSTR_bg_opa, (const byte*)"\x01\xe8\x06" "bg_opa")
QDEF1(MP_QSTR_bidi_calculate_align, (const byte*)"\xea\x18\x14" "bidi_calculate_align")
QDEF1(MP_QSTR_bidi_dir, (const byte*)"\xe3\xff\x08" "bidi_dir")
QDEF1(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF1(MP_QSTR_bind, (const byte*)"\x84\x64\x04" "bind")
QDEF1(MP_QSTR_bitdepth, (const byte*)"\x37\xa9\x08" "bitdepth")
QDEF1(MP_QSTR_bits, (const byte*)"\x49\x68\x04" "bits")
QDEF1(MP_QSTR_ble, (const byte*)"\x4e\x48\x03" "ble")
QDEF1(MP_QSTR_blecfg, (const byte*)"\xac\xad\x06" "blecfg")
QDEF1(MP_QSTR_blend_mode, (const byte*)"\xf8\xd4\x0a" "blend_mode")
QDEF1(MP_QSTR_blit, (const byte*)"\xf6\x50\x04" "blit")
QDEF1(MP_QSTR_blue, (const byte*)"\x7b\x54\x04" "blue")
QDEF1(MP_QSTR_blur_hor, (const byte*)"\x46\x1e\x08" "blur_hor")
QDEF1(MP_QSTR_blur_ver, (const byte*)"\x12\xd1\x08" "blur_ver")
QDEF1(MP_QSTR_bootloader, (const byte*)"\xe2\xef\x0a" "bootloader")
QDEF1(MP_QSTR_border_color, (const byte*)"\x6b\x9b\x0c" "border_color")
QDEF1(MP_QSTR_border_opa, (const byte*)"\x68\x0f\x0a" "border_opa")
QDEF1(MP_QSTR_border_post, (const byte*)"\x2e\xbb\x0b" "border_post")
QDEF1(MP_QSTR_border_side, (const byte*)"\xed\x4d\x0b" "border_side")
QDEF1(MP_QSTR_border_width, (const byte*)"\x10\xcc\x0c" "border_width")
QDEF1(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF1(MP_QSTR_box_h, (const byte*)"\xa7\xfb\x05" "box_h")
QDEF1(MP_QSTR_box_w, (const byte*)"\xb8\xfb\x05" "box_w")
QDEF1(MP_QSTR_bpp, (const byte*)"\xc7\x49\x03" "bpp")
QDEF1(MP_QSTR_btn, (const byte*)"\x5d\x49\x03" "btn")
QDEF1(MP_QSTR_btn_class, (const byte*)"\xac\xf3\x09" "btn_class")
QDEF1(MP_QSTR_btn_id, (const byte*)"\x8f\x19\x06" "btn_id")
QDEF1(MP_QSTR_btn_points, (const byte*)"\x5d\x62\x0a" "btn_points")
QDEF1(MP_QSTR_btnmatrix, (const byte*)"\x86\x08\x09" "btnmatrix")
QDEF1(MP_QSTR_btnmatrix_class, (const byte*)"\x37\xda\x0f" "btnmatrix_class")
QDEF1(MP_QSTR_buf, (const byte*)"\x74\x49\x03" "buf")
QDEF1(MP_QSTR_buf1, (const byte*)"\xc5\x77\x04" "buf1")
QDEF1(MP_QSTR_buf2, (const byte*)"\xc6\x77\x04" "buf2")
QDEF1(MP_QSTR_buf_act, (const byte*)"\x9d\x73\x07" "buf_act")
QDEF1(MP_QSTR_buf_alloc, (const byte*)"\x86\x19\x09" "buf_alloc")
QDEF1(MP_QSTR_buf_free, (const byte*)"\x1f\xf2\x08" "buf_free")
QDEF1(MP_QSTR_buf_get_img_size, (const byte*)"\x7b\xda\x10" "buf_get_img_size")
QDEF1(MP_QSTR_buf_get_px_alpha, (const byte*)"\x21\x47\x10" "buf_get_px_alpha")
QDEF1(MP_QSTR_buf_get_px_color, (const byte*)"\xa8\xef\x10" "buf_get_px_color")
QDEF1(MP_QSTR_buf_set_palette, (const byte*)"\x0b\xb0\x0f" "buf_set_palette")
QDEF1(MP_QSTR_buf_set_px_alpha, (const byte*)"\xb5\xda\x10" "buf_set_px_alpha")
QDEF1(MP_QSTR_buf_set_px_color, (const byte*)"\x3c\xda\x10" "buf_set_px_color")
QDEF1(MP_QSTR_buffer, (const byte*)"\xe5\xa0\x06" "buffer")
QDEF1(MP_QSTR_buffering, (const byte*)"\x25\xdb\x09" "buffering")
QDEF1(MP_QSTR_built_in_close, (const byte*)"\x12\xe0\x0e" "built_in_close")
QDEF1(MP_QSTR_built_in_info, (const byte*)"\xaa\x4d\x0d" "built_in_info")
QDEF1(MP_QSTR_built_in_open, (const byte*)"\xd0\x93\x0d" "built_in_open")
QDEF1(MP_QSTR_built_in_read_line, (const byte*)"\xa7\x99\x12" "built_in_read_line")
QDEF1(MP_QSTR_bytearray_at, (const byte*)"\x9c\x5c\x0c" "bytearray_at")
QDEF1(MP_QSTR_byteorder, (const byte*)"\x61\x99\x09" "byteorder")
QDEF1(MP_QSTR_bytes_at, (const byte*)"\xb6\x5d\x08" "bytes_at")
QDEF1(MP_QSTR_c, (const byte*)"\xc6\xb5\x01" "c")
QDEF1(MP_QSTR_cache_invalidate_src, (const byte*)"\x6a\x67\x14" "cache_invalidate_src")
QDEF1(MP_QSTR_cache_set_size, (const byte*)"\x2e\xf4\x0e" "cache_set_size")
QDEF1(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF1(MP_QSTR_calculate_ext_draw_size, (const byte*)"\xb2\x0c\x17" "calculate_ext_draw_size")
QDEF1(MP_QSTR_calculate_style_text_align, (const byte*)"\x59\x77\x1a" "calculate_style_text_align")
QDEF1(MP_QSTR_calendar, (const byte*)"\x17\x34\x08" "calendar")
QDEF1(MP_QSTR_calendar_class, (const byte*)"\x66\x66\x0e" "calendar_class")
QDEF1(MP_QSTR_calendar_date_t, (const byte*)"\xb7\x65\x0f" "calendar_date_t")
QDEF1(MP_QSTR_calendar_header_arrow, (const byte*)"\x51\xf0\x15" "calendar_header_arrow")
QDEF1(MP_QSTR_calendar_header_arrow_class, (const byte*)"\xa0\xa7\x1b" "calendar_header_arrow_class")
QDEF1(MP_QSTR_calendar_header_dropdown, (const byte*)"\x93\x8b\x18" "calendar_header_dropdown")
QDEF1(MP_QSTR_calendar_header_dropdown_class, (const byte*)"\xe2\x4c\x1e" "calendar_header_dropdown_class")
QDEF1(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF1(MP_QSTR_can_have_alpha, (const byte*)"\x07\x6a\x0e" "can_have_alpha")
QDEF1(MP_QSTR_cancel, (const byte*)"\x03\x87\x06" "cancel")
QDEF1(MP_QSTR_canvas, (const byte*)"\xcd\xf8\x06" "canvas")
QDEF1(MP_QSTR_canvas_class, (const byte*)"\x3c\x87\x0c" "canvas_class")
QDEF1(MP_QSTR_capture, (const byte*)"\x61\xb6\x07" "capture")
QDEF1(MP_QSTR_cb, (const byte*)"\xe4\x6e\x02" "cb")
QDEF1(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF1(MP_QSTR_center, (const byte*)"\x4e\xbf\x06" "center")
QDEF1(MP_QSTR_cert, (const byte*)"\x25\xb1\x04" "cert")
QDEF1(MP_QSTR_cf, (const byte*)"\xe0\x6e\x02" "cf")
QDEF1(MP_QSTR_cf_get_px_size, (const byte*)"\xc4\x89\x0e" "cf_get_px_size")
QDEF1(MP_QSTR_cf_has_alpha, (const byte*)"\xce\xb1\x0c" "cf_has_alpha")
QDEF1(MP_QSTR_cf_is_chroma_keyed, (const byte*)"\x29\x6f\x12" "cf_is_chroma_keyed")
QDEF1(MP_QSTR_cfg, (const byte*)"\x87\x4a\x03" "cfg")
QDEF1(MP_QSTR_ch, (const byte*)"\xee\x6e\x02" "ch")
QDEF1(MP_QSTR_chart, (const byte*)"\x09\xc2\x05" "chart")
QDEF1(MP_QSTR_chart_class, (const byte*)"\x78\xa0\x0b" "chart_class")
QDEF1(MP_QSTR_chart_cursor_t, (const byte*)"\xb7\xd8\x0e" "chart_cursor_t")
QDEF1(MP_QSTR_chart_series_t, (const byte*)"\x66\x29\x0e" "chart_series_t")
QDEF1(MP_QSTR_chdir, (const byte*)"\xb1\xb2\x05" "chdir")
QDEF1(MP_QSTR_checkDataReady, (const byte*)"\x18\x30\x0e" "checkDataReady")
QDEF1(MP_QSTR_check_type, (const byte*)"\x44\x3e\x0a" "check_type")
QDEF1(MP_QSTR_checkbox, (const byte*)"\x56\x1e\x08" "checkbox")
QDEF1(MP_QSTR_checkbox_class, (const byte*)"\xe7\xaa\x0e" "checkbox_class")
QDEF1(MP_QSTR_choice, (const byte*)"\x2e\x33\x06" "choice")
QDEF1(MP_QSTR_chrm_blue_x, (const byte*)"\xb7\xa7\x0b" "chrm_blue_x")
QDEF1(MP_QSTR_chrm_blue_y, (const byte*)"\xb6\xa7\x0b" "chrm_blue_y")
QDEF1(MP_QSTR_chrm_defined, (const byte*)"\x8f\x55\x0c" "chrm_defined")
QDEF1(MP_QSTR_chrm_green_x, (const byte*)"\x12\x97\x0c" "chrm_green_x")
QDEF1(MP_QSTR_chrm_green_y, (const byte*)"\x13\x97\x0c" "chrm_green_y")
QDEF1(MP_QSTR_chrm_red_x, (const byte*)"\x5a\x92\x0a" "chrm_red_x")
QDEF1(MP_QSTR_chrm_red_y, (const byte*)"\x5b\x92\x0a" "chrm_red_y")
QDEF1(MP_QSTR_chrm_white_x, (const byte*)"\xae\x74\x0c" "chrm_white_x")
QDEF1(MP_QSTR_chrm_white_y, (const byte*)"\xaf\x74\x0c" "chrm_white_y")
QDEF1(MP_QSTR_chunk_ancillary, (const byte*)"\xee\x16\x0f" "chunk_ancillary")
QDEF1(MP_QSTR_chunk_append, (const byte*)"\x6f\xb6\x0c" "chunk_append")
QDEF1(MP_QSTR_chunk_check_crc, (const byte*)"\xea\x74\x0f" "chunk_check_crc")
QDEF1(MP_QSTR_chunk_create, (const byte*)"\xc5\x5d\x0c" "chunk_create")
QDEF1(MP_QSTR_chunk_data, (const byte*)"\x11\x8d\x0a" "chunk_data")
QDEF1(MP_QSTR_chunk_data_const, (const byte*)"\x4b\xf8\x10" "chunk_data_const")
QDEF1(MP_QSTR_chunk_find, (const byte*)"\x04\xe5\x0a" "chunk_find")
QDEF1(MP_QSTR_chunk_find_const, (const byte*)"\x5e\xc0\x10" "chunk_find_const")
QDEF1(MP_QSTR_chunk_generate_crc, (const byte*)"\x27\xeb\x12" "chunk_generate_crc")
QDEF1(MP_QSTR_chunk_length, (const byte*)"\x5d\x48\x0c" "chunk_length")
QDEF1(MP_QSTR_chunk_next, (const byte*)"\x46\x18\x0a" "chunk_next")
QDEF1(MP_QSTR_chunk_next_const, (const byte*)"\x1c\x1a\x10" "chunk_next_const")
QDEF1(MP_QSTR_chunk_private, (const byte*)"\x4c\x95\x0d" "chunk_private")
QDEF1(MP_QSTR_chunk_safetocopy, (const byte*)"\x8e\x79\x10" "chunk_safetocopy")
QDEF1(MP_QSTR_chunk_type, (const byte*)"\x99\x31\x0a" "chunk_type")
QDEF1(MP_QSTR_chunk_type_equals, (const byte*)"\x39\x17\x11" "chunk_type_equals")
QDEF1(MP_QSTR_cir_opa, (const byte*)"\x3c\x21\x07" "cir_opa")
QDEF1(MP_QSTR_circle, (const byte*)"\xb7\xdd\x06" "circle")
QDEF1(MP_QSTR_clamp_height, (const byte*)"\xd6\xbb\x0c" "clamp_height")
QDEF1(MP_QSTR_clamp_width, (const byte*)"\xcf\xe9\x0b" "clamp_width")
QDEF1(MP_QSTR_class_create_obj, (const byte*)"\x08\x23\x10" "class_create_obj")
QDEF1(MP_QSTR_class_init_obj, (const byte*)"\x56\x3d\x0e" "class_init_obj")
QDEF1(MP_QSTR_class_p, (const byte*)"\xa4\x70\x07" "class_p")
QDEF1(MP_QSTR_clean, (const byte*)"\x60\xa0\x05" "clean")
QDEF1(MP_QSTR_clean_dcache, (const byte*)"\x97\x5e\x0c" "clean_dcache")
QDEF1(MP_QSTR_clean_dcache_cb, (const byte*)"\xc9\x1f\x0f" "clean_dcache_cb")
QDEF1(MP_QSTR_clear_btn_ctrl, (const byte*)"\xed\x2f\x0e" "clear_btn_ctrl")
QDEF1(MP_QSTR_clear_btn_ctrl_all, (const byte*)"\xf3\xce\x12" "clear_btn_ctrl_all")
QDEF1(MP_QSTR_clear_cell_ctrl, (const byte*)"\x53\x62\x0f" "clear_cell_ctrl")
QDEF1(MP_QSTR_clear_flag, (const byte*)"\x8f\x3b\x0a" "clear_flag")
QDEF1(MP_QSTR_clear_icc, (const byte*)"\x8a\x6a\x09" "clear_icc")
QDEF1(MP_QSTR_clear_itext, (const byte*)"\xf7\xd1\x0b" "clear_itext")
QDEF1(MP_QSTR_clear_options, (const byte*)"\x13\x28\x0d" "clear_options")
QDEF1(MP_QSTR_clear_selection, (const byte*)"\x83\x9e\x0f" "clear_selection")
QDEF1(MP_QSTR_clear_state, (const byte*)"\x74\xce\x0b" "clear_state")
QDEF1(MP_QSTR_clear_text, (const byte*)"\x3e\xba\x0a" "clear_text")
QDEF1(MP_QSTR_client, (const byte*)"\x9c\x2a\x06" "client")
QDEF1(MP_QSTR_clip_area, (const byte*)"\xfb\x05\x09" "clip_area")
QDEF1(MP_QSTR_close_async, (const byte*)"\xca\x95\x0b" "close_async")
QDEF1(MP_QSTR_close_cb, (const byte*)"\x6d\xed\x08" "close_cb")
QDEF1(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF1(MP_QSTR_cmath, (const byte*)"\xb6\xf4\x05" "cmath")
QDEF1(MP_QSTR_code, (const byte*)"\x68\xda\x04" "code")
QDEF1(MP_QSTR_collect, (const byte*)"\x9b\x65\x07" "collect")
QDEF1(MP_QSTR_color, (const byte*)"\xd8\x06\x05" "color")
QDEF1(MP_QSTR_color16_ch_t, (const byte*)"\xe0\x73\x0c" "color16_ch_t")
QDEF1(MP_QSTR_color16_t, (const byte*)"\x34\xef\x09" "color16_t")
QDEF1(MP_QSTR_color_black, (const byte*)"\x20\xba\x0b" "color_black")
QDEF1(MP_QSTR_color_brightness, (const byte*)"\x4e\xab\x10" "color_brightness")
QDEF1(MP_QSTR_color_change_lightness, (const byte*)"\xab\x37\x16" "color_change_lightness")
QDEF1(MP_QSTR_color_chroma_key, (const byte*)"\x35\x6b\x10" "color_chroma_key")
QDEF1(MP_QSTR_color_convert, (const byte*)"\xb0\x02\x0d" "color_convert")
QDEF1(MP_QSTR_color_darken, (const byte*)"\xf0\x5f\x0c" "color_darken")
QDEF1(MP_QSTR_color_end, (const byte*)"\xc8\x97\x09" "color_end")
QDEF1(MP_QSTR_color_fill, (const byte*)"\xc8\xff\x0a" "color_fill")
QDEF1(MP_QSTR_color_filter_dsc_t, (const byte*)"\x07\x7d\x12" "color_filter_dsc_t")
QDEF1(MP_QSTR_color_hex, (const byte*)"\xb2\xc4\x09" "color_hex")
QDEF1(MP_QSTR_color_hex3, (const byte*)"\xc1\x5a\x0a" "color_hex3")
QDEF1(MP_QSTR_color_hsv_t, (const byte*)"\xe1\x53\x0b" "color_hsv_t")
QDEF1(MP_QSTR_color_hsv_to_rgb, (const byte*)"\xc6\x6d\x10" "color_hsv_to_rgb")
QDEF1(MP_QSTR_color_lighten, (const byte*)"\xd2\x3b\x0d" "color_lighten")
QDEF1(MP_QSTR_color_make, (const byte*)"\x85\xd4\x0a" "color_make")
QDEF1(MP_QSTR_color_mix, (const byte*)"\xfb\xb7\x09" "color_mix")
QDEF1(MP_QSTR_color_mix_premult, (const byte*)"\xc3\x5f\x11" "color_mix_premult")
QDEF1(MP_QSTR_color_mix_with_alpha, (const byte*)"\xad\x29\x14" "color_mix_with_alpha")
QDEF1(MP_QSTR_color_mode_cleanup, (const byte*)"\xbb\xe6\x12" "color_mode_cleanup")
QDEF1(MP_QSTR_color_mode_copy, (const byte*)"\xde\x3a\x0f" "color_mode_copy")
QDEF1(MP_QSTR_color_mode_init, (const byte*)"\x61\x08\x0f" "color_mode_init")
QDEF1(MP_QSTR_color_mode_make, (const byte*)"\x79\xfc\x0f" "color_mode_make")
QDEF1(MP_QSTR_color_premult, (const byte*)"\x20\xc4\x0d" "color_premult")
QDEF1(MP_QSTR_color_primary, (const byte*)"\x6b\x91\x0d" "color_primary")
QDEF1(MP_QSTR_color_rgb_to_hsv, (const byte*)"\x06\xb9\x10" "color_rgb_to_hsv")
QDEF1(MP_QSTR_color_secondary, (const byte*)"\xdd\xd8\x0f" "color_secondary")
QDEF1(MP_QSTR_color_start, (const byte*)"\x47\x1b\x0b" "color_start")
QDEF1(MP_QSTR_color_t, (const byte*)"\x13\x12\x07" "color_t")
QDEF1(MP_QSTR_color_to1, (const byte*)"\xad\xd7\x09" "color_to1")
QDEF1(MP_QSTR_color_to16, (const byte*)"\x7b\xcd\x0a" "color_to16")
QDEF1(MP_QSTR_color_to32, (const byte*)"\xbd\xcd\x0a" "color_to32")
QDEF1(MP_QSTR_color_to8, (const byte*)"\xa4\xd7\x09" "color_to8")
QDEF1(MP_QSTR_color_to_hsv, (const byte*)"\xae\x14\x0c" "color_to_hsv")
QDEF1(MP_QSTR_color_white, (const byte*)"\x80\xed\x0b" "color_white")
QDEF1(MP_QSTR_colortype, (const byte*)"\x40\x32\x09" "colortype")
QDEF1(MP_QSTR_colorwheel, (const byte*)"\x0b\xb9\x0a" "colorwheel")
QDEF1(MP_QSTR_colorwheel_class, (const byte*)"\x7a\x00\x10" "colorwheel_class")
QDEF1(MP_QSTR_compile, (const byte*)"\xf4\xc9\x07" "compile")
QDEF1(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF1(MP_QSTR_compression_method, (const byte*)"\x2b\xc6\x12" "compression_method")
QDEF1(MP_QSTR_config, (const byte*)"\x4f\xa2\x06" "config")
QDEF1(MP_QSTR_conn, (const byte*)"\x29\xd9\x04" "conn")
QDEF1(MP_QSTR_connect, (const byte*)"\xdb\x3d\x07" "connect")
QDEF1(MP_QSTR_const_props, (const byte*)"\x51\x47\x0b" "const_props")
QDEF1(MP_QSTR_constructor_cb, (const byte*)"\x13\x1a\x0e" "constructor_cb")
QDEF1(MP_QSTR_continue_reading, (const byte*)"\x09\x14\x10" "continue_reading")
QDEF1(MP_QSTR_convert, (const byte*)"\xf2\x9e\x07" "convert")
QDEF1(MP_QSTR_coord_y, (const byte*)"\xb6\xb7\x07" "coord_y")
QDEF1(MP_QSTR_coords, (const byte*)"\xc3\x79\x06" "coords")
QDEF1(MP_QSTR_copy_buf, (const byte*)"\x8e\x4c\x08" "copy_buf")
QDEF1(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF1(MP_QSTR_coro, (const byte*)"\xb4\xdb\x04" "coro")
QDEF1(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF1(MP_QSTR_cosh, (const byte*)"\xd2\xdb\x04" "cosh")
QDEF1(MP_QSTR_crc32, (const byte*)"\x76\xe8\x05" "crc32")
QDEF1(MP_QSTR_crc8, (const byte*)"\xcf\xef\x04" "crc8")
QDEF1(MP_QSTR_create_obj, (const byte*)"\xd9\xf9\x0a" "create_obj")
QDEF1(MP_QSTR_cts, (const byte*)"\x41\x4d\x03" "cts")
QDEF1(MP_QSTR_cur_task, (const byte*)"\xf3\x2d\x08" "cur_task")
QDEF1(MP_QSTR_current_target, (const byte*)"\xc2\x87\x0e" "current_target")
QDEF1(MP_QSTR_current_value, (const byte*)"\x38\xdf\x0d" "current_value")
QDEF1(MP_QSTR_cursor, (const byte*)"\xcf\xfa\x06" "cursor")
QDEF1(MP_QSTR_cursor_down, (const byte*)"\x42\x8a\x0b" "cursor_down")
QDEF1(MP_QSTR_cursor_left, (const byte*)"\xab\xd5\x0b" "cursor_left")
QDEF1(MP_QSTR_cursor_right, (const byte*)"\x70\x56\x0c" "cursor_right")
QDEF1(MP_QSTR_cursor_up, (const byte*)"\x55\x43\x09" "cursor_up")
QDEF1(MP_QSTR_custom_context, (const byte*)"\x16\x61\x0e" "custom_context")
QDEF1(MP_QSTR_custom_del, (const byte*)"\x84\x0a\x0a" "custom_del")
QDEF1(MP_QSTR_custom_get, (const byte*)"\x5f\x07\x0a" "custom_get")
QDEF1(MP_QSTR_custom_inflate, (const byte*)"\x34\xe5\x0e" "custom_inflate")
QDEF1(MP_QSTR_custom_zlib, (const byte*)"\x54\xe5\x0b" "custom_zlib")
QDEF1(MP_QSTR_cut_text, (const byte*)"\xc5\xad\x08" "cut_text")
QDEF1(MP_QSTR_cvtColor, (const byte*)"\x59\xad\x08" "cvtColor")
QDEF1(MP_QSTR_dash_gap, (const byte*)"\x52\x7d\x08" "dash_gap")
QDEF1(MP_QSTR_dash_width, (const byte*)"\xc2\xdb\x0a" "dash_width")
QDEF1(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF1(MP_QSTR_data_size, (const byte*)"\xcf\xd6\x09" "data_size")
QDEF1(MP_QSTR_datetime, (const byte*)"\xe4\x04\x08" "datetime")
QDEF1(MP_QSTR_day, (const byte*)"\xf9\x1d\x03" "day")
QDEF1(MP_QSTR_debug, (const byte*)"\xd4\x55\x05" "debug")
QDEF1(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF1(MP_QSTR_decode24, (const byte*)"\x6f\x6e\x08" "decode24")
QDEF1(MP_QSTR_decode24_file, (const byte*)"\xd6\x63\x0d" "decode24_file")
QDEF1(MP_QSTR_decode32, (const byte*)"\x08\x6e\x08" "decode32")
QDEF1(MP_QSTR_decode32_file, (const byte*)"\x91\xd5\x0d" "decode32_file")
QDEF1(MP_QSTR_decodeConfig, (const byte*)"\x03\x14\x0c" "decodeConfig")
QDEF1(MP_QSTR_decode_file, (const byte*)"\xd0\xb4\x0b" "decode_file")
QDEF1(MP_QSTR_decode_memory, (const byte*)"\x17\x04\x0d" "decode_memory")
QDEF1(MP_QSTR_decoder, (const byte*)"\xbb\x8e\x07" "decoder")
QDEF1(MP_QSTR_decoder_built_in_close, (const byte*)"\x93\x98\x16" "decoder_built_in_close")
QDEF1(MP_QSTR_decoder_built_in_info, (const byte*)"\x8b\x92\x15" "decoder_built_in_info")
QDEF1(MP_QSTR_decoder_built_in_open, (const byte*)"\x71\xb8\x15" "decoder_built_in_open")
QDEF1(MP_QSTR_decoder_built_in_read_line, (const byte*)"\x26\x2b\x1a" "decoder_built_in_read_line")
QDEF1(MP_QSTR_decoder_close, (const byte*)"\xd2\x60\x0d" "decoder_close")
QDEF1(MP_QSTR_decoder_create, (const byte*)"\x00\x4b\x0e" "decoder_create")
QDEF1(MP_QSTR_decoder_delete, (const byte*)"\xdd\xfc\x0e" "decoder_delete")
QDEF1(MP_QSTR_decoder_get_info, (const byte*)"\xa3\x3b\x10" "decoder_get_info")
QDEF1(MP_QSTR_decoder_open, (const byte*)"\x10\x0b\x0c" "decoder_open")
QDEF1(MP_QSTR_decoder_read_line, (const byte*)"\x67\x37\x11" "decoder_read_line")
QDEF1(MP_QSTR_decoder_set_close_cb, (const byte*)"\xb1\x4c\x14" "decoder_set_close_cb")
QDEF1(MP_QSTR_decoder_set_info_cb, (const byte*)"\xe9\x6a\x13" "decoder_set_info_cb")
QDEF1(MP_QSTR_decoder_set_open_cb, (const byte*)"\x13\x19\x13" "decoder_set_open_cb")
QDEF1(MP_QSTR_decoder_set_read_line_cb, (const byte*)"\x24\xb2\x18" "decoder_set_read_line_cb")
QDEF1(MP_QSTR_decoder_settings_init, (const byte*)"\x84\xef\x15" "decoder_settings_init")
QDEF1(MP_QSTR_decompress, (const byte*)"\x62\xfb\x0a" "decompress")
QDEF1(MP_QSTR_decompress_settings_init, (const byte*)"\xdd\x3e\x18" "decompress_settings_init")
QDEF1(MP_QSTR_decor, (const byte*)"\x5a\x50\x05" "decor")
QDEF1(MP_QSTR_decrement, (const byte*)"\x42\xb5\x09" "decrement")
QDEF1(MP_QSTR_decrypt, (const byte*)"\xa8\x72\x07" "decrypt")
QDEF1(MP_QSTR_deepsleep, (const byte*)"\x9e\xd2\x09" "deepsleep")
QDEF1(MP_QSTR_def_event_cb, (const byte*)"\x6f\x74\x0c" "def_event_cb")
QDEF1(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF1(MP_QSTR_default_decompress_settings, (const byte*)"\x4c\x67\x1b" "default_decompress_settings")
QDEF1(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF1(MP_QSTR_deinit, (const byte*)"\x9e\x8d\x06" "deinit")
QDEF1(MP_QSTR_del_anim_ready_cb, (const byte*)"\x76\x5d\x11" "del_anim_ready_cb")
QDEF1(MP_QSTR_del_async, (const byte*)"\xd1\xab\x09" "del_async")
QDEF1(MP_QSTR_del_char, (const byte*)"\x6f\x44\x08" "del_char")
QDEF1(MP_QSTR_del_char_forward, (const byte*)"\xab\x70\x10" "del_char_forward")
QDEF1(MP_QSTR_del_delayed, (const byte*)"\x43\xe7\x0b" "del_delayed")
QDEF1(MP_QSTR_del_prev, (const byte*)"\xc6\x3b\x08" "del_prev")
QDEF1(MP_QSTR_del_span, (const byte*)"\x7b\xa0\x08" "del_span")
QDEF1(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
QDEF1(MP_QSTR_delay, (const byte*)"\x50\x4c\x05" "delay")
QDEF1(MP_QSTR_delete, (const byte*)"\x9c\xe7\x06" "delete")
QDEF1(MP_QSTR_deleteConfig, (const byte*)"\x76\xea\x0c" "deleteConfig")
QDEF1(MP_QSTR_deleted, (const byte*)"\x78\xdb\x07" "deleted")
QDEF1(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF1(MP_QSTR_delta_deg, (const byte*)"\xc4\x7c\x09" "delta_deg")
QDEF1(MP_QSTR_deque, (const byte*)"\x05\x99\x05" "deque")
QDEF1(MP_QSTR_destructor_cb, (const byte*)"\xd0\x5d\x0d" "destructor_cb")
QDEF1(MP_QSTR_dht_readinto, (const byte*)"\xec\x62\x0c" "dht_readinto")
QDEF1(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF1(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF1(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF1(MP_QSTR_digest, (const byte*)"\xcd\xc4\x06" "digest")
QDEF1(MP_QSTR_dilateErode, (const byte*)"\x8d\x90\x0b" "dilateErode")
QDEF1(MP_QSTR_dir_close_cb, (const byte*)"\x0d\xd7\x0c" "dir_close_cb")
QDEF1(MP_QSTR_dir_d, (const byte*)"\x61\xcb\x05" "dir_d")
QDEF1(MP_QSTR_dir_open_cb, (const byte*)"\x2f\x21\x0b" "dir_open_cb")
QDEF1(MP_QSTR_dir_read_cb, (const byte*)"\x49\x93\x0b" "dir_read_cb")
QDEF1(MP_QSTR_direct_mode, (const byte*)"\x14\xdd\x0b" "direct_mode")
QDEF1(MP_QSTR_disable, (const byte*)"\x91\x76\x07" "disable")
QDEF1(MP_QSTR_disable_irq, (const byte*)"\x04\x3a\x0b" "disable_irq")
QDEF1(MP_QSTR_disabled, (const byte*)"\xd5\x48\x08" "disabled")
QDEF1(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF1(MP_QSTR_disconnect, (const byte*)"\xa5\x85\x0a" "disconnect")
QDEF1(MP_QSTR_disp, (const byte*)"\x2b\xfe\x04" "disp")
QDEF1(MP_QSTR_disp_draw_buf_t, (const byte*)"\x91\x1d\x0f" "disp_draw_buf_t")
QDEF1(MP_QSTR_disp_drv_t, (const byte*)"\xff\x90\x0a" "disp_drv_t")
QDEF1(MP_QSTR_disp_get_default, (const byte*)"\x96\x95\x10" "disp_get_default")
QDEF1(MP_QSTR_disp_load_scr, (const byte*)"\x0f\x63\x0d" "disp_load_scr")
QDEF1(MP_QSTR_disp_t, (const byte*)"\x20\x3e\x06" "disp_t")
QDEF1(MP_QSTR_display_flush, (const byte*)"\xa4\xb8\x0d" "display_flush")
QDEF1(MP_QSTR_do_handshake, (const byte*)"\x86\x7f\x0c" "do_handshake")
QDEF1(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
QDEF1(MP_QSTR_done, (const byte*)"\x45\x03\x04" "done")
QDEF1(MP_QSTR_download, (const byte*)"\x91\x7d\x08" "download")
QDEF1(MP_QSTR_dpi, (const byte*)"\xd8\x1f\x03" "dpi")
QDEF1(MP_QSTR_dpx, (const byte*)"\xc9\x1f\x03" "dpx")
QDEF1(MP_QSTR_draw, (const byte*)"\xa5\x11\x04" "draw")
QDEF1(MP_QSTR_drawCircle, (const byte*)"\x77\xb7\x0a" "drawCircle")
QDEF1(MP_QSTR_drawImage, (const byte*)"\x82\x90\x09" "drawImage")
QDEF1(MP_QSTR_drawLine, (const byte*)"\x8b\xd4\x08" "drawLine")
QDEF1(MP_QSTR_drawMarker, (const byte*)"\x87\x64\x0a" "drawMarker")
QDEF1(MP_QSTR_drawPixels, (const byte*)"\x5e\xd2\x0a" "drawPixels")
QDEF1(MP_QSTR_drawPoint, (const byte*)"\x29\x0a\x09" "drawPoint")
QDEF1(MP_QSTR_drawRectangle, (const byte*)"\xe4\xfd\x0d" "drawRectangle")
QDEF1(MP_QSTR_drawText, (const byte*)"\x58\x68\x08" "drawText")
QDEF1(MP_QSTR_draw_arc, (const byte*)"\x6a\x4e\x08" "draw_arc")
QDEF1(MP_QSTR_draw_arc_dsc_t, (const byte*)"\x0a\x95\x0e" "draw_arc_dsc_t")
QDEF1(MP_QSTR_draw_arc_get_area, (const byte*)"\x6b\x03\x11" "draw_arc_get_area")
QDEF1(MP_QSTR_draw_area, (const byte*)"\x8d\x1b\x09" "draw_area")
QDEF1(MP_QSTR_draw_buf, (const byte*)"\x8b\x39\x08" "draw_buf")
QDEF1(MP_QSTR_draw_dsc_init, (const byte*)"\x4b\x14\x0d" "draw_dsc_init")
QDEF1(MP_QSTR_draw_img, (const byte*)"\xd9\x2f\x08" "draw_img")
QDEF1(MP_QSTR_draw_img_dsc_t, (const byte*)"\xb9\x50\x0e" "draw_img_dsc_t")
QDEF1(MP_QSTR_draw_label, (const byte*)"\xbc\xfe\x0a" "draw_label")
QDEF1(MP_QSTR_draw_label_dsc_t, (const byte*)"\xdc\xcd\x10" "draw_label_dsc_t")
QDEF1(MP_QSTR_draw_label_hint_t, (const byte*)"\x33\x12\x11" "draw_label_hint_t")
QDEF1(MP_QSTR_draw_letter, (const byte*)"\xa4\x16\x0b" "draw_letter")
QDEF1(MP_QSTR_draw_line, (const byte*)"\x54\x85\x09" "draw_line")
QDEF1(MP_QSTR_draw_line_dsc_t, (const byte*)"\xf4\xe5\x0f" "draw_line_dsc_t")
QDEF1(MP_QSTR_draw_mask_add, (const byte*)"\xd0\x4b\x0d" "draw_mask_add")
QDEF1(MP_QSTR_draw_mask_angle_param_cfg_t, (const byte*)"\x16\x4b\x1b" "draw_mask_angle_param_cfg_t")
QDEF1(MP_QSTR_draw_mask_angle_param_t, (const byte*)"\x8b\x48\x17" "draw_mask_angle_param_t")
QDEF1(MP_QSTR_draw_mask_apply, (const byte*)"\xc5\xda\x0f" "draw_mask_apply")
QDEF1(MP_QSTR_draw_mask_apply_ids, (const byte*)"\x84\x5e\x13" "draw_mask_apply_ids")
QDEF1(MP_QSTR_draw_mask_fade_param_cfg_t, (const byte*)"\xd1\x6e\x1a" "draw_mask_fade_param_cfg_t")
QDEF1(MP_QSTR_draw_mask_fade_param_t, (const byte*)"\x4c\xc4\x16" "draw_mask_fade_param_t")
QDEF1(MP_QSTR_draw_mask_free_param, (const byte*)"\x75\x0c\x14" "draw_mask_free_param")
QDEF1(MP_QSTR_draw_mask_get_cnt, (const byte*)"\x61\x6b\x11" "draw_mask_get_cnt")
QDEF1(MP_QSTR_draw_mask_is_any, (const byte*)"\x62\x44\x10" "draw_mask_is_any")
QDEF1(MP_QSTR_draw_mask_line_param_cfg_t, (const byte*)"\xd9\xb1\x1a" "draw_mask_line_param_cfg_t")
QDEF1(MP_QSTR_draw_mask_line_param_t, (const byte*)"\x44\x49\x16" "draw_mask_line_param_t")
QDEF1(MP_QSTR_draw_mask_map_param_cfg_t, (const byte*)"\x6b\x7a\x19" "draw_mask_map_param_cfg_t")
QDEF1(MP_QSTR_draw_mask_map_param_t, (const byte*)"\x36\x9d\x15" "draw_mask_map_param_t")
QDEF1(MP_QSTR_draw_mask_radius_param_cfg_t, (const byte*)"\x2f\x40\x1c" "draw_mask_radius_param_cfg_t")
QDEF1(MP_QSTR_draw_mask_radius_param_t, (const byte*)"\xf2\x42\x18" "draw_mask_radius_param_t")
QDEF1(MP_QSTR_draw_mask_remove_custom, (const byte*)"\x3b\x1d\x17" "draw_mask_remove_custom")
QDEF1(MP_QSTR_draw_mask_remove_id, (const byte*)"\xe5\x35\x13" "draw_mask_remove_id")
QDEF1(MP_QSTR_draw_part_check_type, (const byte*)"\x73\xc6\x14" "draw_part_check_type")
QDEF1(MP_QSTR_draw_polygon, (const byte*)"\xd6\x0f\x0c" "draw_polygon")
QDEF1(MP_QSTR_draw_rect, (const byte*)"\x3a\xe9\x09" "draw_rect")
QDEF1(MP_QSTR_draw_rect_dsc_t, (const byte*)"\xda\xae\x0f" "draw_rect_dsc_t")
QDEF1(MP_QSTR_draw_text, (const byte*)"\x87\xf1\x09" "draw_text")
QDEF1(MP_QSTR_draw_triangle, (const byte*)"\x34\x10\x0d" "draw_triangle")
QDEF1(MP_QSTR_driver, (const byte*)"\x1b\x71\x06" "driver")
QDEF1(MP_QSTR_dropdown, (const byte*)"\xde\xa4\x08" "dropdown")
QDEF1(MP_QSTR_dropdown_class, (const byte*)"\x6f\x33\x0e" "dropdown_class")
QDEF1(MP_QSTR_dropdownlist_class, (const byte*)"\x0d\xf2\x12" "dropdownlist_class")
QDEF1(MP_QSTR_drv, (const byte*)"\x85\x1f\x03" "drv")
QDEF1(MP_QSTR_drv_update, (const byte*)"\xcb\xda\x0a" "drv_update")
QDEF1(MP_QSTR_drv_update_cb, (const byte*)"\x15\x15\x0d" "drv_update_cb")
QDEF1(MP_QSTR_dsc, (const byte*)"\xb1\x1f\x03" "dsc")
QDEF1(MP_QSTR_dsc_init, (const byte*)"\x94\x75\x08" "dsc_init")
QDEF1(MP_QSTR_dump, (const byte*)"\xe9\x2f\x04" "dump")
QDEF1(MP_QSTR_dumps, (const byte*)"\x7a\x2d\x05" "dumps")
QDEF1(MP_QSTR_dupterm, (const byte*)"\xaa\x5a\x07" "dupterm")
QDEF1(MP_QSTR_dupterm_notify, (const byte*)"\xb6\x77\x0e" "dupterm_notify")
QDEF1(MP_QSTR_duty, (const byte*)"\x19\x2c\x04" "duty")
QDEF1(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF1(MP_QSTR_early_apply, (const byte*)"\x2d\xa5\x0b" "early_apply")
QDEF1(MP_QSTR_editable, (const byte*)"\x33\x03\x08" "editable")
QDEF1(MP_QSTR_editing, (const byte*)"\x19\xd0\x07" "editing")
QDEF1(MP_QSTR_enable, (const byte*)"\x04\xde\x06" "enable")
QDEF1(MP_QSTR_enableAGC, (const byte*)"\x21\x5b\x09" "enableAGC")
QDEF1(MP_QSTR_enableEC, (const byte*)"\xa2\x76\x08" "enableEC")
QDEF1(MP_QSTR_enableNS, (const byte*)"\x59\x78\x08" "enableNS")
QDEF1(MP_QSTR_enableVAD, (const byte*)"\xf7\xa3\x09" "enableVAD")
QDEF1(MP_QSTR_enable_irq, (const byte*)"\x91\x60\x0a" "enable_irq")
QDEF1(MP_QSTR_enable_style_refresh, (const byte*)"\x4e\x0a\x14" "enable_style_refresh")
QDEF1(MP_QSTR_enc_diff, (const byte*)"\x3f\x25\x08" "enc_diff")
QDEF1(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF1(MP_QSTR_encodeConfig, (const byte*)"\x69\x73\x0c" "encodeConfig")
QDEF1(MP_QSTR_encoding, (const byte*)"\x06\x9c\x08" "encoding")
QDEF1(MP_QSTR_encrypt, (const byte*)"\xc2\x78\x07" "encrypt")
QDEF1(MP_QSTR_end_angle, (const byte*)"\x94\x85\x09" "end_angle")
QDEF1(MP_QSTR_end_line, (const byte*)"\xdb\x93\x08" "end_line")
QDEF1(MP_QSTR_end_value, (const byte*)"\x5e\x81\x09" "end_value")
QDEF1(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF1(MP_QSTR_erf, (const byte*)"\x94\x23\x03" "erf")
QDEF1(MP_QSTR_erfc, (const byte*)"\x77\x96\x04" "erfc")
QDEF1(MP_QSTR_errno, (const byte*)"\xc1\x11\x05" "errno")
QDEF1(MP_QSTR_error, (const byte*)"\xbd\x11\x05" "error")
QDEF1(MP_QSTR_error_msg, (const byte*)"\x9b\x7e\x09" "error_msg")
QDEF1(MP_QSTR_error_text, (const byte*)"\x9f\xb2\x0a" "error_text")
QDEF1(MP_QSTR_errorcode, (const byte*)"\x10\xdd\x09" "errorcode")
QDEF1(MP_QSTR_event_base, (const byte*)"\xc3\xf7\x0a" "event_base")
QDEF1(MP_QSTR_event_cb, (const byte*)"\xd7\x1b\x08" "event_cb")
QDEF1(MP_QSTR_event_register_id, (const byte*)"\x8d\x17\x11" "event_register_id")
QDEF1(MP_QSTR_event_send, (const byte*)"\x0a\x87\x0a" "event_send")
QDEF1(MP_QSTR_event_t, (const byte*)"\x02\xf9\x07" "event_t")
QDEF1(MP_QSTR_exec_cb, (const byte*)"\x60\xac\x07" "exec_cb")
QDEF1(MP_QSTR_execfile, (const byte*)"\x58\x28\x08" "execfile")
QDEF1(MP_QSTR_exit, (const byte*)"\x85\xbe\x04" "exit")
QDEF1(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF1(MP_QSTR_expm1, (const byte*)"\x74\x72\x05" "expm1")
QDEF1(MP_QSTR_extra_init, (const byte*)"\x3a\x98\x0a" "extra_init")
QDEF1(MP_QSTR_f, (const byte*)"\xc3\xb5\x01" "f")
QDEF1(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF1(MP_QSTR_fade_in, (const byte*)"\x5b\x8e\x07" "fade_in")
QDEF1(MP_QSTR_fade_out, (const byte*)"\x32\x3e\x08" "fade_out")
QDEF1(MP_QSTR_fatal, (const byte*)"\xdb\xd0\x05" "fatal")
QDEF1(MP_QSTR_feed, (const byte*)"\xa7\x23\x04" "feed")
QDEF1(MP_QSTR_feedback_cb, (const byte*)"\xb2\x68\x0b" "feedback_cb")
QDEF1(MP_QSTR_file, (const byte*)"\xc3\x34\x04" "file")
QDEF1(MP_QSTR_file_d, (const byte*)"\x98\x7c\x06" "file_d")
QDEF1(MP_QSTR_fileno, (const byte*)"\x82\x76\x06" "fileno")
QDEF1(MP_QSTR_fill, (const byte*)"\xca\x34\x04" "fill")
QDEF1(MP_QSTR_fillPoly, (const byte*)"\x60\xf8\x08" "fillPoly")
QDEF1(MP_QSTR_fill_bg, (const byte*)"\x10\xab\x07" "fill_bg")
QDEF1(MP_QSTR_fill_rect, (const byte*)"\x35\xed\x09" "fill_rect")
QDEF1(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF1(MP_QSTR_filter_cb, (const byte*)"\xbb\x8c\x09" "filter_cb")
QDEF1(MP_QSTR_filter_method, (const byte*)"\x05\x6a\x0d" "filter_method")
QDEF1(MP_QSTR_firstbit, (const byte*)"\x20\x39\x08" "firstbit")
QDEF1(MP_QSTR_flag, (const byte*)"\x69\x42\x04" "flag")
QDEF1(MP_QSTR_flags, (const byte*)"\xfa\x8f\x05" "flags")
QDEF1(MP_QSTR_flat, (const byte*)"\x7a\x42\x04" "flat")
QDEF1(MP_QSTR_flex_init, (const byte*)"\x77\x20\x09" "flex_init")
QDEF1(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF1(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF1(MP_QSTR_flush, (const byte*)"\x61\xc1\x05" "flush")
QDEF1(MP_QSTR_flush_cb, (const byte*)"\xff\xe9\x08" "flush_cb")
QDEF1(MP_QSTR_flush_is_last, (const byte*)"\x11\x1b\x0d" "flush_is_last")
QDEF1(MP_QSTR_flush_ready, (const byte*)"\xd5\xf6\x0b" "flush_ready")
QDEF1(MP_QSTR_flushing, (const byte*)"\x21\xfb\x08" "flushing")
QDEF1(MP_QSTR_flushing_last, (const byte*)"\xf4\xfa\x0d" "flushing_last")
QDEF1(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF1(MP_QSTR_focus_cb, (const byte*)"\x57\xef\x08" "focus_cb")
QDEF1(MP_QSTR_focus_freeze, (const byte*)"\x9d\x5b\x0c" "focus_freeze")
QDEF1(MP_QSTR_focus_next, (const byte*)"\xf1\xec\x0a" "focus_next")
QDEF1(MP_QSTR_focus_prev, (const byte*)"\x87\x0d\x0a" "focus_prev")
QDEF1(MP_QSTR_font, (const byte*)"\x96\x2b\x04" "font")
QDEF1(MP_QSTR_font_default, (const byte*)"\x42\x7c\x0c" "font_default")
QDEF1(MP_QSTR_font_dejavu_16_persian_hebrew, (const byte*)"\xc5\x57\x1d" "font_dejavu_16_persian_hebrew")
QDEF1(MP_QSTR_font_glyph_dsc_t, (const byte*)"\x23\xa7\x10" "font_glyph_dsc_t")
QDEF1(MP_QSTR_font_large, (const byte*)"\x14\x31\x0a" "font_large")
QDEF1(MP_QSTR_font_load, (const byte*)"\x6f\x4e\x09" "font_load")
QDEF1(MP_QSTR_font_montserrat_10, (const byte*)"\xcc\xd4\x12" "font_montserrat_10")
QDEF1(MP_QSTR_font_montserrat_12, (const byte*)"\xce\xd4\x12" "font_montserrat_12")
QDEF1(MP_QSTR_font_montserrat_14, (const byte*)"\xc8\xd4\x12" "font_montserrat_14")
QDEF1(MP_QSTR_font_montserrat_16, (const byte*)"\xca\xd4\x12" "font_montserrat_16")
QDEF1(MP_QSTR_font_montserrat_18, (const byte*)"\xc4\xd4\x12" "font_montserrat_18")
QDEF1(MP_QSTR_font_montserrat_20, (const byte*)"\x6f\xd5\x12" "font_montserrat_20")
QDEF1(MP_QSTR_font_montserrat_22, (const byte*)"\x6d\xd5\x12" "font_montserrat_22")
QDEF1(MP_QSTR_font_montserrat_24, (const byte*)"\x6b\xd5\x12" "font_montserrat_24")
QDEF1(MP_QSTR_font_montserrat_26, (const byte*)"\x69\xd5\x12" "font_montserrat_26")
QDEF1(MP_QSTR_font_montserrat_28, (const byte*)"\x67\xd5\x12" "font_montserrat_28")
QDEF1(MP_QSTR_font_montserrat_30, (const byte*)"\x0e\xd5\x12" "font_montserrat_30")
QDEF1(MP_QSTR_font_montserrat_32, (const byte*)"\x0c\xd5\x12" "font_montserrat_32")
QDEF1(MP_QSTR_font_montserrat_34, (const byte*)"\x0a\xd5\x12" "font_montserrat_34")
QDEF1(MP_QSTR_font_montserrat_36, (const byte*)"\x08\xd5\x12" "font_montserrat_36")
QDEF1(MP_QSTR_font_montserrat_38, (const byte*)"\x06\xd5\x12" "font_montserrat_38")
QDEF1(MP_QSTR_font_montserrat_40, (const byte*)"\xa9\xd4\x12" "font_montserrat_40")
QDEF1(MP_QSTR_font_montserrat_42, (const byte*)"\xab\xd4\x12" "font_montserrat_42")
QDEF1(MP_QSTR_font_montserrat_44, (const byte*)"\xad\xd4\x12" "font_montserrat_44")
QDEF1(MP_QSTR_font_montserrat_46, (const byte*)"\xaf\xd4\x12" "font_montserrat_46")
QDEF1(MP_QSTR_font_montserrat_48, (const byte*)"\xa1\xd4\x12" "font_montserrat_48")
QDEF1(MP_QSTR_font_montserrat_8, (const byte*)"\x75\x25\x11" "font_montserrat_8")
QDEF1(MP_QSTR_font_normal, (const byte*)"\x3a\xcd\x0b" "font_normal")
QDEF1(MP_QSTR_font_small, (const byte*)"\x36\xe3\x0a" "font_small")
QDEF1(MP_QSTR_font_t, (const byte*)"\x5d\x5f\x06" "font_t")
QDEF1(MP_QSTR_frag_pct, (const byte*)"\x0f\x1c\x08" "frag_pct")
QDEF1(MP_QSTR_frame_id, (const byte*)"\x4a\xcc\x08" "frame_id")
QDEF1(MP_QSTR_framebuf, (const byte*)"\x69\x82\x08" "framebuf")
QDEF1(MP_QSTR_free, (const byte*)"\xf1\x3a\x04" "free")
QDEF1(MP_QSTR_free_biggest_size, (const byte*)"\x1d\x1d\x11" "free_biggest_size")
QDEF1(MP_QSTR_free_cnt, (const byte*)"\xb7\x5d\x08" "free_cnt")
QDEF1(MP_QSTR_free_size, (const byte*)"\x2b\xd3\x09" "free_size")
QDEF1(MP_QSTR_freq, (const byte*)"\xe5\x3a\x04" "freq")
QDEF1(MP_QSTR_freqduty, (const byte*)"\xf9\x72\x08" "freqduty")
QDEF1(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF1(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF1(MP_QSTR_frozen, (const byte*)"\x0f\xb8\x06" "frozen")
QDEF1(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF1(MP_QSTR_fs_dir_t, (const byte*)"\xbb\x2e\x08" "fs_dir_t")
QDEF1(MP_QSTR_fs_drv_t, (const byte*)"\x84\x75\x08" "fs_drv_t")
QDEF1(MP_QSTR_fs_file_t, (const byte*)"\x82\x47\x09" "fs_file_t")
QDEF1(MP_QSTR_fs_get_drv, (const byte*)"\xa6\xd7\x0a" "fs_get_drv")
QDEF1(MP_QSTR_fs_get_ext, (const byte*)"\x6f\xd5\x0a" "fs_get_ext")
QDEF1(MP_QSTR_fs_get_last, (const byte*)"\x2c\x03\x0b" "fs_get_last")
QDEF1(MP_QSTR_fs_get_letters, (const byte*)"\x8b\x66\x0e" "fs_get_letters")
QDEF1(MP_QSTR_fs_is_ready, (const byte*)"\x81\x96\x0b" "fs_is_ready")
QDEF1(MP_QSTR_fs_posix_init, (const byte*)"\x97\x21\x0d" "fs_posix_init")
QDEF1(MP_QSTR_fs_up, (const byte*)"\xaa\x6c\x05" "fs_up")
QDEF1(MP_QSTR_full, (const byte*)"\xd6\x68\x04" "full")
QDEF1(MP_QSTR_full_refresh, (const byte*)"\x54\xe9\x0c" "full_refresh")
QDEF1(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF1(MP_QSTR_gama_defined, (const byte*)"\xb1\x0f\x0c" "gama_defined")
QDEF1(MP_QSTR_gama_gamma, (const byte*)"\x97\x83\x0a" "gama_gamma")
QDEF1(MP_QSTR_gamma, (const byte*)"\x02\x90\x05" "gamma")
QDEF1(MP_QSTR_gc, (const byte*)"\x61\x6e\x02" "gc")
QDEF1(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF1(MP_QSTR_gesture_dir, (const byte*)"\x02\x6f\x0b" "gesture_dir")
QDEF1(MP_QSTR_gesture_limit, (const byte*)"\x28\x6d\x0d" "gesture_limit")
QDEF1(MP_QSTR_gesture_min_velocity, (const byte*)"\xdf\x5e\x14" "gesture_min_velocity")
QDEF1(MP_QSTR_gesture_sent, (const byte*)"\x91\x61\x0c" "gesture_sent")
QDEF1(MP_QSTR_gesture_sum, (const byte*)"\x56\x3b\x0b" "gesture_sum")
QDEF1(MP_QSTR_getAutosleepMode, (const byte*)"\x30\xa4\x10" "getAutosleepMode")
QDEF1(MP_QSTR_getChannelList, (const byte*)"\xf2\x9f\x0e" "getChannelList")
QDEF1(MP_QSTR_getConfig, (const byte*)"\x99\x48\x09" "getConfig")
QDEF1(MP_QSTR_getConnectState, (const byte*)"\xba\xb3\x0f" "getConnectState")
QDEF1(MP_QSTR_getCurrent, (const byte*)"\xba\xd1\x0a" "getCurrent")
QDEF1(MP_QSTR_getDecodeImageData, (const byte*)"\x28\x81\x12" "getDecodeImageData")
QDEF1(MP_QSTR_getDev, (const byte*)"\x64\x77\x06" "getDev")
QDEF1(MP_QSTR_getDeviceHandle, (const byte*)"\xc1\xcf\x0f" "getDeviceHandle")
QDEF1(MP_QSTR_getDeviceInfo, (const byte*)"\xe5\xdb\x0d" "getDeviceInfo")
QDEF1(MP_QSTR_getDisplayBacklight, (const byte*)"\x5c\x94\x13" "getDisplayBacklight")
QDEF1(MP_QSTR_getDisplayFreq, (const byte*)"\xc9\x70\x0e" "getDisplayFreq")
QDEF1(MP_QSTR_getDisplayHeight, (const byte*)"\xd6\x94\x10" "getDisplayHeight")
QDEF1(MP_QSTR_getDisplayType, (const byte*)"\x71\x93\x0e" "getDisplayType")
QDEF1(MP_QSTR_getDisplayWidth, (const byte*)"\xcf\xa2\x0f" "getDisplayWidth")
QDEF1(MP_QSTR_getDuration, (const byte*)"\xad\xcb\x0b" "getDuration")
QDEF1(MP_QSTR_getEncodePacketData, (const byte*)"\x0d\xf6\x13" "getEncodePacketData")
QDEF1(MP_QSTR_getGatewayHandle, (const byte*)"\xc1\xc0\x10" "getGatewayHandle")
QDEF1(MP_QSTR_getGatewayInfo, (const byte*)"\xe5\x8c\x0e" "getGatewayInfo")
QDEF1(MP_QSTR_getHwParam, (const byte*)"\x83\xfd\x0a" "getHwParam")
QDEF1(MP_QSTR_getInfo, (const byte*)"\xbd\xfd\x07" "getInfo")
QDEF1(MP_QSTR_getLevel, (const byte*)"\xc5\x97\x08" "getLevel")
QDEF1(MP_QSTR_getNtpTime, (const byte*)"\x0c\xac\x0a" "getNtpTime")
QDEF1(MP_QSTR_getOption, (const byte*)"\x10\x0b\x09" "getOption")
QDEF1(MP_QSTR_getPosition, (const byte*)"\x4a\xf5\x0b" "getPosition")
QDEF1(MP_QSTR_getPredictResponses, (const byte*)"\x7e\x19\x13" "getPredictResponses")
QDEF1(MP_QSTR_getProp, (const byte*)"\xae\xa7\x07" "getProp")
QDEF1(MP_QSTR_getState, (const byte*)"\xc4\x6a\x08" "getState")
QDEF1(MP_QSTR_getStatus, (const byte*)"\x27\xc5\x09" "getStatus")
QDEF1(MP_QSTR_getStream, (const byte*)"\x8f\xf9\x09" "getStream")
QDEF1(MP_QSTR_getTemperature, (const byte*)"\xff\x4e\x0e" "getTemperature")
QDEF1(MP_QSTR_getTopo, (const byte*)"\xd7\xaa\x07" "getTopo")
QDEF1(MP_QSTR_getType, (const byte*)"\xcb\x14\x07" "getType")
QDEF1(MP_QSTR_getVoltage, (const byte*)"\x91\xb6\x0a" "getVoltage")
QDEF1(MP_QSTR_getVolume, (const byte*)"\x3b\xa5\x09" "getVolume")
QDEF1(MP_QSTR_get_accepted_chars, (const byte*)"\x79\x3b\x12" "get_accepted_chars")
QDEF1(MP_QSTR_get_active_btn, (const byte*)"\x67\x2e\x0e" "get_active_btn")
QDEF1(MP_QSTR_get_active_btn_text, (const byte*)"\x85\x36\x13" "get_active_btn_text")
QDEF1(MP_QSTR_get_align, (const byte*)"\xc1\x23\x09" "get_align")
QDEF1(MP_QSTR_get_angle, (const byte*)"\xed\x32\x09" "get_angle")
QDEF1(MP_QSTR_get_angle_end, (const byte*)"\x3d\x61\x0d" "get_angle_end")
QDEF1(MP_QSTR_get_angle_start, (const byte*)"\xb2\x95\x0f" "get_angle_start")
QDEF1(MP_QSTR_get_antialias, (const byte*)"\xe8\x8b\x0d" "get_antialias")
QDEF1(MP_QSTR_get_antialiasing, (const byte*)"\xc8\x32\x10" "get_antialiasing")
QDEF1(MP_QSTR_get_bg_angle_end, (const byte*)"\x07\xb1\x10" "get_bg_angle_end")
QDEF1(MP_QSTR_get_bg_angle_start, (const byte*)"\x88\x96\x12" "get_bg_angle_start")
QDEF1(MP_QSTR_get_bitmap_fmt_txt, (const byte*)"\x08\xb1\x12" "get_bitmap_fmt_txt")
QDEF1(MP_QSTR_get_bpp, (const byte*)"\x2e\x54\x07" "get_bpp")
QDEF1(MP_QSTR_get_brightness, (const byte*)"\x05\xfe\x0e" "get_brightness")
QDEF1(MP_QSTR_get_btn_text, (const byte*)"\xf6\xf7\x0c" "get_btn_text")
QDEF1(MP_QSTR_get_btnmatrix, (const byte*)"\x6f\xa0\x0d" "get_btnmatrix")
QDEF1(MP_QSTR_get_btns, (const byte*)"\x47\xca\x08" "get_btns")
QDEF1(MP_QSTR_get_cell_value, (const byte*)"\xfe\xed\x0e" "get_cell_value")
QDEF1(MP_QSTR_get_channels, (const byte*)"\x5c\x43\x0c" "get_channels")
QDEF1(MP_QSTR_get_child, (const byte*)"\xa6\xa3\x09" "get_child")
QDEF1(MP_QSTR_get_child_cnt, (const byte*)"\xe0\xc8\x0d" "get_child_cnt")
QDEF1(MP_QSTR_get_child_id, (const byte*)"\x54\x05\x0c" "get_child_id")
QDEF1(MP_QSTR_get_class, (const byte*)"\xc2\x53\x09" "get_class")
QDEF1(MP_QSTR_get_click_area, (const byte*)"\xca\x02\x0e" "get_click_area")
QDEF1(MP_QSTR_get_clip_area, (const byte*)"\x12\x67\x0d" "get_clip_area")
QDEF1(MP_QSTR_get_close_btn, (const byte*)"\x9d\xa5\x0d" "get_close_btn")
QDEF1(MP_QSTR_get_code, (const byte*)"\xe1\x0d\x08" "get_code")
QDEF1(MP_QSTR_get_col_cnt, (const byte*)"\x8a\x7a\x0b" "get_col_cnt")
QDEF1(MP_QSTR_get_col_width, (const byte*)"\xb5\xb3\x0d" "get_col_width")
QDEF1(MP_QSTR_get_color_mode, (const byte*)"\xed\x45\x0e" "get_color_mode")
QDEF1(MP_QSTR_get_color_mode_fixed, (const byte*)"\xe4\xf8\x14" "get_color_mode_fixed")
QDEF1(MP_QSTR_get_content, (const byte*)"\x45\xbb\x0b" "get_content")
QDEF1(MP_QSTR_get_content_coords, (const byte*)"\xfc\x8b\x12" "get_content_coords")
QDEF1(MP_QSTR_get_content_height, (const byte*)"\xc5\x50\x12" "get_content_height")
QDEF1(MP_QSTR_get_content_width, (const byte*)"\x3c\x23\x11" "get_content_width")
QDEF1(MP_QSTR_get_coords, (const byte*)"\x0a\x2d\x0a" "get_coords")
QDEF1(MP_QSTR_get_cover_area, (const byte*)"\x49\x69\x0e" "get_cover_area")
QDEF1(MP_QSTR_get_current_target, (const byte*)"\xcb\x88\x12" "get_current_target")
QDEF1(MP_QSTR_get_cursor_click_pos, (const byte*)"\x44\x87\x14" "get_cursor_click_pos")
QDEF1(MP_QSTR_get_cursor_point, (const byte*)"\x75\xbf\x10" "get_cursor_point")
QDEF1(MP_QSTR_get_cursor_pos, (const byte*)"\xb5\xcc\x0e" "get_cursor_pos")
QDEF1(MP_QSTR_get_delay, (const byte*)"\xb9\xb1\x09" "get_delay")
QDEF1(MP_QSTR_get_dir, (const byte*)"\x13\x48\x07" "get_dir")
QDEF1(MP_QSTR_get_disp, (const byte*)"\x22\x4a\x08" "get_disp")
QDEF1(MP_QSTR_get_dpi, (const byte*)"\x31\x4b\x07" "get_dpi")
QDEF1(MP_QSTR_get_draw_buf, (const byte*)"\xc2\xd9\x0c" "get_draw_buf")
QDEF1(MP_QSTR_get_draw_part_dsc, (const byte*)"\x8f\x73\x11" "get_draw_part_dsc")
QDEF1(MP_QSTR_get_editing, (const byte*)"\x70\x32\x0b" "get_editing")
QDEF1(MP_QSTR_get_expand_height, (const byte*)"\xca\x70\x11" "get_expand_height")
QDEF1(MP_QSTR_get_expand_width, (const byte*)"\x53\xa0\x10" "get_expand_width")
QDEF1(MP_QSTR_get_focus_cb, (const byte*)"\xde\xb3\x0c" "get_focus_cb")
QDEF1(MP_QSTR_get_focused, (const byte*)"\x81\x24\x0b" "get_focused")
QDEF1(MP_QSTR_get_gesture_dir, (const byte*)"\xab\x14\x0f" "get_gesture_dir")
QDEF1(MP_QSTR_get_glyph_bitmap, (const byte*)"\x9a\x83\x10" "get_glyph_bitmap")
QDEF1(MP_QSTR_get_glyph_dsc, (const byte*)"\x0d\x6f\x0d" "get_glyph_dsc")
QDEF1(MP_QSTR_get_glyph_dsc_fmt_txt, (const byte*)"\x2a\x00\x15" "get_glyph_dsc_fmt_txt")
QDEF1(MP_QSTR_get_glyph_width, (const byte*)"\x9f\x2a\x0f" "get_glyph_width")
QDEF1(MP_QSTR_get_group, (const byte*)"\xd3\x57\x09" "get_group")
QDEF1(MP_QSTR_get_header, (const byte*)"\x53\xa4\x0a" "get_header")
QDEF1(MP_QSTR_get_height, (const byte*)"\xf3\x1b\x0a" "get_height")
QDEF1(MP_QSTR_get_highlighted_dates, (const byte*)"\x05\xfe\x15" "get_highlighted_dates")
QDEF1(MP_QSTR_get_highlighted_dates_num, (const byte*)"\xac\x7c\x19" "get_highlighted_dates_num")
QDEF1(MP_QSTR_get_hit_test_info, (const byte*)"\x61\xb2\x11" "get_hit_test_info")
QDEF1(MP_QSTR_get_hor_res, (const byte*)"\xe2\x69\x0b" "get_hor_res")
QDEF1(MP_QSTR_get_hsv, (const byte*)"\xc1\x3a\x07" "get_hsv")
QDEF1(MP_QSTR_get_ident, (const byte*)"\xfe\xb1\x09" "get_ident")
QDEF1(MP_QSTR_get_img, (const byte*)"\xcf\x34\x07" "get_img")
QDEF1(MP_QSTR_get_inactive_time, (const byte*)"\x4d\x28\x11" "get_inactive_time")
QDEF1(MP_QSTR_get_indent, (const byte*)"\xf0\x48\x0a" "get_indent")
QDEF1(MP_QSTR_get_indev, (const byte*)"\x1c\x48\x09" "get_indev")
QDEF1(MP_QSTR_get_index, (const byte*)"\x12\x48\x09" "get_index")
QDEF1(MP_QSTR_get_key, (const byte*)"\xdb\x4c\x07" "get_key")
QDEF1(MP_QSTR_get_label, (const byte*)"\xaa\xe7\x09" "get_label")
QDEF1(MP_QSTR_get_layer_sys, (const byte*)"\x89\xcd\x0d" "get_layer_sys")
QDEF1(MP_QSTR_get_layer_top, (const byte*)"\x9b\xc7\x0d" "get_layer_top")
QDEF1(MP_QSTR_get_left_value, (const byte*)"\xc3\x4e\x0e" "get_left_value")
QDEF1(MP_QSTR_get_letter_on, (const byte*)"\x4c\xdb\x0d" "get_letter_on")
QDEF1(MP_QSTR_get_letter_pos, (const byte*)"\x41\xbd\x0e" "get_letter_pos")
QDEF1(MP_QSTR_get_line_height, (const byte*)"\x62\xe3\x0f" "get_line_height")
QDEF1(MP_QSTR_get_list, (const byte*)"\x2e\x2b\x08" "get_list")
QDEF1(MP_QSTR_get_local_style_prop, (const byte*)"\xab\x47\x14" "get_local_style_prop")
QDEF1(MP_QSTR_get_long_mode, (const byte*)"\xba\x06\x0d" "get_long_mode")
QDEF1(MP_QSTR_get_map, (const byte*)"\x50\x23\x07" "get_map")
QDEF1(MP_QSTR_get_map_array, (const byte*)"\xb6\x3f\x0d" "get_map_array")
QDEF1(MP_QSTR_get_max_length, (const byte*)"\xdb\xa8\x0e" "get_max_length")
QDEF1(MP_QSTR_get_max_line_h, (const byte*)"\x9e\x74\x0e" "get_max_line_h")
QDEF1(MP_QSTR_get_max_value, (const byte*)"\x0c\xdb\x0d" "get_max_value")
QDEF1(MP_QSTR_get_min_value, (const byte*)"\x92\xd1\x0d" "get_min_value")
QDEF1(MP_QSTR_get_mode, (const byte*)"\xaf\xb5\x08" "get_mode")
QDEF1(MP_QSTR_get_next, (const byte*)"\x0b\x13\x08" "get_next")
QDEF1(MP_QSTR_get_obj_count, (const byte*)"\x97\xab\x0d" "get_obj_count")
QDEF1(MP_QSTR_get_offset_x, (const byte*)"\xc6\x59\x0c" "get_offset_x")
QDEF1(MP_QSTR_get_offset_y, (const byte*)"\xc7\x59\x0c" "get_offset_y")
QDEF1(MP_QSTR_get_old_size, (const byte*)"\x31\x8b\x0c" "get_old_size")
QDEF1(MP_QSTR_get_one_checked, (const byte*)"\x70\x6f\x0f" "get_one_checked")
QDEF1(MP_QSTR_get_one_line, (const byte*)"\xf9\x9a\x0c" "get_one_line")
QDEF1(MP_QSTR_get_option_cnt, (const byte*)"\x89\x96\x0e" "get_option_cnt")
QDEF1(MP_QSTR_get_options, (const byte*)"\x9c\xba\x0b" "get_options")
QDEF1(MP_QSTR_get_overflow, (const byte*)"\x70\xaf\x0c" "get_overflow")
QDEF1(MP_QSTR_get_param, (const byte*)"\x23\x51\x09" "get_param")
QDEF1(MP_QSTR_get_parent, (const byte*)"\x50\x65\x0a" "get_parent")
QDEF1(MP_QSTR_get_password_mode, (const byte*)"\x4f\xc7\x11" "get_password_mode")
QDEF1(MP_QSTR_get_password_show_time, (const byte*)"\xa5\x2e\x16" "get_password_show_time")
QDEF1(MP_QSTR_get_physical_hor_res, (const byte*)"\xa8\x5f\x14" "get_physical_hor_res")
QDEF1(MP_QSTR_get_physical_ver_res, (const byte*)"\x7c\x36\x14" "get_physical_ver_res")
QDEF1(MP_QSTR_get_pivot, (const byte*)"\xf8\xde\x09" "get_pivot")
QDEF1(MP_QSTR_get_placeholder_text, (const byte*)"\x8d\x4a\x14" "get_placeholder_text")
QDEF1(MP_QSTR_get_playtime, (const byte*)"\xdd\x20\x0c" "get_playtime")
QDEF1(MP_QSTR_get_point, (const byte*)"\x00\x67\x09" "get_point")
QDEF1(MP_QSTR_get_point_count, (const byte*)"\x3c\x6b\x0f" "get_point_count")
QDEF1(MP_QSTR_get_point_pos_by_id, (const byte*)"\x05\x4a\x13" "get_point_pos_by_id")
QDEF1(MP_QSTR_get_popovers, (const byte*)"\x5e\xdb\x0c" "get_popovers")
QDEF1(MP_QSTR_get_pressed_date, (const byte*)"\x61\xce\x10" "get_pressed_date")
QDEF1(MP_QSTR_get_pressed_point, (const byte*)"\x99\xed\x11" "get_pressed_point")
QDEF1(MP_QSTR_get_prop, (const byte*)"\x71\x39\x08" "get_prop")
QDEF1(MP_QSTR_get_prop_inlined, (const byte*)"\x23\x73\x10" "get_prop_inlined")
QDEF1(MP_QSTR_get_px, (const byte*)"\xc4\x42\x06" "get_px")
QDEF1(MP_QSTR_get_raw_size, (const byte*)"\x72\xe7\x0c" "get_raw_size")
QDEF1(MP_QSTR_get_recolor, (const byte*)"\x86\x4d\x0b" "get_recolor")
QDEF1(MP_QSTR_get_response, (const byte*)"\xef\x44\x0c" "get_response")
QDEF1(MP_QSTR_get_response_code, (const byte*)"\xbd\x95\x11" "get_response_code")
QDEF1(MP_QSTR_get_response_header, (const byte*)"\x0f\xc5\x13" "get_response_header")
QDEF1(MP_QSTR_get_rgb, (const byte*)"\xdb\x95\x07" "get_rgb")
QDEF1(MP_QSTR_get_rollover, (const byte*)"\xdf\xac\x0c" "get_rollover")
QDEF1(MP_QSTR_get_rotation, (const byte*)"\xf8\xd9\x0c" "get_rotation")
QDEF1(MP_QSTR_get_row_cnt, (const byte*)"\x40\x72\x0b" "get_row_cnt")
QDEF1(MP_QSTR_get_scr_act, (const byte*)"\xe7\x56\x0b" "get_scr_act")
QDEF1(MP_QSTR_get_scr_prev, (const byte*)"\xa0\x12\x0c" "get_scr_prev")
QDEF1(MP_QSTR_get_screen, (const byte*)"\xc0\xc7\x0a" "get_screen")
QDEF1(MP_QSTR_get_scroll_anim, (const byte*)"\x95\x4a\x0f" "get_scroll_anim")
QDEF1(MP_QSTR_get_scroll_bottom, (const byte*)"\x31\x06\x11" "get_scroll_bottom")
QDEF1(MP_QSTR_get_scroll_dir, (const byte*)"\x01\x9e\x0e" "get_scroll_dir")
QDEF1(MP_QSTR_get_scroll_end, (const byte*)"\xf1\xbb\x0e" "get_scroll_end")
QDEF1(MP_QSTR_get_scroll_left, (const byte*)"\xc5\x2f\x0f" "get_scroll_left")
QDEF1(MP_QSTR_get_scroll_obj, (const byte*)"\xf9\x81\x0e" "get_scroll_obj")
QDEF1(MP_QSTR_get_scroll_right, (const byte*)"\x1e\x38\x10" "get_scroll_right")
QDEF1(MP_QSTR_get_scroll_snap_x, (const byte*)"\x95\x9f\x11" "get_scroll_snap_x")
QDEF1(MP_QSTR_get_scroll_snap_y, (const byte*)"\x94\x9f\x11" "get_scroll_snap_y")
QDEF1(MP_QSTR_get_scroll_top, (const byte*)"\xd5\x5a\x0e" "get_scroll_top")
QDEF1(MP_QSTR_get_scroll_x, (const byte*)"\x26\x75\x0c" "get_scroll_x")
QDEF1(MP_QSTR_get_scroll_y, (const byte*)"\x27\x75\x0c" "get_scroll_y")
QDEF1(MP_QSTR_get_scrollbar_area, (const byte*)"\x18\xd2\x12" "get_scrollbar_area")
QDEF1(MP_QSTR_get_scrollbar_mode, (const byte*)"\xac\x28\x12" "get_scrollbar_mode")
QDEF1(MP_QSTR_get_selected, (const byte*)"\xa5\xee\x0c" "get_selected")
QDEF1(MP_QSTR_get_selected_btn, (const byte*)"\xa2\x96\x10" "get_selected_btn")
QDEF1(MP_QSTR_get_selected_cell, (const byte*)"\xbc\x2e\x11" "get_selected_cell")
QDEF1(MP_QSTR_get_selected_highlight, (const byte*)"\xea\xfd\x16" "get_selected_highlight")
QDEF1(MP_QSTR_get_selected_str, (const byte*)"\xaf\x52\x10" "get_selected_str")
QDEF1(MP_QSTR_get_self_height, (const byte*)"\x90\xc1\x0f" "get_self_height")
QDEF1(MP_QSTR_get_self_size_info, (const byte*)"\x3b\x1e\x12" "get_self_size_info")
QDEF1(MP_QSTR_get_self_width, (const byte*)"\x49\x8d\x0e" "get_self_width")
QDEF1(MP_QSTR_get_series_next, (const byte*)"\xaf\x30\x0f" "get_series_next")
QDEF1(MP_QSTR_get_showed_date, (const byte*)"\xe5\x96\x0f" "get_showed_date")
QDEF1(MP_QSTR_get_size, (const byte*)"\xa9\xfb\x08" "get_size")
QDEF1(MP_QSTR_get_size_mode, (const byte*)"\x75\x6b\x0d" "get_size_mode")
QDEF1(MP_QSTR_get_src, (const byte*)"\x6e\xb1\x07" "get_src")
QDEF1(MP_QSTR_get_src_left, (const byte*)"\x2a\xe0\x0c" "get_src_left")
QDEF1(MP_QSTR_get_src_middle, (const byte*)"\x1c\xe7\x0e" "get_src_middle")
QDEF1(MP_QSTR_get_src_right, (const byte*)"\x11\xc9\x0d" "get_src_right")
QDEF1(MP_QSTR_get_start_value, (const byte*)"\x78\xe7\x0f" "get_start_value")
QDEF1(MP_QSTR_get_state, (const byte*)"\x3b\x79\x09" "get_state")
QDEF1(MP_QSTR_get_step, (const byte*)"\x1e\xc6\x08" "get_step")
QDEF1(MP_QSTR_get_style_align, (const byte*)"\xc9\xa0\x0f" "get_style_align")
QDEF1(MP_QSTR_get_style_anim_speed, (const byte*)"\xf7\x53\x14" "get_style_anim_speed")
QDEF1(MP_QSTR_get_style_anim_time, (const byte*)"\x05\x63\x13" "get_style_anim_time")
QDEF1(MP_QSTR_get_style_arc_color, (const byte*)"\xf6\x68\x13" "get_style_arc_color")
QDEF1(MP_QSTR_get_style_arc_color_filtered, (const byte*)"\xa8\x8d\x1c" "get_style_arc_color_filtered")
QDEF1(MP_QSTR_get_style_arc_img_src, (const byte*)"\x55\xab\x15" "get_style_arc_img_src")
QDEF1(MP_QSTR_get_style_arc_opa, (const byte*)"\xf5\x78\x11" "get_style_arc_opa")
QDEF1(MP_QSTR_get_style_arc_rounded, (const byte*)"\xa8\xb4\x15" "get_style_arc_rounded")
QDEF1(MP_QSTR_get_style_arc_width, (const byte*)"\x4d\x06\x13" "get_style_arc_width")
QDEF1(MP_QSTR_get_style_base_dir, (const byte*)"\x51\xa0\x12" "get_style_base_dir")
QDEF1(MP_QSTR_get_style_bg_color, (const byte*)"\xc3\x25\x12" "get_style_bg_color")
QDEF1(MP_QSTR_get_style_bg_color_filtered, (const byte*)"\x3d\x0d\x1b" "get_style_bg_color_filtered")
QDEF1(MP_QSTR_get_style_bg_grad_color, (const byte*)"\x2c\xfe\x17" "get_style_bg_grad_color")
QDEF1(MP_QSTR_get_style_bg_grad_color_filtered, (const byte*)"\x32\xab\x20" "get_style_bg_grad_color_filtered")
QDEF1(MP_QSTR_get_style_bg_grad_dir, (const byte*)"\x4e\xa5\x15" "get_style_bg_grad_dir")
QDEF1(MP_QSTR_get_style_bg_grad_stop, (const byte*)"\xa9\x04\x16" "get_style_bg_grad_stop")
QDEF1(MP_QSTR_get_style_bg_img_opa, (const byte*)"\xfc\xbb\x14" "get_style_bg_img_opa")
QDEF1(MP_QSTR_get_style_bg_img_recolor, (const byte*)"\x48\xc7\x18" "get_style_bg_img_recolor")
QDEF1(MP_QSTR_get_style_bg_img_recolor_filtered, (const byte*)"\x56\xb8\x21" "get_style_bg_img_recolor_filtered")
QDEF1(MP_QSTR_get_style_bg_img_recolor_opa, (const byte*)"\x89\xc2\x1c" "get_style_bg_img_recolor_opa")
QDEF1(MP_QSTR_get_style_bg_img_src, (const byte*)"\xa0\xc8\x14" "get_style_bg_img_src")
QDEF1(MP_QSTR_get_style_bg_img_tiled, (const byte*)"\x72\x5e\x16" "get_style_bg_img_tiled")
QDEF1(MP_QSTR_get_style_bg_main_stop, (const byte*)"\x12\x9b\x16" "get_style_bg_main_stop")
QDEF1(MP_QSTR_get_style_bg_opa, (const byte*)"\xc0\xf8\x10" "get_style_bg_opa")
QDEF1(MP_QSTR_get_style_blend_mode, (const byte*)"\x39\xcc\x14" "get_style_blend_mode")
QDEF1(MP_QSTR_get_style_border_color, (const byte*)"\xea\xad\x16" "get_style_border_color")
QDEF1(MP_QSTR_get_style_border_color_filtered, (const byte*)"\x34\x33\x1f" "get_style_border_color_filtered")
QDEF1(MP_QSTR_get_style_border_opa, (const byte*)"\xe9\x66\x14" "get_style_border_opa")
QDEF1(MP_QSTR_get_style_border_post, (const byte*)"\x4f\x44\x15" "get_style_border_post")
QDEF1(MP_QSTR_get_style_border_side, (const byte*)"\x8c\xad\x15" "get_style_border_side")
QDEF1(MP_QSTR_get_style_border_width, (const byte*)"\x51\x20\x16" "get_style_border_width")
QDEF1(MP_QSTR_get_style_clip_corner, (const byte*)"\xca\x37\x15" "get_style_clip_corner")
QDEF1(MP_QSTR_get_style_color_filter_dsc, (const byte*)"\x4d\x56\x1a" "get_style_color_filter_dsc")
QDEF1(MP_QSTR_get_style_color_filter_opa, (const byte*)"\x67\x30\x1a" "get_style_color_filter_opa")
QDEF1(MP_QSTR_get_style_flex_cross_place, (const byte*)"\xb6\xa2\x1a" "get_style_flex_cross_place")
QDEF1(MP_QSTR_get_style_flex_flow, (const byte*)"\x7e\xb9\x13" "get_style_flex_flow")
QDEF1(MP_QSTR_get_style_flex_grow, (const byte*)"\x01\x70\x13" "get_style_flex_grow")
QDEF1(MP_QSTR_get_style_flex_main_place, (const byte*)"\xe3\x8d\x19" "get_style_flex_main_place")
QDEF1(MP_QSTR_get_style_flex_track_place, (const byte*)"\xa7\x74\x1a" "get_style_flex_track_place")
QDEF1(MP_QSTR_get_style_grid_cell_column_pos, (const byte*)"\x7f\x51\x1e" "get_style_grid_cell_column_pos")
QDEF1(MP_QSTR_get_style_grid_cell_column_span, (const byte*)"\xdf\x0f\x1f" "get_style_grid_cell_column_span")
QDEF1(MP_QSTR_get_style_grid_cell_row_pos, (const byte*)"\x63\x10\x1b" "get_style_grid_cell_row_pos")
QDEF1(MP_QSTR_get_style_grid_cell_row_span, (const byte*)"\x43\x8d\x1c" "get_style_grid_cell_row_span")
QDEF1(MP_QSTR_get_style_grid_cell_x_align, (const byte*)"\x90\x5c\x1b" "get_style_grid_cell_x_align")
QDEF1(MP_QSTR_get_style_grid_cell_y_align, (const byte*)"\xd1\xb1\x1b" "get_style_grid_cell_y_align")
QDEF1(MP_QSTR_get_style_grid_column_align, (const byte*)"\x67\x56\x1b" "get_style_grid_column_align")
QDEF1(MP_QSTR_get_style_grid_row_align, (const byte*)"\x5b\x9c\x18" "get_style_grid_row_align")
QDEF1(MP_QSTR_get_style_height, (const byte*)"\xfb\x3b\x10" "get_style_height")
QDEF1(MP_QSTR_get_style_img_opa, (const byte*)"\x86\x9e\x11" "get_style_img_opa")
QDEF1(MP_QSTR_get_style_img_recolor, (const byte*)"\xf2\x01\x15" "get_style_img_recolor")
QDEF1(MP_QSTR_get_style_img_recolor_filtered, (const byte*)"\x2c\xc6\x1e" "get_style_img_recolor_filtered")
QDEF1(MP_QSTR_get_style_img_recolor_opa, (const byte*)"\x73\x75\x19" "get_style_img_recolor_opa")
QDEF1(MP_QSTR_get_style_layout, (const byte*)"\x1e\xdf\x10" "get_style_layout")
QDEF1(MP_QSTR_get_style_line_color, (const byte*)"\x48\x85\x14" "get_style_line_color")
QDEF1(MP_QSTR_get_style_line_color_filtered, (const byte*)"\x56\x36\x1d" "get_style_line_color_filtered")
QDEF1(MP_QSTR_get_style_line_dash_gap, (const byte*)"\xc2\xa9\x17" "get_style_line_dash_gap")
QDEF1(MP_QSTR_get_style_line_dash_width, (const byte*)"\x52\x60\x19" "get_style_line_dash_width")
QDEF1(MP_QSTR_get_style_line_opa, (const byte*)"\x4b\xf5\x12" "get_style_line_opa")
QDEF1(MP_QSTR_get_style_line_rounded, (const byte*)"\x16\x11\x16" "get_style_line_rounded")
QDEF1(MP_QSTR_get_style_line_width, (const byte*)"\xb3\xe7\x14" "get_style_line_width")
QDEF1(MP_QSTR_get_style_max_height, (const byte*)"\xf0\xa3\x14" "get_style_max_height")
QDEF1(MP_QSTR_get_style_max_width, (const byte*)"\xe9\x1c\x13" "get_style_max_width")
QDEF1(MP_QSTR_get_style_min_height, (const byte*)"\x2e\x05\x14" "get_style_min_height")
QDEF1(MP_QSTR_get_style_min_width, (const byte*)"\x77\x53\x13" "get_style_min_width")
QDEF1(MP_QSTR_get_style_opa, (const byte*)"\x3a\x5f\x0d" "get_style_opa")
QDEF1(MP_QSTR_get_style_outline_color, (const byte*)"\x46\x6c\x17" "get_style_outline_color")
QDEF1(MP_QSTR_get_style_outline_color_filtered, (const byte*)"\x18\x63\x20" "get_style_outline_color_filtered")
QDEF1(MP_QSTR_get_style_outline_opa, (const byte*)"\x45\xd3\x15" "get_style_outline_opa")
QDEF1(MP_QSTR_get_style_outline_pad, (const byte*)"\x6e\xb7\x15" "get_style_outline_pad")
QDEF1(MP_QSTR_get_style_outline_width, (const byte*)"\xbd\xbc\x17" "get_style_outline_width")
QDEF1(MP_QSTR_get_style_pad_bottom, (const byte*)"\x01\x5a\x14" "get_style_pad_bottom")
QDEF1(MP_QSTR_get_style_pad_column, (const byte*)"\xb8\xff\x14" "get_style_pad_column")
QDEF1(MP_QSTR_get_style_pad_left, (const byte*)"\xb5\x84\x12" "get_style_pad_left")
QDEF1(MP_QSTR_get_style_pad_right, (const byte*)"\x2e\xd6\x13" "get_style_pad_right")
QDEF1(MP_QSTR_get_style_pad_row, (const byte*)"\x64\xcd\x11" "get_style_pad_row")
QDEF1(MP_QSTR_get_style_pad_top, (const byte*)"\xe5\xd5\x11" "get_style_pad_top")
QDEF1(MP_QSTR_get_style_prop, (const byte*)"\x79\xb7\x0e" "get_style_prop")
QDEF1(MP_QSTR_get_style_radius, (const byte*)"\x7c\x7e\x10" "get_style_radius")
QDEF1(MP_QSTR_get_style_shadow_color, (const byte*)"\xa0\xe4\x16" "get_style_shadow_color")
QDEF1(MP_QSTR_get_style_shadow_color_filtered, (const byte*)"\x3e\xa6\x1f" "get_style_shadow_color_filtered")
QDEF1(MP_QSTR_get_style_shadow_ofs_x, (const byte*)"\x60\xa6\x16" "get_style_shadow_ofs_x")
QDEF1(MP_QSTR_get_style_shadow_ofs_y, (const byte*)"\x61\xa6\x16" "get_style_shadow_ofs_y")
QDEF1(MP_QSTR_get_style_shadow_opa, (const byte*)"\xa3\x73\x14" "get_style_shadow_opa")
QDEF1(MP_QSTR_get_style_shadow_spread, (const byte*)"\x6c\x66\x17" "get_style_shadow_spread")
QDEF1(MP_QSTR_get_style_shadow_width, (const byte*)"\x1b\x05\x16" "get_style_shadow_width")
QDEF1(MP_QSTR_get_style_text_align, (const byte*)"\xab\x61\x14" "get_style_text_align")
QDEF1(MP_QSTR_get_style_text_color, (const byte*)"\x9b\x3b\x14" "get_style_text_color")
QDEF1(MP_QSTR_get_style_text_color_filtered, (const byte*)"\x65\xd0\x1d" "get_style_text_color_filtered")
QDEF1(MP_QSTR_get_style_text_decor, (const byte*)"\x19\xce\x14" "get_style_text_decor")
QDEF1(MP_QSTR_get_style_text_font, (const byte*)"\xb5\x4d\x13" "get_style_text_font")
QDEF1(MP_QSTR_get_style_text_letter_space, (const byte*)"\xe3\x69\x1b" "get_style_text_letter_space")
QDEF1(MP_QSTR_get_style_text_line_space, (const byte*)"\x53\xb0\x19" "get_style_text_line_space")
QDEF1(MP_QSTR_get_style_text_opa, (const byte*)"\x98\x37\x12" "get_style_text_opa")
QDEF1(MP_QSTR_get_style_transform_angle, (const byte*)"\xf6\x5c\x19" "get_style_transform_angle")
QDEF1(MP_QSTR_get_style_transform_height, (const byte*)"\xc8\x90\x1a" "get_style_transform_height")
QDEF1(MP_QSTR_get_style_transform_width, (const byte*)"\x11\x16\x19" "get_style_transform_width")
QDEF1(MP_QSTR_get_style_transform_zoom, (const byte*)"\xc0\x67\x18" "get_style_transform_zoom")
QDEF1(MP_QSTR_get_style_transition, (const byte*)"\x2b\x9a\x14" "get_style_transition")
QDEF1(MP_QSTR_get_style_translate_x, (const byte*)"\x25\x13\x15" "get_style_translate_x")
QDEF1(MP_QSTR_get_style_translate_y, (const byte*)"\x24\x13\x15" "get_style_translate_y")
QDEF1(MP_QSTR_get_style_width, (const byte*)"\xc2\x19\x0f" "get_style_width")
QDEF1(MP_QSTR_get_style_x, (const byte*)"\x3c\x1a\x0b" "get_style_x")
QDEF1(MP_QSTR_get_style_y, (const byte*)"\x3d\x1a\x0b" "get_style_y")
QDEF1(MP_QSTR_get_symbol, (const byte*)"\x2a\x43\x0a" "get_symbol")
QDEF1(MP_QSTR_get_tab_act, (const byte*)"\xb2\x6d\x0b" "get_tab_act")
QDEF1(MP_QSTR_get_tab_btns, (const byte*)"\xaf\x17\x0c" "get_tab_btns")
QDEF1(MP_QSTR_get_target, (const byte*)"\x7d\xed\x0a" "get_target")
QDEF1(MP_QSTR_get_text, (const byte*)"\x51\x3e\x08" "get_text")
QDEF1(MP_QSTR_get_text_selection, (const byte*)"\xee\x24\x12" "get_text_selection")
QDEF1(MP_QSTR_get_text_selection_end, (const byte*)"\xbe\x42\x16" "get_text_selection_end")
QDEF1(MP_QSTR_get_text_selection_start, (const byte*)"\x31\x1c\x18" "get_text_selection_start")
QDEF1(MP_QSTR_get_textarea, (const byte*)"\xc6\x2f\x0c" "get_textarea")
QDEF1(MP_QSTR_get_theme, (const byte*)"\xdd\x69\x09" "get_theme")
QDEF1(MP_QSTR_get_tile_act, (const byte*)"\x31\x30\x0c" "get_tile_act")
QDEF1(MP_QSTR_get_title, (const byte*)"\x8c\xa5\x09" "get_title")
QDEF1(MP_QSTR_get_today_date, (const byte*)"\x80\x0a\x0e" "get_today_date")
QDEF1(MP_QSTR_get_type, (const byte*)"\x54\xcc\x08" "get_type")
QDEF1(MP_QSTR_get_user_data, (const byte*)"\x72\x35\x0d" "get_user_data")
QDEF1(MP_QSTR_get_value, (const byte*)"\xa7\x17\x09" "get_value")
QDEF1(MP_QSTR_get_value_cb, (const byte*)"\x79\x9f\x0c" "get_value_cb")
QDEF1(MP_QSTR_get_vect, (const byte*)"\x68\x39\x08" "get_vect")
QDEF1(MP_QSTR_get_ver_res, (const byte*)"\x36\x92\x0b" "get_ver_res")
QDEF1(MP_QSTR_get_width, (const byte*)"\xca\x58\x09" "get_width")
QDEF1(MP_QSTR_get_wrap, (const byte*)"\x18\xad\x08" "get_wrap")
QDEF1(MP_QSTR_get_x, (const byte*)"\x34\xdb\x05" "get_x")
QDEF1(MP_QSTR_get_x2, (const byte*)"\x86\x41\x06" "get_x2")
QDEF1(MP_QSTR_get_x_aligned, (const byte*)"\xe7\xcc\x0d" "get_x_aligned")
QDEF1(MP_QSTR_get_x_array, (const byte*)"\x52\x6e\x0b" "get_x_array")
QDEF1(MP_QSTR_get_x_start_point, (const byte*)"\x58\x50\x11" "get_x_start_point")
QDEF1(MP_QSTR_get_y, (const byte*)"\x35\xdb\x05" "get_y")
QDEF1(MP_QSTR_get_y2, (const byte*)"\xe7\x41\x06" "get_y2")
QDEF1(MP_QSTR_get_y_aligned, (const byte*)"\x66\xdd\x0d" "get_y_aligned")
QDEF1(MP_QSTR_get_y_array, (const byte*)"\x13\x7a\x0b" "get_y_array")
QDEF1(MP_QSTR_get_y_invert, (const byte*)"\xf8\x7d\x0c" "get_y_invert")
QDEF1(MP_QSTR_get_zoom, (const byte*)"\xfb\x0f\x08" "get_zoom")
QDEF1(MP_QSTR_get_zoom_x, (const byte*)"\xfc\xef\x0a" "get_zoom_x")
QDEF1(MP_QSTR_get_zoom_y, (const byte*)"\xfd\xef\x0a" "get_zoom_y")
QDEF1(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x18\x0b" "getaddrinfo")
QDEF1(MP_QSTR_getcwd, (const byte*)"\x03\xd0\x06" "getcwd")
QDEF1(MP_QSTR_getenv, (const byte*)"\xae\xfb\x06" "getenv")
QDEF1(MP_QSTR_geti, (const byte*)"\xfa\xa1\x04" "geti")
QDEF1(MP_QSTR_getpeercert, (const byte*)"\xb1\x92\x0b" "getpeercert")
QDEF1(MP_QSTR_getpos, (const byte*)"\xdf\xa3\x06" "getpos")
QDEF1(MP_QSTR_getrandbits, (const byte*)"\x66\x7d\x0b" "getrandbits")
QDEF1(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF1(MP_QSTR_getvalue, (const byte*)"\x78\xac\x08" "getvalue")
QDEF1(MP_QSTR_gmtime, (const byte*)"\x5a\x8e\x06" "gmtime")
QDEF1(MP_QSTR_gpu_fill_cb, (const byte*)"\x69\x84\x0b" "gpu_fill_cb")
QDEF1(MP_QSTR_gpu_wait_cb, (const byte*)"\xad\x7a\x0b" "gpu_wait_cb")
QDEF1(MP_QSTR_green, (const byte*)"\xbe\x98\x05" "green")
QDEF1(MP_QSTR_grid_fr, (const byte*)"\x76\xcf\x07" "grid_fr")
QDEF1(MP_QSTR_grid_init, (const byte*)"\xb8\xc9\x09" "grid_init")
QDEF1(MP_QSTR_group, (const byte*)"\xba\xb0\x05" "group")
QDEF1(MP_QSTR_group_create, (const byte*)"\x61\xf0\x0c" "group_create")
QDEF1(MP_QSTR_group_def, (const byte*)"\xc2\x44\x09" "group_def")
QDEF1(MP_QSTR_group_focus_obj, (const byte*)"\xf1\xc8\x0f" "group_focus_obj")
QDEF1(MP_QSTR_group_get_default, (const byte*)"\x47\x30\x11" "group_get_default")
QDEF1(MP_QSTR_group_remove_obj, (const byte*)"\x1b\xe8\x10" "group_remove_obj")
QDEF1(MP_QSTR_group_swap_obj, (const byte*)"\x68\x8b\x0e" "group_swap_obj")
QDEF1(MP_QSTR_group_t, (const byte*)"\x31\xbc\x07" "group_t")
QDEF1(MP_QSTR_h, (const byte*)"\xcd\xb5\x01" "h")
QDEF1(MP_QSTR_handler, (const byte*)"\xdd\x5d\x07" "handler")
QDEF1(MP_QSTR_has_btn_ctrl, (const byte*)"\x4e\x37\x0c" "has_btn_ctrl")
QDEF1(MP_QSTR_has_cell_ctrl, (const byte*)"\x50\xee\x0d" "has_cell_ctrl")
QDEF1(MP_QSTR_has_class, (const byte*)"\x8e\xdc\x09" "has_class")
QDEF1(MP_QSTR_has_flag, (const byte*)"\xac\x44\x08" "has_flag")
QDEF1(MP_QSTR_has_flag_any, (const byte*)"\x65\x12\x0c" "has_flag_any")
QDEF1(MP_QSTR_has_group, (const byte*)"\x9f\x3c\x09" "has_group")
QDEF1(MP_QSTR_has_palette_alpha, (const byte*)"\xf6\xe1\x11" "has_palette_alpha")
QDEF1(MP_QSTR_has_state, (const byte*)"\xf7\x3b\x09" "has_state")
QDEF1(MP_QSTR_haveImageReader, (const byte*)"\x9d\xaf\x0f" "haveImageReader")
QDEF1(MP_QSTR_haveImageWriter, (const byte*)"\xf7\x62\x0f" "haveImageWriter")
QDEF1(MP_QSTR_head, (const byte*)"\xed\x5d\x04" "head")
QDEF1(MP_QSTR_header, (const byte*)"\x9a\x98\x06" "header")
QDEF1(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF1(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF1(MP_QSTR_heapify, (const byte*)"\xaf\x2d\x07" "heapify")
QDEF1(MP_QSTR_heappop, (const byte*)"\xd6\x27\x07" "heappop")
QDEF1(MP_QSTR_heappush, (const byte*)"\x87\x6b\x08" "heappush")
QDEF1(MP_QSTR_height_def, (const byte*)"\x02\xc9\x0a" "height_def")
QDEF1(MP_QSTR_help, (const byte*)"\x94\x5c\x04" "help")
QDEF1(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF1(MP_QSTR_hexlify, (const byte*)"\x2a\x7f\x07" "hexlify")
QDEF1(MP_QSTR_hidden, (const byte*)"\xef\x48\x06" "hidden")
QDEF1(MP_QSTR_hide_series, (const byte*)"\xe1\x1b\x0b" "hide_series")
QDEF1(MP_QSTR_hit_test, (const byte*)"\x59\x3c\x08" "hit_test")
QDEF1(MP_QSTR_hit_test_info_t, (const byte*)"\x83\x11\x0f" "hit_test_info_t")
QDEF1(MP_QSTR_hline, (const byte*)"\x83\x3c\x05" "hline")
QDEF1(MP_QSTR_hor_res, (const byte*)"\xcb\xa1\x07" "hor_res")
QDEF1(MP_QSTR_hour, (const byte*)"\x65\x36\x04" "hour")
QDEF1(MP_QSTR_http, (const byte*)"\x9d\x9b\x04" "http")
QDEF1(MP_QSTR_i, (const byte*)"\xcc\xb5\x01" "i")
QDEF1(MP_QSTR_iccp_defined, (const byte*)"\xe2\x2f\x0c" "iccp_defined")
QDEF1(MP_QSTR_iccp_name, (const byte*)"\x64\x36\x09" "iccp_name")
QDEF1(MP_QSTR_iccp_profile, (const byte*)"\x48\x81\x0c" "iccp_profile")
QDEF1(MP_QSTR_iccp_profile_size, (const byte*)"\x32\x9a\x11" "iccp_profile_size")
QDEF1(MP_QSTR_idle, (const byte*)"\xa1\xdc\x04" "idle")
QDEF1(MP_QSTR_ifconfig, (const byte*)"\xe0\x41\x08" "ifconfig")
QDEF1(MP_QSTR_ignore_adler32, (const byte*)"\x7d\x40\x0e" "ignore_adler32")
QDEF1(MP_QSTR_ignore_crc, (const byte*)"\x70\x7c\x0a" "ignore_crc")
QDEF1(MP_QSTR_ignore_critical, (const byte*)"\x89\x7f\x0f" "ignore_critical")
QDEF1(MP_QSTR_ignore_end, (const byte*)"\x6d\xa4\x0a" "ignore_end")
QDEF1(MP_QSTR_ignore_nlen, (const byte*)"\xab\x93\x0b" "ignore_nlen")
QDEF1(MP_QSTR_ilistdir, (const byte*)"\x71\x6a\x08" "ilistdir")
QDEF1(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF1(MP_QSTR_imageAdd, (const byte*)"\x43\xea\x08" "imageAdd")
QDEF1(MP_QSTR_imageElementDivide, (const byte*)"\x8f\xae\x12" "imageElementDivide")
QDEF1(MP_QSTR_imageElementMultiply, (const byte*)"\x90\x25\x14" "imageElementMultiply")
QDEF1(MP_QSTR_imageMinus, (const byte*)"\x4e\xac\x0a" "imageMinus")
QDEF1(MP_QSTR_img, (const byte*)"\x26\x53\x03" "img")
QDEF1(MP_QSTR_imgCopy, (const byte*)"\x23\x54\x07" "imgCopy")
QDEF1(MP_QSTR_imgDecode, (const byte*)"\x6a\x80\x09" "imgDecode")
QDEF1(MP_QSTR_imgDecode2, (const byte*)"\x98\x8d\x0a" "imgDecode2")
QDEF1(MP_QSTR_imgEncode, (const byte*)"\xc0\x90\x09" "imgEncode")
QDEF1(MP_QSTR_imgRead, (const byte*)"\x74\x7a\x07" "imgRead")
QDEF1(MP_QSTR_imgReadMulti, (const byte*)"\xdd\x23\x0c" "imgReadMulti")
QDEF1(MP_QSTR_imgWrite, (const byte*)"\xfb\xab\x08" "imgWrite")
QDEF1(MP_QSTR_imgWriteMulti, (const byte*)"\xf2\x97\x0d" "imgWriteMulti")
QDEF1(MP_QSTR_img_class, (const byte*)"\x97\x2b\x09" "img_class")
QDEF1(MP_QSTR_img_data, (const byte*)"\xa9\x06\x08" "img_data")
QDEF1(MP_QSTR_img_decoder_dsc_t, (const byte*)"\xe7\xc0\x11" "img_decoder_dsc_t")
QDEF1(MP_QSTR_img_decoder_t, (const byte*)"\x4c\x9b\x0d" "img_decoder_t")
QDEF1(MP_QSTR_img_dsc, (const byte*)"\x8d\x4b\x07" "img_dsc")
QDEF1(MP_QSTR_img_dsc_t, (const byte*)"\xc6\x6b\x09" "img_dsc_t")
QDEF1(MP_QSTR_img_header_t, (const byte*)"\xad\x4d\x0c" "img_header_t")
QDEF1(MP_QSTR_img_src, (const byte*)"\xfb\xf6\x07" "img_src")
QDEF1(MP_QSTR_imgbtn, (const byte*)"\x1e\xb6\x06" "imgbtn")
QDEF1(MP_QSTR_imgbtn_class, (const byte*)"\xaf\x85\x0c" "imgbtn_class")
QDEF1(MP_QSTR_implementation, (const byte*)"\x17\x2d\x0e" "implementation")
QDEF1(MP_QSTR_increase, (const byte*)"\x41\xec\x08" "increase")
QDEF1(MP_QSTR_increment, (const byte*)"\xe4\xf1\x09" "increment")
QDEF1(MP_QSTR_indev_data_t, (const byte*)"\x11\xb8\x0c" "indev_data_t")
QDEF1(MP_QSTR_indev_drv_t, (const byte*)"\xa1\x45\x0b" "indev_drv_t")
QDEF1(MP_QSTR_indev_get_act, (const byte*)"\xf5\x7c\x0d" "indev_get_act")
QDEF1(MP_QSTR_indev_get_obj_act, (const byte*)"\xed\x7d\x11" "indev_get_obj_act")
QDEF1(MP_QSTR_indev_get_read_timer, (const byte*)"\x29\xc1\x14" "indev_get_read_timer")
QDEF1(MP_QSTR_indev_read_timer_cb, (const byte*)"\x9e\xb1\x13" "indev_read_timer_cb")
QDEF1(MP_QSTR_indev_search_obj, (const byte*)"\x7c\x1c\x10" "indev_search_obj")
QDEF1(MP_QSTR_indev_t, (const byte*)"\xfe\x20\x07" "indev_t")
QDEF1(MP_QSTR_indices, (const byte*)"\x5a\x48\x07" "indices")
QDEF1(MP_QSTR_inet_ntop, (const byte*)"\x89\x1d\x09" "inet_ntop")
QDEF1(MP_QSTR_inet_pton, (const byte*)"\xc9\x94\x09" "inet_pton")
QDEF1(MP_QSTR_infer, (const byte*)"\x73\x30\x05" "infer")
QDEF1(MP_QSTR_inflate, (const byte*)"\x18\x7d\x07" "inflate")
QDEF1(MP_QSTR_info, (const byte*)"\xeb\xb3\x04" "info")
QDEF1(MP_QSTR_info_cb, (const byte*)"\xb5\xd2\x07" "info_cb")
QDEF1(MP_QSTR_info_cleanup, (const byte*)"\xf4\x90\x0c" "info_cleanup")
QDEF1(MP_QSTR_info_copy, (const byte*)"\xb1\x62\x09" "info_copy")
QDEF1(MP_QSTR_info_init, (const byte*)"\x0e\x99\x09" "info_init")
QDEF1(MP_QSTR_info_png, (const byte*)"\x2d\xd1\x08" "info_png")
QDEF1(MP_QSTR_info_raw, (const byte*)"\xd0\xe9\x08" "info_raw")
QDEF1(MP_QSTR_init, (const byte*)"\x1f\xb4\x04" "init")
QDEF1(MP_QSTR_init_draw_arc_dsc, (const byte*)"\xe4\x59\x11" "init_draw_arc_dsc")
QDEF1(MP_QSTR_init_draw_img_dsc, (const byte*)"\x17\xfb\x11" "init_draw_img_dsc")
QDEF1(MP_QSTR_init_draw_label_dsc, (const byte*)"\x32\x54\x13" "init_draw_label_dsc")
QDEF1(MP_QSTR_init_draw_line_dsc, (const byte*)"\xfa\xb6\x12" "init_draw_line_dsc")
QDEF1(MP_QSTR_init_draw_rect_dsc, (const byte*)"\xd4\xf0\x12" "init_draw_rect_dsc")
QDEF1(MP_QSTR_input, (const byte*)"\x73\x5a\x05" "input")
QDEF1(MP_QSTR_ins_text, (const byte*)"\xf3\x83\x08" "ins_text")
QDEF1(MP_QSTR_inspect, (const byte*)"\xb3\xba\x07" "inspect")
QDEF1(MP_QSTR_inspect_chunk, (const byte*)"\x77\xd7\x0d" "inspect_chunk")
QDEF1(MP_QSTR_instance_size, (const byte*)"\x76\x94\x0d" "instance_size")
QDEF1(MP_QSTR_int_val, (const byte*)"\xf2\x9e\x07" "int_val")
QDEF1(MP_QSTR_interlace_method, (const byte*)"\x0a\xca\x10" "interlace_method")
QDEF1(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF1(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF1(MP_QSTR_inv, (const byte*)"\x14\x53\x03" "inv")
QDEF1(MP_QSTR_inv_area_joined, (const byte*)"\x40\xb7\x0f" "inv_area_joined")
QDEF1(MP_QSTR_inv_areas, (const byte*)"\xaf\xd6\x09" "inv_areas")
QDEF1(MP_QSTR_inv_p, (const byte*)"\x5b\x6f\x05" "inv_p")
QDEF1(MP_QSTR_invalidate, (const byte*)"\x64\x00\x0a" "invalidate")
QDEF1(MP_QSTR_invalidate_area, (const byte*)"\x2c\x42\x0f" "invalidate_area")
QDEF1(MP_QSTR_invert, (const byte*)"\xb7\x00\x06" "invert")
QDEF1(MP_QSTR_ioctl, (const byte*)"\x78\xc2\x05" "ioctl")
QDEF1(MP_QSTR_ipoll, (const byte*)"\x53\x5d\x05" "ipoll")
QDEF1(MP_QSTR_irq, (const byte*)"\x8f\x56\x03" "irq")
QDEF1(MP_QSTR_is_alpha_type, (const byte*)"\xf3\xda\x0d" "is_alpha_type")
QDEF1(MP_QSTR_is_char_under_pos, (const byte*)"\x9c\xec\x11" "is_char_under_pos")
QDEF1(MP_QSTR_is_const, (const byte*)"\x25\xe7\x08" "is_const")
QDEF1(MP_QSTR_is_dragged, (const byte*)"\x76\x89\x0a" "is_dragged")
QDEF1(MP_QSTR_is_editable, (const byte*)"\x36\x26\x0b" "is_editable")
QDEF1(MP_QSTR_is_empty, (const byte*)"\x55\x29\x08" "is_empty")
QDEF1(MP_QSTR_is_greyscale_type, (const byte*)"\xd6\xb9\x11" "is_greyscale_type")
QDEF1(MP_QSTR_is_group_def, (const byte*)"\xe7\x71\x0c" "is_group_def")
QDEF1(MP_QSTR_is_initialized, (const byte*)"\x8c\xbc\x0e" "is_initialized")
QDEF1(MP_QSTR_is_layout_positioned, (const byte*)"\xfd\x2a\x14" "is_layout_positioned")
QDEF1(MP_QSTR_is_palette_type, (const byte*)"\x1a\x91\x0f" "is_palette_type")
QDEF1(MP_QSTR_is_scrolling, (const byte*)"\xed\xd0\x0c" "is_scrolling")
QDEF1(MP_QSTR_is_valid, (const byte*)"\x36\x3d\x08" "is_valid")
QDEF1(MP_QSTR_is_visible, (const byte*)"\x6e\xea\x0a" "is_visible")
QDEF1(MP_QSTR_isclose, (const byte*)"\x49\x4e\x07" "isclose")
QDEF1(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF1(MP_QSTR_isenabled, (const byte*)"\x9a\xe5\x09" "isenabled")
QDEF1(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF1(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF1(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF1(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF1(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF1(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF1(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF1(MP_QSTR_itext_keys, (const byte*)"\x2a\xe1\x0a" "itext_keys")
QDEF1(MP_QSTR_itext_langtags, (const byte*)"\xcb\x94\x0e" "itext_langtags")
QDEF1(MP_QSTR_itext_num, (const byte*)"\xf8\x90\x09" "itext_num")
QDEF1(MP_QSTR_itext_strings, (const byte*)"\x48\xa6\x0d" "itext_strings")
QDEF1(MP_QSTR_itext_transkeys, (const byte*)"\x90\xdc\x0f" "itext_transkeys")
QDEF1(MP_QSTR_kbd_intr, (const byte*)"\xf6\x13\x08" "kbd_intr")
QDEF1(MP_QSTR_keepends, (const byte*)"\x62\x8b\x08" "keepends")
QDEF1(MP_QSTR_key_b, (const byte*)"\xaf\x78\x05" "key_b")
QDEF1(MP_QSTR_key_defined, (const byte*)"\xcc\x43\x0b" "key_defined")
QDEF1(MP_QSTR_key_g, (const byte*)"\xaa\x78\x05" "key_g")
QDEF1(MP_QSTR_key_r, (const byte*)"\xbf\x78\x05" "key_r")
QDEF1(MP_QSTR_keyboard, (const byte*)"\x68\x5e\x08" "keyboard")
QDEF1(MP_QSTR_keyboard_class, (const byte*)"\xd9\xe0\x0e" "keyboard_class")
QDEF1(MP_QSTR_keypad, (const byte*)"\xe7\xd7\x06" "keypad")
QDEF1(MP_QSTR_kv, (const byte*)"\xf8\x6f\x02" "kv")
QDEF1(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
QDEF1(MP_QSTR_label_class, (const byte*)"\xb2\x6a\x0b" "label_class")
QDEF1(MP_QSTR_label_color, (const byte*)"\x01\x26\x0b" "label_color")
QDEF1(MP_QSTR_label_dsc, (const byte*)"\xa8\xff\x09" "label_dsc")
QDEF1(MP_QSTR_label_gap, (const byte*)"\x2a\xf5\x09" "label_gap")
QDEF1(MP_QSTR_last_activity_time, (const byte*)"\xf7\xdd\x12" "last_activity_time")
QDEF1(MP_QSTR_last_area, (const byte*)"\xc7\x96\x09" "last_area")
QDEF1(MP_QSTR_last_key, (const byte*)"\xc7\x96\x08" "last_key")
QDEF1(MP_QSTR_last_obj, (const byte*)"\x77\xa7\x08" "last_obj")
QDEF1(MP_QSTR_last_part, (const byte*)"\x07\x7d\x09" "last_part")
QDEF1(MP_QSTR_last_point, (const byte*)"\x1c\x93\x0a" "last_point")
QDEF1(MP_QSTR_last_pressed, (const byte*)"\xf6\x26\x0c" "last_pressed")
QDEF1(MP_QSTR_last_raw_point, (const byte*)"\x67\xb3\x0e" "last_raw_point")
QDEF1(MP_QSTR_last_run, (const byte*)"\x99\x15\x08" "last_run")
QDEF1(MP_QSTR_last_state, (const byte*)"\x27\xa9\x0a" "last_state")
QDEF1(MP_QSTR_layer_sys, (const byte*)"\x20\x88\x09" "layer_sys")
QDEF1(MP_QSTR_layer_top, (const byte*)"\xb2\x79\x09" "layer_top")
QDEF1(MP_QSTR_layout_register, (const byte*)"\xc9\x7e\x0f" "layout_register")
QDEF1(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF1(MP_QSTR_led, (const byte*)"\x68\x40\x03" "led")
QDEF1(MP_QSTR_led_class, (const byte*)"\xd9\x42\x09" "led_class")
QDEF1(MP_QSTR_letter, (const byte*)"\x7b\x4e\x06" "letter")
QDEF1(MP_QSTR_letter_space, (const byte*)"\x80\x77\x0c" "letter_space")
QDEF1(MP_QSTR_lgamma, (const byte*)"\xce\x6c\x06" "lgamma")
QDEF1(MP_QSTR_life, (const byte*)"\xc3\x1b\x04" "life")
QDEF1(MP_QSTR_lightsleep, (const byte*)"\x54\xe7\x0a" "lightsleep")
QDEF1(MP_QSTR_line, (const byte*)"\xcb\x1c\x04" "line")
QDEF1(MP_QSTR_line_class, (const byte*)"\x3a\xe2\x0a" "line_class")
QDEF1(MP_QSTR_line_dsc, (const byte*)"\x20\xf3\x08" "line_dsc")
QDEF1(MP_QSTR_line_height, (const byte*)"\x8b\xdb\x0b" "line_height")
QDEF1(MP_QSTR_line_space, (const byte*)"\xb0\xf0\x0a" "line_space")
QDEF1(MP_QSTR_line_start, (const byte*)"\x54\xbd\x0a" "line_start")
QDEF1(MP_QSTR_list_btn_class, (const byte*)"\x11\x15\x0e" "list_btn_class")
QDEF1(MP_QSTR_list_class, (const byte*)"\xd6\x0a\x0a" "list_class")
QDEF1(MP_QSTR_list_text_class, (const byte*)"\x34\xaa\x0f" "list_text_class")
QDEF1(MP_QSTR_listdir, (const byte*)"\x98\xe3\x07" "listdir")
QDEF1(MP_QSTR_listen, (const byte*)"\xcc\x0e\x06" "listen")
QDEF1(MP_QSTR_ll_t, (const byte*)"\xce\x2e\x04" "ll_t")
QDEF1(MP_QSTR_load, (const byte*)"\x63\x24\x04" "load")
QDEF1(MP_QSTR_loadNet, (const byte*)"\x3c\x0b\x07" "loadNet")
QDEF1(MP_QSTR_load_file, (const byte*)"\x5a\x9a\x09" "load_file")
QDEF1(MP_QSTR_loads, (const byte*)"\xb0\xb0\x05" "loads")
QDEF1(MP_QSTR_local_grad, (const byte*)"\xc7\x3a\x0a" "local_grad")
QDEF1(MP_QSTR_localtime, (const byte*)"\x7d\x46\x09" "localtime")
QDEF1(MP_QSTR_lock, (const byte*)"\xae\x23\x04" "lock")
QDEF1(MP_QSTR_locked, (const byte*)"\x0f\xba\x06" "locked")
QDEF1(MP_QSTR_lodepng, (const byte*)"\x5e\xb9\x07" "lodepng")
QDEF1(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF1(MP_QSTR_log10, (const byte*)"\x40\x91\x05" "log10")
QDEF1(MP_QSTR_log2, (const byte*)"\x73\x23\x04" "log2")
QDEF1(MP_QSTR_log_register_print_cb, (const byte*)"\x67\xdf\x15" "log_register_print_cb")
QDEF1(MP_QSTR_login, (const byte*)"\x46\x88\x05" "login")
QDEF1(MP_QSTR_logout, (const byte*)"\x8f\x9b\x06" "logout")
QDEF1(MP_QSTR_long_pr_sent, (const byte*)"\x81\xae\x0c" "long_pr_sent")
QDEF1(MP_QSTR_long_press_repeat_time, (const byte*)"\xb5\xbc\x16" "long_press_repeat_time")
QDEF1(MP_QSTR_long_press_time, (const byte*)"\x7d\x93\x0f" "long_press_time")
QDEF1(MP_QSTR_longpr_rep_timestamp, (const byte*)"\xc4\xb3\x14" "longpr_rep_timestamp")
QDEF1(MP_QSTR_lv_anim_t, (const byte*)"\x20\xc0\x09" "lv_anim_t")
QDEF1(MP_QSTR_lv_anim_t_exec_cb, (const byte*)"\x1a\xd3\x11" "lv_anim_t_exec_cb")
QDEF1(MP_QSTR_lv_anim_t_get_value_cb, (const byte*)"\xc3\x2e\x16" "lv_anim_t_get_value_cb")
QDEF1(MP_QSTR_lv_anim_t_path_cb, (const byte*)"\x4c\x0e\x11" "lv_anim_t_path_cb")
QDEF1(MP_QSTR_lv_anim_t_ready_cb, (const byte*)"\xea\x05\x12" "lv_anim_t_ready_cb")
QDEF1(MP_QSTR_lv_anim_t_start_cb, (const byte*)"\xa1\x9d\x12" "lv_anim_t_start_cb")
QDEF1(MP_QSTR_lv_area_t, (const byte*)"\xbc\xa2\x09" "lv_area_t")
QDEF1(MP_QSTR_lv_async_call_async_xcb, (const byte*)"\x04\x9f\x17" "lv_async_call_async_xcb")
QDEF1(MP_QSTR_lv_calendar_date_t, (const byte*)"\xb2\xb7\x12" "lv_calendar_date_t")
QDEF1(MP_QSTR_lv_chart_cursor_t, (const byte*)"\xd2\x0f\x11" "lv_chart_cursor_t")
QDEF1(MP_QSTR_lv_chart_series_t, (const byte*)"\x03\x47\x11" "lv_chart_series_t")
QDEF1(MP_QSTR_lv_color16_ch_t, (const byte*)"\x85\xf8\x0f" "lv_color16_ch_t")
QDEF1(MP_QSTR_lv_color16_t, (const byte*)"\xf1\x87\x0c" "lv_color16_t")
QDEF1(MP_QSTR_lv_color_filter_dsc_t, (const byte*)"\xa2\xd4\x15" "lv_color_filter_dsc_t")
QDEF1(MP_QSTR_lv_color_filter_dsc_t_cb, (const byte*)"\x9c\x87\x18" "lv_color_filter_dsc_t_cb")
QDEF1(MP_QSTR_lv_color_filter_dsc_t_filter_cb, (const byte*)"\x43\x99\x1f" "lv_color_filter_dsc_t_filter_cb")
QDEF1(MP_QSTR_lv_color_hsv_t, (const byte*)"\xa4\x6d\x0e" "lv_color_hsv_t")
QDEF1(MP_QSTR_lv_disp_draw_buf_t, (const byte*)"\x54\xda\x12" "lv_disp_draw_buf_t")
QDEF1(MP_QSTR_lv_disp_drv_t, (const byte*)"\x5a\xaa\x0d" "lv_disp_drv_t")
QDEF1(MP_QSTR_lv_disp_drv_t_clean_dcache_cb, (const byte*)"\x09\x97\x1d" "lv_disp_drv_t_clean_dcache_cb")
QDEF1(MP_QSTR_lv_disp_drv_t_drv_update_cb, (const byte*)"\x55\x0b\x1b" "lv_disp_drv_t_drv_update_cb")
QDEF1(MP_QSTR_lv_disp_drv_t_flush_cb, (const byte*)"\xbf\xc6\x16" "lv_disp_drv_t_flush_cb")
QDEF1(MP_QSTR_lv_disp_drv_t_gpu_fill_cb, (const byte*)"\xa9\xdb\x19" "lv_disp_drv_t_gpu_fill_cb")
QDEF1(MP_QSTR_lv_disp_drv_t_gpu_wait_cb, (const byte*)"\xed\x12\x19" "lv_disp_drv_t_gpu_wait_cb")
QDEF1(MP_QSTR_lv_disp_drv_t_monitor_cb, (const byte*)"\xf7\x2e\x18" "lv_disp_drv_t_monitor_cb")
QDEF1(MP_QSTR_lv_disp_drv_t_rounder_cb, (const byte*)"\xee\xfc\x18" "lv_disp_drv_t_rounder_cb")
QDEF1(MP_QSTR_lv_disp_drv_t_set_px_cb, (const byte*)"\xae\x39\x17" "lv_disp_drv_t_set_px_cb")
QDEF1(MP_QSTR_lv_disp_drv_t_wait_cb, (const byte*)"\x30\x6c\x15" "lv_disp_drv_t_wait_cb")
QDEF1(MP_QSTR_lv_disp_t, (const byte*)"\x45\xbf\x09" "lv_disp_t")
QDEF1(MP_QSTR_lv_disp_t_bg_fn, (const byte*)"\xc8\x1e\x0f" "lv_disp_t_bg_fn")
QDEF1(MP_QSTR_lv_draw_arc_dsc_t, (const byte*)"\x6f\xc8\x11" "lv_draw_arc_dsc_t")
QDEF1(MP_QSTR_lv_draw_img_dsc_t, (const byte*)"\x5c\x7d\x11" "lv_draw_img_dsc_t")
QDEF1(MP_QSTR_lv_draw_label_dsc_t, (const byte*)"\x39\x2a\x13" "lv_draw_label_dsc_t")
QDEF1(MP_QSTR_lv_draw_label_hint_t, (const byte*)"\x76\x15\x14" "lv_draw_label_hint_t")
QDEF1(MP_QSTR_lv_draw_line_dsc_t, (const byte*)"\xf1\x1d\x12" "lv_draw_line_dsc_t")
QDEF1(MP_QSTR_lv_draw_mask_angle_param_cfg_t, (const byte*)"\x53\x87\x1e" "lv_draw_mask_angle_param_cfg_t")
QDEF1(MP_QSTR_lv_draw_mask_angle_param_t, (const byte*)"\xce\xcc\x1a" "lv_draw_mask_angle_param_t")
QDEF1(MP_QSTR_lv_draw_mask_fade_param_cfg_t, (const byte*)"\xf4\x08\x1d" "lv_draw_mask_fade_param_cfg_t")
QDEF1(MP_QSTR_lv_draw_mask_fade_param_t, (const byte*)"\x29\x5e\x19" "lv_draw_mask_fade_param_t")
QDEF1(MP_QSTR_lv_draw_mask_line_param_cfg_t, (const byte*)"\xfc\x0c\x1d" "lv_draw_mask_line_param_cfg_t")
QDEF1(MP_QSTR_lv_draw_mask_line_param_t, (const byte*)"\x21\x24\x19" "lv_draw_mask_line_param_t")
QDEF1(MP_QSTR_lv_draw_mask_map_param_cfg_t, (const byte*)"\x6e\x57\x1c" "lv_draw_mask_map_param_cfg_t")
QDEF1(MP_QSTR_lv_draw_mask_map_param_t, (const byte*)"\xb3\x01\x18" "lv_draw_mask_map_param_t")
QDEF1(MP_QSTR_lv_draw_mask_radius_param_cfg_t, (const byte*)"\x0a\x88\x1f" "lv_draw_mask_radius_param_cfg_t")
QDEF1(MP_QSTR_lv_draw_mask_radius_param_t, (const byte*)"\x97\x6b\x1b" "lv_draw_mask_radius_param_t")
QDEF1(MP_QSTR_lv_draw_rect_dsc_t, (const byte*)"\x9f\x26\x12" "lv_draw_rect_dsc_t")
QDEF1(MP_QSTR_lv_event_t, (const byte*)"\x87\x55\x0a" "lv_event_t")
QDEF1(MP_QSTR_lv_font_glyph_dsc_t, (const byte*)"\xc6\xcd\x13" "lv_font_glyph_dsc_t")
QDEF1(MP_QSTR_lv_font_t, (const byte*)"\xb8\x19\x09" "lv_font_t")
QDEF1(MP_QSTR_lv_font_t_get_glyph_bitmap, (const byte*)"\xf8\x0b\x1a" "lv_font_t_get_glyph_bitmap")
QDEF1(MP_QSTR_lv_font_t_get_glyph_dsc, (const byte*)"\x6f\xe5\x17" "lv_font_t_get_glyph_dsc")
QDEF1(MP_QSTR_lv_fs_dir_t, (const byte*)"\x1e\xbe\x0b" "lv_fs_dir_t")
QDEF1(MP_QSTR_lv_fs_drv_t, (const byte*)"\xa1\xac\x0b" "lv_fs_drv_t")
QDEF1(MP_QSTR_lv_fs_drv_t_close_cb, (const byte*)"\xf6\x38\x14" "lv_fs_drv_t_close_cb")
QDEF1(MP_QSTR_lv_fs_drv_t_dir_close_cb, (const byte*)"\x16\x77\x18" "lv_fs_drv_t_dir_close_cb")
QDEF1(MP_QSTR_lv_fs_drv_t_dir_open_cb, (const byte*)"\x94\xf1\x17" "lv_fs_drv_t_dir_open_cb")
QDEF1(MP_QSTR_lv_fs_drv_t_dir_read_cb, (const byte*)"\x72\x5e\x17" "lv_fs_drv_t_dir_read_cb")
QDEF1(MP_QSTR_lv_fs_drv_t_open_cb, (const byte*)"\x34\x99\x13" "lv_fs_drv_t_open_cb")
QDEF1(MP_QSTR_lv_fs_drv_t_read_cb, (const byte*)"\x92\x05\x13" "lv_fs_drv_t_read_cb")
QDEF1(MP_QSTR_lv_fs_drv_t_ready_cb, (const byte*)"\x0b\xaa\x14" "lv_fs_drv_t_ready_cb")
QDEF1(MP_QSTR_lv_fs_drv_t_seek_cb, (const byte*)"\x78\x77\x13" "lv_fs_drv_t_seek_cb")
QDEF1(MP_QSTR_lv_fs_drv_t_tell_cb, (const byte*)"\xd1\x6c\x13" "lv_fs_drv_t_tell_cb")
QDEF1(MP_QSTR_lv_fs_drv_t_write_cb, (const byte*)"\x3d\xb8\x14" "lv_fs_drv_t_write_cb")
QDEF1(MP_QSTR_lv_fs_file_t, (const byte*)"\xc7\x3a\x0c" "lv_fs_file_t")
QDEF1(MP_QSTR_lv_group_t, (const byte*)"\xf4\xb2\x0a" "lv_group_t")
QDEF1(MP_QSTR_lv_group_t_focus_cb, (const byte*)"\x39\x0b\x13" "lv_group_t_focus_cb")
QDEF1(MP_QSTR_lv_hit_test_info_t, (const byte*)"\x46\x14\x12" "lv_hit_test_info_t")
QDEF1(MP_QSTR_lv_img_decoder_dsc_t, (const byte*)"\xa2\xb0\x14" "lv_img_decoder_dsc_t")
QDEF1(MP_QSTR_lv_img_decoder_t, (const byte*)"\x49\x1d\x10" "lv_img_decoder_t")
QDEF1(MP_QSTR_lv_img_decoder_t_close_cb, (const byte*)"\xde\x5c\x19" "lv_img_decoder_t_close_cb")
QDEF1(MP_QSTR_lv_img_decoder_t_info_cb, (const byte*)"\x66\x29\x18" "lv_img_decoder_t_info_cb")
QDEF1(MP_QSTR_lv_img_decoder_t_open_cb, (const byte*)"\xdc\x36\x18" "lv_img_decoder_t_open_cb")
QDEF1(MP_QSTR_lv_img_decoder_t_read_line_cb, (const byte*)"\x8b\x4f\x1d" "lv_img_decoder_t_read_line_cb")
QDEF1(MP_QSTR_lv_img_dsc_t, (const byte*)"\xc3\x8b\x0c" "lv_img_dsc_t")
QDEF1(MP_QSTR_lv_img_header_t, (const byte*)"\x48\x82\x0f" "lv_img_header_t")
QDEF1(MP_QSTR_lv_indev_data_t, (const byte*)"\x74\x63\x0f" "lv_indev_data_t")
QDEF1(MP_QSTR_lv_indev_drv_t, (const byte*)"\x64\xb9\x0e" "lv_indev_drv_t")
QDEF1(MP_QSTR_lv_indev_drv_t_feedback_cb, (const byte*)"\x8c\xa8\x1a" "lv_indev_drv_t_feedback_cb")
QDEF1(MP_QSTR_lv_indev_drv_t_read_cb, (const byte*)"\xd7\x5b\x16" "lv_indev_drv_t_read_cb")
QDEF1(MP_QSTR_lv_indev_t, (const byte*)"\x3b\xe4\x0a" "lv_indev_t")
QDEF1(MP_QSTR_lv_layout_register_cb, (const byte*)"\xb2\x83\x15" "lv_layout_register_cb")
QDEF1(MP_QSTR_lv_ll_t, (const byte*)"\xab\xc3\x07" "lv_ll_t")
QDEF1(MP_QSTR_lv_log_print_g_cb_t_print_cb, (const byte*)"\x57\xc0\x1c" "lv_log_print_g_cb_t_print_cb")
QDEF1(MP_QSTR_lv_mem_monitor_t, (const byte*)"\xdd\x1f\x10" "lv_mem_monitor_t")
QDEF1(MP_QSTR_lv_meter_indicator_t, (const byte*)"\x3e\xc5\x14" "lv_meter_indicator_t")
QDEF1(MP_QSTR_lv_meter_indicator_type_data_arc_t, (const byte*)"\xd9\x42\x22" "lv_meter_indicator_type_data_arc_t")
QDEF1(MP_QSTR_lv_meter_indicator_type_data_needle_img_t, (const byte*)"\xb6\x0a\x29" "lv_meter_indicator_type_data_needle_img_t")
QDEF1(MP_QSTR_lv_meter_indicator_type_data_needle_line_t, (const byte*)"\x7b\x8a\x2a" "lv_meter_indicator_type_data_needle_line_t")
QDEF1(MP_QSTR_lv_meter_indicator_type_data_scale_lines_t, (const byte*)"\x33\x4f\x2a" "lv_meter_indicator_type_data_scale_lines_t")
QDEF1(MP_QSTR_lv_meter_indicator_type_data_t, (const byte*)"\xd6\xfc\x1e" "lv_meter_indicator_type_data_t")
QDEF1(MP_QSTR_lv_meter_scale_t, (const byte*)"\xe7\x5a\x10" "lv_meter_scale_t")
QDEF1(MP_QSTR_lv_obj_add_event_cb_event_cb, (const byte*)"\x39\x8c\x1c" "lv_obj_add_event_cb_event_cb")
QDEF1(MP_QSTR_lv_obj_class_t, (const byte*)"\x7d\xcc\x0e" "lv_obj_class_t")
QDEF1(MP_QSTR_lv_obj_class_t_constructor_cb, (const byte*)"\x94\xa5\x1d" "lv_obj_class_t_constructor_cb")
QDEF1(MP_QSTR_lv_obj_class_t_destructor_cb, (const byte*)"\xf7\xad\x1c" "lv_obj_class_t_destructor_cb")
QDEF1(MP_QSTR_lv_obj_class_t_event_cb, (const byte*)"\xd0\x84\x17" "lv_obj_class_t_event_cb")
QDEF1(MP_QSTR_lv_obj_draw_part_dsc_t, (const byte*)"\xb0\x62\x16" "lv_obj_draw_part_dsc_t")
QDEF1(MP_QSTR_lv_obj_t_event_cb, (const byte*)"\xc1\xbc\x11" "lv_obj_t_event_cb")
QDEF1(MP_QSTR_lv_obj_tree_walk_cb, (const byte*)"\x8e\x5b\x13" "lv_obj_tree_walk_cb")
QDEF1(MP_QSTR_lv_point_t, (const byte*)"\x27\x96\x0a" "lv_point_t")
QDEF1(MP_QSTR_lv_span_t, (const byte*)"\xe7\xb5\x09" "lv_span_t")
QDEF1(MP_QSTR_lv_sqrt_res_t, (const byte*)"\xf4\xcd\x0d" "lv_sqrt_res_t")
QDEF1(MP_QSTR_lv_style_const_prop_t, (const byte*)"\xc4\x57\x15" "lv_style_const_prop_t")
QDEF1(MP_QSTR_lv_style_t, (const byte*)"\x1c\xdc\x0a" "lv_style_t")
QDEF1(MP_QSTR_lv_style_transition_dsc_init_path_cb, (const byte*)"\x05\xc5\x24" "lv_style_transition_dsc_init_path_cb")
QDEF1(MP_QSTR_lv_style_transition_dsc_t, (const byte*)"\x27\xfa\x19" "lv_style_transition_dsc_t")
QDEF1(MP_QSTR_lv_style_transition_dsc_t_path_xcb, (const byte*)"\x33\xa3\x22" "lv_style_transition_dsc_t_path_xcb")
QDEF1(MP_QSTR_lv_style_v_p_t, (const byte*)"\x1a\x7f\x0e" "lv_style_v_p_t")
QDEF1(MP_QSTR_lv_style_value_t, (const byte*)"\x48\xc2\x10" "lv_style_value_t")
QDEF1(MP_QSTR_lv_theme_t, (const byte*)"\x7a\x1e\x0a" "lv_theme_t")
QDEF1(MP_QSTR_lv_theme_t_apply_cb, (const byte*)"\xef\x8d\x13" "lv_theme_t_apply_cb")
QDEF1(MP_QSTR_lv_timer_create_timer_xcb, (const byte*)"\x02\xe7\x19" "lv_timer_create_timer_xcb")
QDEF1(MP_QSTR_lv_timer_t, (const byte*)"\x4c\x70\x0a" "lv_timer_t")
QDEF1(MP_QSTR_lv_timer_t_timer_cb, (const byte*)"\xea\x0b\x13" "lv_timer_t_timer_cb")
QDEF1(MP_QSTR_lvgl, (const byte*)"\x74\x85\x04" "lvgl")
QDEF1(MP_QSTR_lvgl_display, (const byte*)"\xb1\xc0\x0c" "lvgl_display")
QDEF1(MP_QSTR_machine, (const byte*)"\x60\xab\x07" "machine")
QDEF1(MP_QSTR_makefile, (const byte*)"\xc1\xd5\x08" "makefile")
QDEF1(MP_QSTR_mark_layout_as_dirty, (const byte*)"\x55\x6e\x14" "mark_layout_as_dirty")
QDEF1(MP_QSTR_match, (const byte*)"\x96\x22\x05" "match")
QDEF1(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF1(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF1(MP_QSTR_max_icc_size, (const byte*)"\x1d\xa5\x0c" "max_icc_size")
QDEF1(MP_QSTR_max_output_size, (const byte*)"\x4b\x38\x0f" "max_output_size")
QDEF1(MP_QSTR_max_text_size, (const byte*)"\x09\xa2\x0d" "max_text_size")
QDEF1(MP_QSTR_max_used, (const byte*)"\x49\xa1\x08" "max_used")
QDEF1(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF1(MP_QSTR_maxsize, (const byte*)"\xd4\x70\x07" "maxsize")
QDEF1(MP_QSTR_md5, (const byte*)"\x19\x44\x03" "md5")
QDEF1(MP_QSTR_mem, (const byte*)"\x20\x44\x03" "mem")
QDEF1(MP_QSTR_mem16, (const byte*)"\x07\xca\x05" "mem16")
QDEF1(MP_QSTR_mem32, (const byte*)"\x41\xca\x05" "mem32")
QDEF1(MP_QSTR_mem8, (const byte*)"\x18\xc8\x04" "mem8")
QDEF1(MP_QSTR_memRead, (const byte*)"\xf2\xec\x07" "memRead")
QDEF1(MP_QSTR_memWrite, (const byte*)"\x3d\x5c\x08" "memWrite")
QDEF1(MP_QSTR_mem_alloc, (const byte*)"\x52\x2b\x09" "mem_alloc")
QDEF1(MP_QSTR_mem_buf_free_all, (const byte*)"\xbb\x71\x10" "mem_buf_free_all")
QDEF1(MP_QSTR_mem_buf_get, (const byte*)"\xe7\xc1\x0b" "mem_buf_get")
QDEF1(MP_QSTR_mem_buf_release, (const byte*)"\xb8\x68\x0f" "mem_buf_release")
QDEF1(MP_QSTR_mem_deinit, (const byte*)"\xe4\xe7\x0a" "mem_deinit")
QDEF1(MP_QSTR_mem_free, (const byte*)"\xcb\x62\x08" "mem_free")
QDEF1(MP_QSTR_mem_info, (const byte*)"\xd1\xf1\x08" "mem_info")
QDEF1(MP_QSTR_mem_init, (const byte*)"\x65\xf0\x08" "mem_init")
QDEF1(MP_QSTR_mem_monitor_t, (const byte*)"\x58\xc5\x0d" "mem_monitor_t")
QDEF1(MP_QSTR_mem_realloc, (const byte*)"\xa5\x85\x0b" "mem_realloc")
QDEF1(MP_QSTR_mem_test, (const byte*)"\x09\x17\x08" "mem_test")
QDEF1(MP_QSTR_memaddr, (const byte*)"\x93\xe8\x07" "memaddr")
QDEF1(MP_QSTR_memcpy, (const byte*)"\x4a\xeb\x06" "memcpy")
QDEF1(MP_QSTR_memcpy_small, (const byte*)"\xea\xcb\x0c" "memcpy_small")
QDEF1(MP_QSTR_memory_total, (const byte*)"\x99\x0c\x0c" "memory_total")
QDEF1(MP_QSTR_memory_used, (const byte*)"\x9c\xd2\x0b" "memory_used")
QDEF1(MP_QSTR_memoryview, (const byte*)"\x69\x44\x0a" "memoryview")
QDEF1(MP_QSTR_memset, (const byte*)"\xe2\x2d\x06" "memset")
QDEF1(MP_QSTR_memset_00, (const byte*)"\xfd\x7f\x09" "memset_00")
QDEF1(MP_QSTR_memset_ff, (const byte*)"\xbd\x89\x09" "memset_ff")
QDEF1(MP_QSTR_meter, (const byte*)"\xce\x32\x05" "meter")
QDEF1(MP_QSTR_meter_class, (const byte*)"\x7f\x85\x0b" "meter_class")
QDEF1(MP_QSTR_meter_indicator_t, (const byte*)"\xfb\x22\x11" "meter_indicator_t")
QDEF1(MP_QSTR_meter_indicator_type_data_arc_t, (const byte*)"\x9c\x14\x1f" "meter_indicator_type_data_arc_t")
QDEF1(MP_QSTR_meter_indicator_type_data_needle_img_t, (const byte*)"\x53\xa8\x26" "meter_indicator_type_data_needle_img_t")
QDEF1(MP_QSTR_meter_indicator_type_data_needle_line_t, (const byte*)"\x3e\x5b\x27" "meter_indicator_type_data_needle_line_t")
QDEF1(MP_QSTR_meter_indicator_type_data_scale_lines_t, (const byte*)"\xb6\x68\x27" "meter_indicator_type_data_scale_lines_t")
QDEF1(MP_QSTR_meter_indicator_type_data_t, (const byte*)"\x93\x05\x1b" "meter_indicator_type_data_t")
QDEF1(MP_QSTR_meter_scale_t, (const byte*)"\xa2\x9f\x0d" "meter_scale_t")
QDEF1(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF1(MP_QSTR_minicv, (const byte*)"\x13\x6e\x06" "minicv")
QDEF1(MP_QSTR_minute, (const byte*)"\x6b\xc2\x06" "minute")
QDEF1(MP_QSTR_miso, (const byte*)"\x9d\x98\x04" "miso")
QDEF1(MP_QSTR_mkdir, (const byte*)"\x9c\xb5\x05" "mkdir")
QDEF1(MP_QSTR_mkfs, (const byte*)"\x76\xb0\x04" "mkfs")
QDEF1(MP_QSTR_mktime, (const byte*)"\x96\x2b\x06" "mktime")
QDEF1(MP_QSTR_modbus, (const byte*)"\xc7\x4a\x06" "modbus")
QDEF1(MP_QSTR_mode, (const byte*)"\x26\xc0\x04" "mode")
QDEF1(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF1(MP_QSTR_modify, (const byte*)"\xf5\x66\x06" "modify")
QDEF1(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF1(MP_QSTR_modules, (const byte*)"\xec\xd1\x07" "modules")
QDEF1(MP_QSTR_monitor, (const byte*)"\x29\x8f\x07" "monitor")
QDEF1(MP_QSTR_monitor_cb, (const byte*)"\x37\xcd\x0a" "monitor_cb")
QDEF1(MP_QSTR_monkey_init, (const byte*)"\xdb\xc2\x0b" "monkey_init")
QDEF1(MP_QSTR_monkey_test, (const byte*)"\xf7\xbb\x0b" "monkey_test")
QDEF1(MP_QSTR_month, (const byte*)"\x75\xf1\x05" "month")
QDEF1(MP_QSTR_mosi, (const byte*)"\x1d\xc2\x04" "mosi")
QDEF1(MP_QSTR_mount, (const byte*)"\xa8\x0d\x05" "mount")
QDEF1(MP_QSTR_move, (const byte*)"\x74\xc2\x04" "move")
QDEF1(MP_QSTR_move_background, (const byte*)"\xc5\x9d\x0f" "move_background")
QDEF1(MP_QSTR_move_children_by, (const byte*)"\x9c\x93\x10" "move_children_by")
QDEF1(MP_QSTR_move_foreground, (const byte*)"\xf0\x0e\x0f" "move_foreground")
QDEF1(MP_QSTR_move_to, (const byte*)"\x30\xf6\x07" "move_to")
QDEF1(MP_QSTR_move_to_index, (const byte*)"\x51\xfe\x0d" "move_to_index")
QDEF1(MP_QSTR_mpy, (const byte*)"\xc1\x45\x03" "mpy")
QDEF1(MP_QSTR_msgbox, (const byte*)"\x29\xef\x06" "msgbox")
QDEF1(MP_QSTR_msgbox_backdrop_class, (const byte*)"\x25\x0f\x15" "msgbox_backdrop_class")
QDEF1(MP_QSTR_msgbox_class, (const byte*)"\xd8\xc4\x0c" "msgbox_class")
QDEF1(MP_QSTR_msgbox_content_class, (const byte*)"\x2e\x7f\x14" "msgbox_content_class")
QDEF1(MP_QSTR_n_size, (const byte*)"\x51\xc6\x06" "n_size")
QDEF1(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF1(MP_QSTR_namedtuple, (const byte*)"\x1e\x16\x0a" "namedtuple")
QDEF1(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
QDEF1(MP_QSTR_needle_img, (const byte*)"\x1a\xc6\x0a" "needle_img")
QDEF1(MP_QSTR_needle_line, (const byte*)"\x77\x2d\x0b" "needle_line")
QDEF1(MP_QSTR_netmgr, (const byte*)"\xa2\x1d\x06" "netmgr")
QDEF1(MP_QSTR_new_span, (const byte*)"\x0a\xba\x08" "new_span")
QDEF1(MP_QSTR_nodename, (const byte*)"\x62\xab\x08" "nodename")
QDEF1(MP_QSTR_num, (const byte*)"\x73\x5b\x03" "num")
QDEF1(MP_QSTR_obj, (const byte*)"\x02\x5c\x03" "obj")
QDEF1(MP_QSTR_obj_class, (const byte*)"\xb3\xbc\x09" "obj_class")
QDEF1(MP_QSTR_obj_class_t, (const byte*)"\xb8\xbc\x0b" "obj_class_t")
QDEF1(MP_QSTR_obj_draw_part_dsc_t, (const byte*)"\x35\x10\x13" "obj_draw_part_dsc_t")
QDEF1(MP_QSTR_obj_focus, (const byte*)"\x51\x19\x09" "obj_focus")
QDEF1(MP_QSTR_obj_ll, (const byte*)"\x9d\x59\x06" "obj_ll")
QDEF1(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF1(MP_QSTR_off, (const byte*)"\x8a\x5c\x03" "off")
QDEF1(MP_QSTR_offset_x, (const byte*)"\x8f\x67\x08" "offset_x")
QDEF1(MP_QSTR_offset_y, (const byte*)"\x8e\x67\x08" "offset_y")
QDEF1(MP_QSTR_ofs_x, (const byte*)"\x58\xf4\x05" "ofs_x")
QDEF1(MP_QSTR_ofs_y, (const byte*)"\x59\xf4\x05" "ofs_y")
QDEF1(MP_QSTR_on, (const byte*)"\x64\x6f\x02" "on")
QDEF1(MP_QSTR_onConnect, (const byte*)"\x3a\x5e\x09" "onConnect")
QDEF1(MP_QSTR_onProps, (const byte*)"\x6a\xa8\x07" "onProps")
QDEF1(MP_QSTR_onPwrkey, (const byte*)"\xe6\xff\x08" "onPwrkey")
QDEF1(MP_QSTR_onService, (const byte*)"\xf9\xd6\x09" "onService")
QDEF1(MP_QSTR_onewire, (const byte*)"\x28\xfc\x07" "onewire")
QDEF1(MP_QSTR_online_upgrade, (const byte*)"\x65\x01\x0e" "online_upgrade")
QDEF1(MP_QSTR_opa, (const byte*)"\xdb\x5e\x03" "opa")
QDEF1(MP_QSTR_opa_bottom, (const byte*)"\x0b\x4d\x0a" "opa_bottom")
QDEF1(MP_QSTR_opa_start_on_y, (const byte*)"\xfc\x39\x0e" "opa_start_on_y")
QDEF1(MP_QSTR_opa_top, (const byte*)"\xaf\x78\x07" "opa_top")
QDEF1(MP_QSTR_openCamera, (const byte*)"\x68\x15\x0a" "openCamera")
QDEF1(MP_QSTR_open_cb, (const byte*)"\xcf\x6b\x07" "open_cb")
QDEF1(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF1(MP_QSTR_origo, (const byte*)"\x79\x2b\x05" "origo")
QDEF1(MP_QSTR_oss, (const byte*)"\xea\x5e\x03" "oss")
QDEF1(MP_QSTR_ota, (const byte*)"\x5f\x5f\x03" "ota")
QDEF1(MP_QSTR_outer, (const byte*)"\xdc\xe2\x05" "outer")
QDEF1(MP_QSTR_outline_color, (const byte*)"\xe7\x68\x0d" "outline_color")
QDEF1(MP_QSTR_outline_opa, (const byte*)"\xe4\x4b\x0b" "outline_opa")
QDEF1(MP_QSTR_outline_pad, (const byte*)"\xcf\x16\x0b" "outline_pad")
QDEF1(MP_QSTR_outline_width, (const byte*)"\x9c\xb8\x0d" "outline_width")
QDEF1(MP_QSTR_p1, (const byte*)"\x44\x70\x02" "p1")
QDEF1(MP_QSTR_p2, (const byte*)"\x47\x70\x02" "p2")
QDEF1(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF1(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
QDEF1(MP_QSTR_palette, (const byte*)"\xd8\x71\x07" "palette")
QDEF1(MP_QSTR_palette_add, (const byte*)"\x86\x91\x0b" "palette_add")
QDEF1(MP_QSTR_palette_clear, (const byte*)"\xbe\x75\x0d" "palette_clear")
QDEF1(MP_QSTR_palette_darken, (const byte*)"\xf0\x6a\x0e" "palette_darken")
QDEF1(MP_QSTR_palette_lighten, (const byte*)"\xd2\xa6\x0f" "palette_lighten")
QDEF1(MP_QSTR_palette_main, (const byte*)"\x4c\x20\x0c" "palette_main")
QDEF1(MP_QSTR_palettesize, (const byte*)"\xbd\x69\x0b" "palettesize")
QDEF1(MP_QSTR_param, (const byte*)"\xca\xc8\x05" "param")
QDEF1(MP_QSTR_parent, (const byte*)"\x99\xd1\x06" "parent")
QDEF1(MP_QSTR_parity, (const byte*)"\x42\x05\x06" "parity")
QDEF1(MP_QSTR_part, (const byte*)"\xd2\xcf\x04" "part")
QDEF1(MP_QSTR_partition, (const byte*)"\x87\xe5\x09" "partition")
QDEF1(MP_QSTR_password, (const byte*)"\x9a\x6f\x08" "password")
QDEF1(MP_QSTR_path, (const byte*)"\x88\xce\x04" "path")
QDEF1(MP_QSTR_path_bounce, (const byte*)"\x47\xc7\x0b" "path_bounce")
QDEF1(MP_QSTR_path_cb, (const byte*)"\x36\xf5\x07" "path_cb")
QDEF1(MP_QSTR_path_ease_in, (const byte*)"\x1d\xf9\x0c" "path_ease_in")
QDEF1(MP_QSTR_path_ease_in_out, (const byte*)"\xec\x35\x10" "path_ease_in_out")
QDEF1(MP_QSTR_path_ease_out, (const byte*)"\xb4\x31\x0d" "path_ease_out")
QDEF1(MP_QSTR_path_linear, (const byte*)"\x2a\x4e\x0b" "path_linear")
QDEF1(MP_QSTR_path_overshoot, (const byte*)"\xb6\x0e\x0e" "path_overshoot")
QDEF1(MP_QSTR_path_step, (const byte*)"\x85\x83\x09" "path_step")
QDEF1(MP_QSTR_path_xcb, (const byte*)"\x2e\x8e\x08" "path_xcb")
QDEF1(MP_QSTR_pause, (const byte*)"\xd7\xbd\x05" "pause")
QDEF1(MP_QSTR_paused, (const byte*)"\xd3\x78\x06" "paused")
QDEF1(MP_QSTR_pct, (const byte*)"\xa2\x72\x03" "pct")
QDEF1(MP_QSTR_peek, (const byte*)"\x7e\xc1\x04" "peek")
QDEF1(MP_QSTR_peektime, (const byte*)"\x8b\x5c\x08" "peektime")
QDEF1(MP_QSTR_pend_throw, (const byte*)"\xf3\x74\x0a" "pend_throw")
QDEF1(MP_QSTR_period, (const byte*)"\xa0\xa0\x06" "period")
QDEF1(MP_QSTR_ph_key, (const byte*)"\xf5\x1a\x06" "ph_key")
QDEF1(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF1(MP_QSTR_phys_defined, (const byte*)"\x09\x3b\x0c" "phys_defined")
QDEF1(MP_QSTR_phys_unit, (const byte*)"\xce\x29\x09" "phys_unit")
QDEF1(MP_QSTR_phys_x, (const byte*)"\x30\xdc\x06" "phys_x")
QDEF1(MP_QSTR_phys_y, (const byte*)"\x31\xdc\x06" "phys_y")
QDEF1(MP_QSTR_physical_hor_res, (const byte*)"\xa1\x80\x10" "physical_hor_res")
QDEF1(MP_QSTR_physical_ver_res, (const byte*)"\x75\xba\x10" "physical_ver_res")
QDEF1(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF1(MP_QSTR_pivot, (const byte*)"\x91\x19\x05" "pivot")
QDEF1(MP_QSTR_pixel, (const byte*)"\x4d\xf0\x05" "pixel")
QDEF1(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF1(MP_QSTR_play, (const byte*)"\x21\xde\x04" "play")
QDEF1(MP_QSTR_playback_delay, (const byte*)"\x40\xad\x0e" "playback_delay")
QDEF1(MP_QSTR_playback_now, (const byte*)"\xa3\x34\x0c" "playback_now")
QDEF1(MP_QSTR_playback_time, (const byte*)"\xe0\xb4\x0d" "playback_time")
QDEF1(MP_QSTR_png_init, (const byte*)"\xd9\x56\x08" "png_init")
QDEF1(MP_QSTR_point, (const byte*)"\xe9\x19\x05" "point")
QDEF1(MP_QSTR_point_id, (const byte*)"\x3b\x92\x08" "point_id")
QDEF1(MP_QSTR_point_t, (const byte*)"\x62\x42\x07" "point_t")
QDEF1(MP_QSTR_pointer, (const byte*)"\x9e\x44\x07" "pointer")
QDEF1(MP_QSTR_points_init, (const byte*)"\xff\xe6\x0b" "points_init")
QDEF1(MP_QSTR_polar, (const byte*)"\x05\x0c\x05" "polar")
QDEF1(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF1(MP_QSTR_poll, (const byte*)"\x9a\xd9\x04" "poll")
QDEF1(MP_QSTR_pop_head, (const byte*)"\x1d\x28\x08" "pop_head")
QDEF1(MP_QSTR_popleft, (const byte*)"\x71\x9a\x07" "popleft")
QDEF1(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF1(MP_QSTR_pos, (const byte*)"\x29\x73\x03" "pos")
QDEF1(MP_QSTR_pos_set, (const byte*)"\x54\x13\x07" "pos_set")
QDEF1(MP_QSTR_post, (const byte*)"\x3d\xd8\x04" "post")
QDEF1(MP_QSTR_postEvent, (const byte*)"\x91\x92\x09" "postEvent")
QDEF1(MP_QSTR_postProps, (const byte*)"\x53\x8b\x09" "postProps")
QDEF1(MP_QSTR_postRaw, (const byte*)"\xb9\xf2\x07" "postRaw")
QDEF1(MP_QSTR_powerDown, (const byte*)"\xc8\x00\x09" "powerDown")
QDEF1(MP_QSTR_powerReset, (const byte*)"\x0f\xf2\x0a" "powerReset")
QDEF1(MP_QSTR_pr_timestamp, (const byte*)"\x36\x6e\x0c" "pr_timestamp")
QDEF1(MP_QSTR_predict, (const byte*)"\x78\x08\x07" "predict")
QDEF1(MP_QSTR_prepare, (const byte*)"\xc4\x78\x07" "prepare")
QDEF1(MP_QSTR_prev, (const byte*)"\xb4\x80\x04" "prev")
QDEF1(MP_QSTR_prev_scr, (const byte*)"\x49\x97\x08" "prev_scr")
QDEF1(MP_QSTR_print_exception, (const byte*)"\x1c\x22\x0f" "print_exception")
QDEF1(MP_QSTR_proc, (const byte*)"\xeb\x81\x04" "proc")
QDEF1(MP_QSTR_prop, (const byte*)"\xf8\x81\x04" "prop")
QDEF1(MP_QSTR_prop1, (const byte*)"\xc9\xc0\x05" "prop1")
QDEF1(MP_QSTR_prop_cnt, (const byte*)"\x3e\xd3\x08" "prop_cnt")
QDEF1(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF1(MP_QSTR_props, (const byte*)"\x8b\xc0\x05" "props")
QDEF1(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
QDEF1(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
QDEF1(MP_QSTR_ptr32, (const byte*)"\xb2\xca\x05" "ptr32")
QDEF1(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
QDEF1(MP_QSTR_ptr_val, (const byte*)"\xf7\x42\x07" "ptr_val")
QDEF1(MP_QSTR_publish, (const byte*)"\x5c\x6a\x07" "publish")
QDEF1(MP_QSTR_pull, (const byte*)"\x80\x7d\x04" "pull")
QDEF1(MP_QSTR_push, (const byte*)"\xbb\x7e\x04" "push")
QDEF1(MP_QSTR_push_head, (const byte*)"\x6c\x1e\x09" "push_head")
QDEF1(MP_QSTR_push_sorted, (const byte*)"\x1f\xa0\x0b" "push_sorted")
QDEF1(MP_QSTR_put, (const byte*)"\x74\x70\x03" "put")
QDEF1(MP_QSTR_putText, (const byte*)"\xc9\x0e\x07" "putText")
QDEF1(MP_QSTR_putenv, (const byte*)"\xc9\x6c\x06" "putenv")
QDEF1(MP_QSTR_qstr_info, (const byte*)"\xb0\x81\x09" "qstr_info")
QDEF1(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF1(MP_QSTR_r_mod, (const byte*)"\xee\x07\x05" "r_mod")
QDEF1(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF1(MP_QSTR_radius, (const byte*)"\xfd\x0f\x06" "radius")
QDEF1(MP_QSTR_rand, (const byte*)"\x9c\x0a\x04" "rand")
QDEF1(MP_QSTR_randint, (const byte*)"\xaf\xdc\x07" "randint")
QDEF1(MP_QSTR_random, (const byte*)"\xbe\x2c\x06" "random")
QDEF1(MP_QSTR_randrange, (const byte*)"\xa3\x3e\x09" "randrange")
QDEF1(MP_QSTR_raw_end, (const byte*)"\x31\x1a\x07" "raw_end")
QDEF1(MP_QSTR_rb, (const byte*)"\xd5\x70\x02" "rb")
QDEF1(MP_QSTR_readAfterWrite, (const byte*)"\x4e\x3a\x0e" "readAfterWrite")
QDEF1(MP_QSTR_readAndWrite, (const byte*)"\x01\xd1\x0c" "readAndWrite")
QDEF1(MP_QSTR_readCoils, (const byte*)"\x6d\x3d\x09" "readCoils")
QDEF1(MP_QSTR_readDiscreteInputs, (const byte*)"\x69\x1a\x12" "readDiscreteInputs")
QDEF1(MP_QSTR_readHoldingRegisters, (const byte*)"\x22\x64\x14" "readHoldingRegisters")
QDEF1(MP_QSTR_readInputRegisters, (const byte*)"\xdb\xb5\x12" "readInputRegisters")
QDEF1(MP_QSTR_readRaw, (const byte*)"\xf3\x69\x07" "readRaw")
QDEF1(MP_QSTR_readVoltage, (const byte*)"\x95\x75\x0b" "readVoltage")
QDEF1(MP_QSTR_read_cb, (const byte*)"\x69\x7f\x07" "read_cb")
QDEF1(MP_QSTR_read_line, (const byte*)"\x86\x37\x09" "read_line")
QDEF1(MP_QSTR_read_line_cb, (const byte*)"\xf8\x96\x0c" "read_line_cb")
QDEF1(MP_QSTR_read_text_chunks, (const byte*)"\x82\xf0\x10" "read_text_chunks")
QDEF1(MP_QSTR_read_timer, (const byte*)"\xef\xfe\x0a" "read_timer")
QDEF1(MP_QSTR_read_u16, (const byte*)"\xda\xae\x08" "read_u16")
QDEF1(MP_QSTR_readbit, (const byte*)"\x08\x4f\x07" "readbit")
QDEF1(MP_QSTR_readblocks, (const byte*)"\x2d\x1c\x0a" "readblocks")
QDEF1(MP_QSTR_readbyte, (const byte*)"\x7d\xf0\x08" "readbyte")
QDEF1(MP_QSTR_readfrom, (const byte*)"\x41\xb1\x08" "readfrom")
QDEF1(MP_QSTR_readfrom_into, (const byte*)"\x82\x3f\x0d" "readfrom_into")
QDEF1(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x65\x0c" "readfrom_mem")
QDEF1(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x8e\x11" "readfrom_mem_into")
QDEF1(MP_QSTR_readjust_scroll, (const byte*)"\x1d\xcc\x0f" "readjust_scroll")
QDEF1(MP_QSTR_readlines, (const byte*)"\x6a\x59\x09" "readlines")
QDEF1(MP_QSTR_readonly, (const byte*)"\x03\x89\x08" "readonly")
QDEF1(MP_QSTR_ready, (const byte*)"\xee\x30\x05" "ready")
QDEF1(MP_QSTR_ready_cb, (const byte*)"\xd0\xdb\x08" "ready_cb")
QDEF1(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF1(MP_QSTR_reboot, (const byte*)"\xe4\xae\x06" "reboot")
QDEF1(MP_QSTR_recolor, (const byte*)"\x6f\x04\x07" "recolor")
QDEF1(MP_QSTR_recolor_opa, (const byte*)"\x6e\xea\x0b" "recolor_opa")
QDEF1(MP_QSTR_rect, (const byte*)"\xe5\xf9\x04" "rect")
QDEF1(MP_QSTR_rect_dsc, (const byte*)"\x8e\xab\x08" "rect_dsc")
QDEF1(MP_QSTR_rectangle, (const byte*)"\xa4\x2d\x09" "rectangle")
QDEF1(MP_QSTR_recv, (const byte*)"\xe7\xf9\x04" "recv")
QDEF1(MP_QSTR_recvfrom, (const byte*)"\x91\x90\x08" "recvfrom")
QDEF1(MP_QSTR_red, (const byte*)"\x76\x8b\x03" "red")
QDEF1(MP_QSTR_refocus_policy, (const byte*)"\xc1\x89\x0e" "refocus_policy")
QDEF1(MP_QSTR_refr_mode, (const byte*)"\x3a\xff\x09" "refr_mode")
QDEF1(MP_QSTR_refr_now, (const byte*)"\x2f\x23\x08" "refr_now")
QDEF1(MP_QSTR_refr_pos, (const byte*)"\xb5\xd6\x08" "refr_pos")
QDEF1(MP_QSTR_refr_size, (const byte*)"\x3c\x5a\x09" "refr_size")
QDEF1(MP_QSTR_refr_timer, (const byte*)"\x1e\x72\x0a" "refr_timer")
QDEF1(MP_QSTR_refresh, (const byte*)"\x98\x4c\x07" "refresh")
QDEF1(MP_QSTR_refresh_ext_draw_size, (const byte*)"\xab\xc1\x15" "refresh_ext_draw_size")
QDEF1(MP_QSTR_refresh_self_size, (const byte*)"\x21\xb0\x11" "refresh_self_size")
QDEF1(MP_QSTR_refresh_style, (const byte*)"\xd0\x84\x0d" "refresh_style")
QDEF1(MP_QSTR_register, (const byte*)"\xac\xa1\x08" "register")
QDEF1(MP_QSTR_registerSubDevice, (const byte*)"\x10\xfd\x11" "registerSubDevice")
QDEF1(MP_QSTR_rel_tol, (const byte*)"\x56\x46\x07" "rel_tol")
QDEF1(MP_QSTR_release, (const byte*)"\xec\x8f\x07" "release")
QDEF1(MP_QSTR_releaseData, (const byte*)"\xdc\xde\x0b" "releaseData")
QDEF1(MP_QSTR_reload, (const byte*)"\x74\x07\x06" "reload")
QDEF1(MP_QSTR_remember_unknown_chunks, (const byte*)"\x82\xba\x17" "remember_unknown_chunks")
QDEF1(MP_QSTR_removeTopo, (const byte*)"\x07\x59\x0a" "removeTopo")
QDEF1(MP_QSTR_remove_all_objs, (const byte*)"\xb6\x41\x0f" "remove_all_objs")
QDEF1(MP_QSTR_remove_event_cb, (const byte*)"\x8e\xfe\x0f" "remove_event_cb")
QDEF1(MP_QSTR_remove_event_cb_with_user_data, (const byte*)"\x32\x6b\x1e" "remove_event_cb_with_user_data")
QDEF1(MP_QSTR_remove_event_dsc, (const byte*)"\xdb\xd5\x10" "remove_event_dsc")
QDEF1(MP_QSTR_remove_local_style_prop, (const byte*)"\x7b\x4c\x17" "remove_local_style_prop")
QDEF1(MP_QSTR_remove_prop, (const byte*)"\x21\x51\x0b" "remove_prop")
QDEF1(MP_QSTR_remove_series, (const byte*)"\x07\x8d\x0d" "remove_series")
QDEF1(MP_QSTR_remove_style, (const byte*)"\x6b\x86\x0c" "remove_style")
QDEF1(MP_QSTR_remove_style_all, (const byte*)"\xf5\x44\x10" "remove_style_all")
QDEF1(MP_QSTR_rename, (const byte*)"\x35\x18\x06" "rename")
QDEF1(MP_QSTR_repeat_cnt, (const byte*)"\x34\xac\x0a" "repeat_cnt")
QDEF1(MP_QSTR_repeat_count, (const byte*)"\x4e\x0e\x0c" "repeat_count")
QDEF1(MP_QSTR_repeat_delay, (const byte*)"\xf8\xed\x0c" "repeat_delay")
QDEF1(MP_QSTR_report, (const byte*)"\x8b\x14\x06" "report")
QDEF1(MP_QSTR_report_style_change, (const byte*)"\xda\x69\x13" "report_style_change")
QDEF1(MP_QSTR_request, (const byte*)"\x74\xb0\x07" "request")
QDEF1(MP_QSTR_requestData, (const byte*)"\x44\xff\x0b" "requestData")
QDEF1(MP_QSTR_res, (const byte*)"\x61\x8b\x03" "res")
QDEF1(MP_QSTR_reserved, (const byte*)"\x01\xa3\x08" "reserved")
QDEF1(MP_QSTR_reset, (const byte*)"\x10\xf4\x05" "reset")
QDEF1(MP_QSTR_reset_cause, (const byte*)"\xce\x2f\x0b" "reset_cause")
QDEF1(MP_QSTR_reset_long_press, (const byte*)"\x7d\x2c\x10" "reset_long_press")
QDEF1(MP_QSTR_reset_query, (const byte*)"\xe5\xf2\x0b" "reset_query")
QDEF1(MP_QSTR_resize, (const byte*)"\xb7\x86\x06" "resize")
QDEF1(MP_QSTR_restore, (const byte*)"\x2d\x9f\x07" "restore")
QDEF1(MP_QSTR_resume, (const byte*)"\x5c\xb9\x06" "resume")
QDEF1(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF1(MP_QSTR_rewind, (const byte*)"\xa6\xb5\x06" "rewind")
QDEF1(MP_QSTR_rmdir, (const byte*)"\x45\xa7\x05" "rmdir")
QDEF1(MP_QSTR_rng, (const byte*)"\x9e\x8b\x03" "rng")
QDEF1(MP_QSTR_roller, (const byte*)"\xaf\xf4\x06" "roller")
QDEF1(MP_QSTR_roller_class, (const byte*)"\x5e\xa4\x0c" "roller_class")
QDEF1(MP_QSTR_rotated, (const byte*)"\x38\x39\x07" "rotated")
QDEF1(MP_QSTR_rotation, (const byte*)"\xf1\x2f\x08" "rotation")
QDEF1(MP_QSTR_round_end, (const byte*)"\x37\xb4\x09" "round_end")
QDEF1(MP_QSTR_round_start, (const byte*)"\xb8\x34\x0b" "round_start")
QDEF1(MP_QSTR_rounded, (const byte*)"\x86\x36\x07" "rounded")
QDEF1(MP_QSTR_rounder_cb, (const byte*)"\x2e\x7c\x0a" "rounder_cb")
QDEF1(MP_QSTR_rpartition, (const byte*)"\x15\xd0\x0a" "rpartition")
QDEF1(MP_QSTR_rts, (const byte*)"\x50\x89\x03" "rts")
QDEF1(MP_QSTR_run_round, (const byte*)"\x91\xdd\x09" "run_round")
QDEF1(MP_QSTR_rx, (const byte*)"\xcf\x70\x02" "rx")
QDEF1(MP_QSTR_rxbuf, (const byte*)"\x7e\x67\x05" "rxbuf")
QDEF1(MP_QSTR_s, (const byte*)"\xd6\xb5\x01" "s")
QDEF1(MP_QSTR_save, (const byte*)"\xa4\x83\x04" "save")
QDEF1(MP_QSTR_saveConfig, (const byte*)"\x4e\x40\x0a" "saveConfig")
QDEF1(MP_QSTR_save_file, (const byte*)"\xbd\xa0\x09" "save_file")
QDEF1(MP_QSTR_scale, (const byte*)"\x7d\x51\x05" "scale")
QDEF1(MP_QSTR_scale_lines, (const byte*)"\x7f\x2b\x0b" "scale_lines")
QDEF1(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF1(MP_QSTR_schedule, (const byte*)"\xe0\xac\x08" "schedule")
QDEF1(MP_QSTR_sck, (const byte*)"\xfe\x8f\x03" "sck")
QDEF1(MP_QSTR_scl, (const byte*)"\xf9\x8f\x03" "scl")
QDEF1(MP_QSTR_scr_act, (const byte*)"\xce\x0e\x07" "scr_act")
QDEF1(MP_QSTR_scr_load, (const byte*)"\x3e\x04\x08" "scr_load")
QDEF1(MP_QSTR_scr_load_anim, (const byte*)"\xaa\x2a\x0d" "scr_load_anim")
QDEF1(MP_QSTR_scr_to_load, (const byte*)"\xda\xb6\x0b" "scr_to_load")
QDEF1(MP_QSTR_screen_cnt, (const byte*)"\x8f\x3e\x0a" "screen_cnt")
QDEF1(MP_QSTR_screen_transp, (const byte*)"\x3c\xef\x0d" "screen_transp")
QDEF1(MP_QSTR_screens, (const byte*)"\x5a\x52\x07" "screens")
QDEF1(MP_QSTR_scroll, (const byte*)"\x28\x5a\x06" "scroll")
QDEF1(MP_QSTR_scroll_area, (const byte*)"\xe0\x91\x0b" "scroll_area")
QDEF1(MP_QSTR_scroll_by, (const byte*)"\xac\x54\x09" "scroll_by")
QDEF1(MP_QSTR_scroll_dir, (const byte*)"\x48\xf4\x0a" "scroll_dir")
QDEF1(MP_QSTR_scroll_limit, (const byte*)"\x62\xab\x0c" "scroll_limit")
QDEF1(MP_QSTR_scroll_obj, (const byte*)"\xf0\x00\x0a" "scroll_obj")
QDEF1(MP_QSTR_scroll_sum, (const byte*)"\x9c\xac\x0a" "scroll_sum")
QDEF1(MP_QSTR_scroll_throw, (const byte*)"\x81\x9d\x0c" "scroll_throw")
QDEF1(MP_QSTR_scroll_throw_vect, (const byte*)"\x9a\x21\x11" "scroll_throw_vect")
QDEF1(MP_QSTR_scroll_throw_vect_ori, (const byte*)"\x91\x6d\x15" "scroll_throw_vect_ori")
QDEF1(MP_QSTR_scroll_to, (const byte*)"\xec\x52\x09" "scroll_to")
QDEF1(MP_QSTR_scroll_to_view, (const byte*)"\x5e\x32\x0e" "scroll_to_view")
QDEF1(MP_QSTR_scroll_to_view_recursive, (const byte*)"\xbb\xdc\x18" "scroll_to_view_recursive")
QDEF1(MP_QSTR_scroll_to_x, (const byte*)"\xeb\xb6\x0b" "scroll_to_x")
QDEF1(MP_QSTR_scroll_to_y, (const byte*)"\xea\xb6\x0b" "scroll_to_y")
QDEF1(MP_QSTR_scrollbar_invalidate, (const byte*)"\xa7\x44\x14" "scrollbar_invalidate")
QDEF1(MP_QSTR_sda, (const byte*)"\x53\x8f\x03" "sda")
QDEF1(MP_QSTR_search, (const byte*)"\xab\xc1\x06" "search")
QDEF1(MP_QSTR_second, (const byte*)"\x15\x4b\x06" "second")
QDEF1(MP_QSTR_seed, (const byte*)"\x92\x75\x04" "seed")
QDEF1(MP_QSTR_seek, (const byte*)"\x9d\x75\x04" "seek")
QDEF1(MP_QSTR_seekTo, (const byte*)"\xe6\x56\x06" "seekTo")
QDEF1(MP_QSTR_seek_cb, (const byte*)"\x83\x0d\x07" "seek_cb")
QDEF1(MP_QSTR_sel_bg_color, (const byte*)"\x47\x5a\x0c" "sel_bg_color")
QDEF1(MP_QSTR_sel_color, (const byte*)"\x3d\x0f\x09" "sel_color")
QDEF1(MP_QSTR_sel_end, (const byte*)"\x6f\xb9\x07" "sel_end")
QDEF1(MP_QSTR_sel_start, (const byte*)"\xe0\x39\x09" "sel_start")
QDEF1(MP_QSTR_select, (const byte*)"\x8d\x41\x06" "select")
QDEF1(MP_QSTR_send_data, (const byte*)"\x96\x44\x09" "send_data")
QDEF1(MP_QSTR_sendall, (const byte*)"\x38\x9f\x07" "sendall")
QDEF1(MP_QSTR_sendbreak, (const byte*)"\xc6\x11\x09" "sendbreak")
QDEF1(MP_QSTR_sendto, (const byte*)"\x22\x03\x06" "sendto")
QDEF1(MP_QSTR_separators, (const byte*)"\xeb\x0c\x0a" "separators")
QDEF1(MP_QSTR_ser, (const byte*)"\x21\x8f\x03" "ser")
QDEF1(MP_QSTR_server_hostname, (const byte*)"\x58\xef\x0f" "server_hostname")
QDEF1(MP_QSTR_server_side, (const byte*)"\x64\xef\x0b" "server_side")
QDEF1(MP_QSTR_setAutosleepMode, (const byte*)"\xa4\xd2\x10" "setAutosleepMode")
QDEF1(MP_QSTR_setChannelList, (const byte*)"\x66\x72\x0e" "setChannelList")
QDEF1(MP_QSTR_setDisplayBacklight, (const byte*)"\x48\x92\x13" "setDisplayBacklight")
QDEF1(MP_QSTR_setDisplayFreq, (const byte*)"\x5d\xca\x0e" "setDisplayFreq")
QDEF1(MP_QSTR_setInputData, (const byte*)"\x81\xa0\x0c" "setInputData")
QDEF1(MP_QSTR_setOption, (const byte*)"\x04\x27\x09" "setOption")
QDEF1(MP_QSTR_setProp, (const byte*)"\xba\xd8\x07" "setProp")
QDEF1(MP_QSTR_setTime, (const byte*)"\x32\x29\x07" "setTime")
QDEF1(MP_QSTR_setVolume, (const byte*)"\x2f\xe9\x09" "setVolume")
QDEF1(MP_QSTR_set_accepted_chars, (const byte*)"\xed\xa6\x12" "set_accepted_chars")
QDEF1(MP_QSTR_set_act, (const byte*)"\x0e\xad\x07" "set_act")
QDEF1(MP_QSTR_set_align, (const byte*)"\xd5\xcf\x09" "set_align")
QDEF1(MP_QSTR_set_all_value, (const byte*)"\xad\x00\x0d" "set_all_value")
QDEF1(MP_QSTR_set_angle, (const byte*)"\xf9\xbe\x09" "set_angle")
QDEF1(MP_QSTR_set_angles, (const byte*)"\x6a\x9e\x0a" "set_angles")
QDEF1(MP_QSTR_set_anim_speed, (const byte*)"\x6b\x61\x0e" "set_anim_speed")
QDEF1(MP_QSTR_set_anim_time, (const byte*)"\x19\x96\x0d" "set_anim_time")
QDEF1(MP_QSTR_set_antialias, (const byte*)"\xfc\x87\x0d" "set_antialias")
QDEF1(MP_QSTR_set_apply_cb, (const byte*)"\xd2\xd2\x0c" "set_apply_cb")
QDEF1(MP_QSTR_set_arc_color, (const byte*)"\xea\x96\x0d" "set_arc_color")
QDEF1(MP_QSTR_set_arc_color_filtered, (const byte*)"\x34\x3c\x16" "set_arc_color_filtered")
QDEF1(MP_QSTR_set_arc_img_src, (const byte*)"\x49\xe6\x0f" "set_arc_img_src")
QDEF1(MP_QSTR_set_arc_opa, (const byte*)"\xe9\x0f\x0b" "set_arc_opa")
QDEF1(MP_QSTR_set_arc_rounded, (const byte*)"\xb4\x4c\x0f" "set_arc_rounded")
QDEF1(MP_QSTR_set_arc_width, (const byte*)"\x51\x09\x0d" "set_arc_width")
QDEF1(MP_QSTR_set_axis_tick, (const byte*)"\x51\x68\x0d" "set_axis_tick")
QDEF1(MP_QSTR_set_base_dir, (const byte*)"\xcd\xbd\x0c" "set_base_dir")
QDEF1(MP_QSTR_set_bg_angles, (const byte*)"\x90\x5d\x0d" "set_bg_angles")
QDEF1(MP_QSTR_set_bg_color, (const byte*)"\x5f\xd5\x0c" "set_bg_color")
QDEF1(MP_QSTR_set_bg_color_filtered, (const byte*)"\x21\xe2\x15" "set_bg_color_filtered")
QDEF1(MP_QSTR_set_bg_end_angle, (const byte*)"\x93\x27\x10" "set_bg_end_angle")
QDEF1(MP_QSTR_set_bg_grad_color, (const byte*)"\x30\x1e\x11" "set_bg_grad_color")
QDEF1(MP_QSTR_set_bg_grad_color_filtered, (const byte*)"\xae\x09\x1a" "set_bg_grad_color_filtered")
QDEF1(MP_QSTR_set_bg_grad_dir, (const byte*)"\x52\xb8\x0f" "set_bg_grad_dir")
QDEF1(MP_QSTR_set_bg_grad_stop, (const byte*)"\x35\xfc\x10" "set_bg_grad_stop")
QDEF1(MP_QSTR_set_bg_image, (const byte*)"\xc5\x79\x0c" "set_bg_image")
QDEF1(MP_QSTR_set_bg_img_opa, (const byte*)"\x60\x9c\x0e" "set_bg_img_opa")
QDEF1(MP_QSTR_set_bg_img_recolor, (const byte*)"\xd4\xe0\x12" "set_bg_img_recolor")
QDEF1(MP_QSTR_set_bg_img_recolor_filtered, (const byte*)"\x4a\xc1\x1b" "set_bg_img_recolor_filtered")
QDEF1(MP_QSTR_set_bg_img_recolor_opa, (const byte*)"\x15\x7b\x16" "set_bg_img_recolor_opa")
QDEF1(MP_QSTR_set_bg_img_src, (const byte*)"\x3c\x8f\x0e" "set_bg_img_src")
QDEF1(MP_QSTR_set_bg_img_tiled, (const byte*)"\xee\x8a\x10" "set_bg_img_tiled")
QDEF1(MP_QSTR_set_bg_main_stop, (const byte*)"\x8e\xd0\x10" "set_bg_main_stop")
QDEF1(MP_QSTR_set_bg_opa, (const byte*)"\x5c\xa3\x0a" "set_bg_opa")
QDEF1(MP_QSTR_set_bg_start_angle, (const byte*)"\x1c\x92\x12" "set_bg_start_angle")
QDEF1(MP_QSTR_set_blend_mode, (const byte*)"\xa5\x51\x0e" "set_blend_mode")
QDEF1(MP_QSTR_set_border_color, (const byte*)"\x76\x96\x10" "set_border_color")
QDEF1(MP_QSTR_set_border_color_filtered, (const byte*)"\x28\xeb\x19" "set_border_color_filtered")
QDEF1(MP_QSTR_set_border_opa, (const byte*)"\x75\x46\x0e" "set_border_opa")
QDEF1(MP_QSTR_set_border_post, (const byte*)"\x53\x56\x0f" "set_border_post")
QDEF1(MP_QSTR_set_border_side, (const byte*)"\x90\xa2\x0f" "set_border_side")
QDEF1(MP_QSTR_set_border_width, (const byte*)"\xcd\x33\x10" "set_border_width")
QDEF1(MP_QSTR_set_brightness, (const byte*)"\x91\xbe\x0e" "set_brightness")
QDEF1(MP_QSTR_set_btn_ctrl, (const byte*)"\x16\x83\x0c" "set_btn_ctrl")
QDEF1(MP_QSTR_set_btn_ctrl_all, (const byte*)"\x48\x64\x10" "set_btn_ctrl_all")
QDEF1(MP_QSTR_set_btn_width, (const byte*)"\x19\xe3\x0d" "set_btn_width")
QDEF1(MP_QSTR_set_buffer, (const byte*)"\x78\x0c\x0a" "set_buffer")
QDEF1(MP_QSTR_set_button_points, (const byte*)"\xce\xa8\x11" "set_button_points")
QDEF1(MP_QSTR_set_cb, (const byte*)"\xf9\xe6\x06" "set_cb")
QDEF1(MP_QSTR_set_cell_value, (const byte*)"\x6a\x7c\x0e" "set_cell_value")
QDEF1(MP_QSTR_set_change_rate, (const byte*)"\xe3\x47\x0f" "set_change_rate")
QDEF1(MP_QSTR_set_clip_corner, (const byte*)"\xd6\xb1\x0f" "set_clip_corner")
QDEF1(MP_QSTR_set_close_cb, (const byte*)"\x30\x2c\x0c" "set_close_cb")
QDEF1(MP_QSTR_set_col_cnt, (const byte*)"\x9e\xce\x0b" "set_col_cnt")
QDEF1(MP_QSTR_set_col_width, (const byte*)"\xa1\x7e\x0d" "set_col_width")
QDEF1(MP_QSTR_set_color, (const byte*)"\x25\x77\x09" "set_color")
QDEF1(MP_QSTR_set_color_filter_dsc, (const byte*)"\xd1\x75\x14" "set_color_filter_dsc")
QDEF1(MP_QSTR_set_color_filter_opa, (const byte*)"\xfb\x93\x14" "set_color_filter_opa")
QDEF1(MP_QSTR_set_content_height, (const byte*)"\x51\xab\x12" "set_content_height")
QDEF1(MP_QSTR_set_content_width, (const byte*)"\x28\xca\x11" "set_content_width")
QDEF1(MP_QSTR_set_cover_res, (const byte*)"\x4e\x15\x0d" "set_cover_res")
QDEF1(MP_QSTR_set_ctrl_map, (const byte*)"\xd2\xa4\x0c" "set_ctrl_map")
QDEF1(MP_QSTR_set_cursor, (const byte*)"\x12\x32\x0a" "set_cursor")
QDEF1(MP_QSTR_set_cursor_click_pos, (const byte*)"\xd0\x8c\x14" "set_cursor_click_pos")
QDEF1(MP_QSTR_set_cursor_point, (const byte*)"\xe1\x99\x10" "set_cursor_point")
QDEF1(MP_QSTR_set_cursor_pos, (const byte*)"\x21\xd3\x0e" "set_cursor_pos")
QDEF1(MP_QSTR_set_custom_exec_cb, (const byte*)"\xd1\x85\x12" "set_custom_exec_cb")
QDEF1(MP_QSTR_set_data, (const byte*)"\x48\x03\x08" "set_data")
QDEF1(MP_QSTR_set_day_names, (const byte*)"\x0f\x0a\x0d" "set_day_names")
QDEF1(MP_QSTR_set_default, (const byte*)"\x33\x7b\x0b" "set_default")
QDEF1(MP_QSTR_set_delay, (const byte*)"\xad\x7e\x09" "set_delay")
QDEF1(MP_QSTR_set_digit_format, (const byte*)"\x73\x5b\x10" "set_digit_format")
QDEF1(MP_QSTR_set_digit_step_direction, (const byte*)"\xf8\xae\x18" "set_digit_step_direction")
QDEF1(MP_QSTR_set_dir, (const byte*)"\x07\xc1\x07" "set_dir")
QDEF1(MP_QSTR_set_div_line_count, (const byte*)"\x4e\xf5\x12" "set_div_line_count")
QDEF1(MP_QSTR_set_duration, (const byte*)"\xe6\x8c\x0c" "set_duration")
QDEF1(MP_QSTR_set_early_apply, (const byte*)"\x10\x71\x0f" "set_early_apply")
QDEF1(MP_QSTR_set_editing, (const byte*)"\x64\xa6\x0b" "set_editing")
QDEF1(MP_QSTR_set_end_angle, (const byte*)"\x29\x65\x0d" "set_end_angle")
QDEF1(MP_QSTR_set_exec_cb, (const byte*)"\x9d\xea\x0b" "set_exec_cb")
QDEF1(MP_QSTR_set_ext_click_area, (const byte*)"\x08\xd8\x12" "set_ext_click_area")
QDEF1(MP_QSTR_set_ext_draw_size, (const byte*)"\x94\x26\x11" "set_ext_draw_size")
QDEF1(MP_QSTR_set_ext_x_array, (const byte*)"\xd0\x3c\x0f" "set_ext_x_array")
QDEF1(MP_QSTR_set_ext_y_array, (const byte*)"\x91\xa9\x0f" "set_ext_y_array")
QDEF1(MP_QSTR_set_flex_align, (const byte*)"\x9d\xae\x0e" "set_flex_align")
QDEF1(MP_QSTR_set_flex_cross_place, (const byte*)"\x2a\xb8\x14" "set_flex_cross_place")
QDEF1(MP_QSTR_set_flex_flow, (const byte*)"\x62\xa9\x0d" "set_flex_flow")
QDEF1(MP_QSTR_set_flex_grow, (const byte*)"\x1d\xb8\x0d" "set_flex_grow")
QDEF1(MP_QSTR_set_flex_main_place, (const byte*)"\xff\x39\x13" "set_flex_main_place")
QDEF1(MP_QSTR_set_flex_track_place, (const byte*)"\x3b\xfc\x14" "set_flex_track_place")
QDEF1(MP_QSTR_set_focus_cb, (const byte*)"\x4a\xa9\x0c" "set_focus_cb")
QDEF1(MP_QSTR_set_font_path, (const byte*)"\xf9\xc8\x0d" "set_font_path")
QDEF1(MP_QSTR_set_get_value_cb, (const byte*)"\xe4\x60\x10" "set_get_value_cb")
QDEF1(MP_QSTR_set_grid_align, (const byte*)"\x32\x6f\x0e" "set_grid_align")
QDEF1(MP_QSTR_set_grid_cell, (const byte*)"\xb9\xd6\x0d" "set_grid_cell")
QDEF1(MP_QSTR_set_grid_cell_column_pos, (const byte*)"\xe3\x2f\x18" "set_grid_cell_column_pos")
QDEF1(MP_QSTR_set_grid_cell_column_span, (const byte*)"\xc3\x9c\x19" "set_grid_cell_column_span")
QDEF1(MP_QSTR_set_grid_cell_row_pos, (const byte*)"\x7f\xdd\x15" "set_grid_cell_row_pos")
QDEF1(MP_QSTR_set_grid_cell_row_span, (const byte*)"\xdf\x1b\x16" "set_grid_cell_row_span")
QDEF1(MP_QSTR_set_grid_cell_x_align, (const byte*)"\x8c\x1f\x15" "set_grid_cell_x_align")
QDEF1(MP_QSTR_set_grid_cell_y_align, (const byte*)"\xcd\x74\x15" "set_grid_cell_y_align")
QDEF1(MP_QSTR_set_grid_column_align, (const byte*)"\x7b\xc5\x15" "set_grid_column_align")
QDEF1(MP_QSTR_set_grid_column_dsc_array, (const byte*)"\x84\x9c\x19" "set_grid_column_dsc_array")
QDEF1(MP_QSTR_set_grid_dsc_array, (const byte*)"\x0d\xcb\x12" "set_grid_dsc_array")
QDEF1(MP_QSTR_set_grid_row_align, (const byte*)"\xc7\x77\x12" "set_grid_row_align")
QDEF1(MP_QSTR_set_grid_row_dsc_array, (const byte*)"\x38\x66\x16" "set_grid_row_dsc_array")
QDEF1(MP_QSTR_set_group, (const byte*)"\xc7\xbc\x09" "set_group")
QDEF1(MP_QSTR_set_header, (const byte*)"\xc7\xd2\x0a" "set_header")
QDEF1(MP_QSTR_set_height, (const byte*)"\x67\x49\x0a" "set_height")
QDEF1(MP_QSTR_set_highlighted_dates, (const byte*)"\x11\xcd\x15" "set_highlighted_dates")
QDEF1(MP_QSTR_set_hsv, (const byte*)"\xd5\x8d\x07" "set_hsv")
QDEF1(MP_QSTR_set_icc, (const byte*)"\x11\x8b\x07" "set_icc")
QDEF1(MP_QSTR_set_img_opa, (const byte*)"\x9a\x78\x0b" "set_img_opa")
QDEF1(MP_QSTR_set_img_recolor, (const byte*)"\xee\xe4\x0f" "set_img_recolor")
QDEF1(MP_QSTR_set_img_recolor_filtered, (const byte*)"\xb0\xca\x18" "set_img_recolor_filtered")
QDEF1(MP_QSTR_set_img_recolor_opa, (const byte*)"\x6f\x3b\x13" "set_img_recolor_opa")
QDEF1(MP_QSTR_set_indent, (const byte*)"\x64\x56\x0a" "set_indent")
QDEF1(MP_QSTR_set_indicator_end_value, (const byte*)"\x9d\xa6\x17" "set_indicator_end_value")
QDEF1(MP_QSTR_set_indicator_start_value, (const byte*)"\x92\x02\x19" "set_indicator_start_value")
QDEF1(MP_QSTR_set_indicator_value, (const byte*)"\x8d\x19\x13" "set_indicator_value")
QDEF1(MP_QSTR_set_info_cb, (const byte*)"\xc8\x86\x0b" "set_info_cb")
QDEF1(MP_QSTR_set_insert_replace, (const byte*)"\x1c\x85\x12" "set_insert_replace")
QDEF1(MP_QSTR_set_layout, (const byte*)"\x82\xa4\x0a" "set_layout")
QDEF1(MP_QSTR_set_left_value, (const byte*)"\x57\x94\x0e" "set_left_value")
QDEF1(MP_QSTR_set_line_color, (const byte*)"\xd4\xc7\x0e" "set_line_color")
QDEF1(MP_QSTR_set_line_color_filtered, (const byte*)"\x4a\x88\x17" "set_line_color_filtered")
QDEF1(MP_QSTR_set_line_dash_gap, (const byte*)"\xde\x75\x11" "set_line_dash_gap")
QDEF1(MP_QSTR_set_line_dash_width, (const byte*)"\x4e\x40\x13" "set_line_dash_width")
QDEF1(MP_QSTR_set_line_opa, (const byte*)"\xd7\xae\x0c" "set_line_opa")
QDEF1(MP_QSTR_set_line_rounded, (const byte*)"\x8a\x09\x10" "set_line_rounded")
QDEF1(MP_QSTR_set_line_width, (const byte*)"\x2f\x55\x0e" "set_line_width")
QDEF1(MP_QSTR_set_local_style_prop, (const byte*)"\x3f\xc4\x14" "set_local_style_prop")
QDEF1(MP_QSTR_set_long_mode, (const byte*)"\xae\x6a\x0d" "set_long_mode")
QDEF1(MP_QSTR_set_map, (const byte*)"\x44\x9c\x07" "set_map")
QDEF1(MP_QSTR_set_max_height, (const byte*)"\x6c\xf6\x0e" "set_max_height")
QDEF1(MP_QSTR_set_max_length, (const byte*)"\x4f\x78\x0e" "set_max_length")
QDEF1(MP_QSTR_set_max_width, (const byte*)"\xf5\x23\x0d" "set_max_width")
QDEF1(MP_QSTR_set_min_height, (const byte*)"\xb2\x24\x0e" "set_min_height")
QDEF1(MP_QSTR_set_min_width, (const byte*)"\x6b\x7e\x0d" "set_min_width")
QDEF1(MP_QSTR_set_mode, (const byte*)"\x3b\x30\x08" "set_mode")
QDEF1(MP_QSTR_set_mode_fixed, (const byte*)"\xb2\x39\x0e" "set_mode_fixed")
QDEF1(MP_QSTR_set_next_value, (const byte*)"\xcb\x1f\x0e" "set_next_value")
QDEF1(MP_QSTR_set_next_value2, (const byte*)"\x19\x19\x0f" "set_next_value2")
QDEF1(MP_QSTR_set_offset_x, (const byte*)"\x52\x30\x0c" "set_offset_x")
QDEF1(MP_QSTR_set_offset_y, (const byte*)"\x53\x30\x0c" "set_offset_y")
QDEF1(MP_QSTR_set_one_checked, (const byte*)"\x64\x3b\x0f" "set_one_checked")
QDEF1(MP_QSTR_set_one_line, (const byte*)"\x6d\xcd\x0c" "set_one_line")
QDEF1(MP_QSTR_set_opa, (const byte*)"\x26\xb3\x07" "set_opa")
QDEF1(MP_QSTR_set_open_cb, (const byte*)"\x32\x7d\x0b" "set_open_cb")
QDEF1(MP_QSTR_set_options, (const byte*)"\x88\xf6\x0b" "set_options")
QDEF1(MP_QSTR_set_options_static, (const byte*)"\x2f\x85\x12" "set_options_static")
QDEF1(MP_QSTR_set_outline_color, (const byte*)"\x5a\x6f\x11" "set_outline_color")
QDEF1(MP_QSTR_set_outline_color_filtered, (const byte*)"\x84\x7a\x1a" "set_outline_color_filtered")
QDEF1(MP_QSTR_set_outline_opa, (const byte*)"\x59\x8f\x0f" "set_outline_opa")
QDEF1(MP_QSTR_set_outline_pad, (const byte*)"\x72\xd5\x0f" "set_outline_pad")
QDEF1(MP_QSTR_set_outline_width, (const byte*)"\xa1\xac\x11" "set_outline_width")
QDEF1(MP_QSTR_set_overflow, (const byte*)"\xe4\x89\x0c" "set_overflow")
QDEF1(MP_QSTR_set_pad_all, (const byte*)"\xd3\x93\x0b" "set_pad_all")
QDEF1(MP_QSTR_set_pad_bottom, (const byte*)"\x9d\xa2\x0e" "set_pad_bottom")
QDEF1(MP_QSTR_set_pad_column, (const byte*)"\x24\x02\x0e" "set_pad_column")
QDEF1(MP_QSTR_set_pad_gap, (const byte*)"\x64\x8a\x0b" "set_pad_gap")
QDEF1(MP_QSTR_set_pad_hor, (const byte*)"\xe7\xb7\x0b" "set_pad_hor")
QDEF1(MP_QSTR_set_pad_left, (const byte*)"\x29\xe0\x0c" "set_pad_left")
QDEF1(MP_QSTR_set_pad_right, (const byte*)"\x32\x70\x0d" "set_pad_right")
QDEF1(MP_QSTR_set_pad_row, (const byte*)"\x78\x3b\x0b" "set_pad_row")
QDEF1(MP_QSTR_set_pad_top, (const byte*)"\xf9\x63\x0b" "set_pad_top")
QDEF1(MP_QSTR_set_pad_ver, (const byte*)"\xb3\x49\x0b" "set_pad_ver")
QDEF1(MP_QSTR_set_palette, (const byte*)"\x25\x04\x0b" "set_palette")
QDEF1(MP_QSTR_set_parent, (const byte*)"\xc4\x89\x0a" "set_parent")
QDEF1(MP_QSTR_set_password_mode, (const byte*)"\x5b\xed\x11" "set_password_mode")
QDEF1(MP_QSTR_set_password_show_time, (const byte*)"\x31\xed\x16" "set_password_show_time")
QDEF1(MP_QSTR_set_path_cb, (const byte*)"\x4b\x91\x0b" "set_path_cb")
QDEF1(MP_QSTR_set_period, (const byte*)"\xbd\xba\x0a" "set_period")
QDEF1(MP_QSTR_set_pivot, (const byte*)"\xec\xc1\x09" "set_pivot")
QDEF1(MP_QSTR_set_placeholder_text, (const byte*)"\x19\x4d\x14" "set_placeholder_text")
QDEF1(MP_QSTR_set_playback_delay, (const byte*)"\x9d\xac\x12" "set_playback_delay")
QDEF1(MP_QSTR_set_playback_time, (const byte*)"\x9d\x55\x11" "set_playback_time")
QDEF1(MP_QSTR_set_point_count, (const byte*)"\x28\x37\x0f" "set_point_count")
QDEF1(MP_QSTR_set_points, (const byte*)"\xe7\x65\x0a" "set_points")
QDEF1(MP_QSTR_set_popovers, (const byte*)"\xca\xcc\x0c" "set_popovers")
QDEF1(MP_QSTR_set_pos, (const byte*)"\x54\x6d\x07" "set_pos")
QDEF1(MP_QSTR_set_prop, (const byte*)"\xe5\x6e\x08" "set_prop")
QDEF1(MP_QSTR_set_px, (const byte*)"\x50\xe4\x06" "set_px")
QDEF1(MP_QSTR_set_px_cb, (const byte*)"\x6e\x21\x09" "set_px_cb")
QDEF1(MP_QSTR_set_px_color, (const byte*)"\x92\x7f\x0c" "set_px_color")
QDEF1(MP_QSTR_set_px_opa, (const byte*)"\x91\x1d\x0a" "set_px_opa")
QDEF1(MP_QSTR_set_radius, (const byte*)"\xe0\xbd\x0a" "set_radius")
QDEF1(MP_QSTR_set_range, (const byte*)"\x67\xbe\x09" "set_range")
QDEF1(MP_QSTR_set_read_line_cb, (const byte*)"\xa5\x68\x10" "set_read_line_cb")
QDEF1(MP_QSTR_set_ready_cb, (const byte*)"\xcd\xbd\x0c" "set_ready_cb")
QDEF1(MP_QSTR_set_recolor, (const byte*)"\x92\xb5\x0b" "set_recolor")
QDEF1(MP_QSTR_set_refocus_policy, (const byte*)"\x5c\x13\x12" "set_refocus_policy")
QDEF1(MP_QSTR_set_repeat_count, (const byte*)"\x13\xc3\x10" "set_repeat_count")
QDEF1(MP_QSTR_set_repeat_delay, (const byte*)"\x65\xb3\x10" "set_repeat_delay")
QDEF1(MP_QSTR_set_rgb, (const byte*)"\xcf\x65\x07" "set_rgb")
QDEF1(MP_QSTR_set_rollover, (const byte*)"\x4b\x5a\x0c" "set_rollover")
QDEF1(MP_QSTR_set_rotation, (const byte*)"\x6c\x67\x0c" "set_rotation")
QDEF1(MP_QSTR_set_row_cnt, (const byte*)"\x54\x3e\x0b" "set_row_cnt")
QDEF1(MP_QSTR_set_scale_major_ticks, (const byte*)"\xdd\xf7\x15" "set_scale_major_ticks")
QDEF1(MP_QSTR_set_scale_range, (const byte*)"\x00\xf7\x0f" "set_scale_range")
QDEF1(MP_QSTR_set_scale_ticks, (const byte*)"\x59\xc3\x0f" "set_scale_ticks")
QDEF1(MP_QSTR_set_scroll_dir, (const byte*)"\x95\x1f\x0e" "set_scroll_dir")
QDEF1(MP_QSTR_set_scroll_snap_x, (const byte*)"\x81\x2a\x11" "set_scroll_snap_x")
QDEF1(MP_QSTR_set_scroll_snap_y, (const byte*)"\x80\x2a\x11" "set_scroll_snap_y")
QDEF1(MP_QSTR_set_scrollbar_mode, (const byte*)"\x38\x1b\x12" "set_scrollbar_mode")
QDEF1(MP_QSTR_set_selected, (const byte*)"\x31\xbd\x0c" "set_selected")
QDEF1(MP_QSTR_set_selected_btn, (const byte*)"\x36\xa5\x10" "set_selected_btn")
QDEF1(MP_QSTR_set_selected_highlight, (const byte*)"\x7e\x8c\x16" "set_selected_highlight")
QDEF1(MP_QSTR_set_series_color, (const byte*)"\x81\x19\x10" "set_series_color")
QDEF1(MP_QSTR_set_shadow_color, (const byte*)"\x3c\x85\x10" "set_shadow_color")
QDEF1(MP_QSTR_set_shadow_color_filtered, (const byte*)"\x22\x8c\x19" "set_shadow_color_filtered")
QDEF1(MP_QSTR_set_shadow_ofs_x, (const byte*)"\xfc\xec\x10" "set_shadow_ofs_x")
QDEF1(MP_QSTR_set_shadow_ofs_y, (const byte*)"\xfd\xec\x10" "set_shadow_ofs_y")
QDEF1(MP_QSTR_set_shadow_opa, (const byte*)"\x3f\xcf\x0e" "set_shadow_opa")
QDEF1(MP_QSTR_set_shadow_spread, (const byte*)"\x70\x3f\x11" "set_shadow_spread")
QDEF1(MP_QSTR_set_shadow_width, (const byte*)"\x87\x54\x10" "set_shadow_width")
QDEF1(MP_QSTR_set_showed_date, (const byte*)"\xf1\x05\x0f" "set_showed_date")
QDEF1(MP_QSTR_set_size, (const byte*)"\x3d\xac\x08" "set_size")
QDEF1(MP_QSTR_set_size_mode, (const byte*)"\x61\x06\x0d" "set_size_mode")
QDEF1(MP_QSTR_set_src, (const byte*)"\x7a\x84\x07" "set_src")
QDEF1(MP_QSTR_set_start_angle, (const byte*)"\x26\xba\x0f" "set_start_angle")
QDEF1(MP_QSTR_set_start_cb, (const byte*)"\x06\x2e\x0c" "set_start_cb")
QDEF1(MP_QSTR_set_start_value, (const byte*)"\x6c\x3f\x0f" "set_start_value")
QDEF1(MP_QSTR_set_state, (const byte*)"\x2f\x9d\x09" "set_state")
QDEF1(MP_QSTR_set_step, (const byte*)"\x8a\x1b\x08" "set_step")
QDEF1(MP_QSTR_set_style_align, (const byte*)"\xdd\x98\x0f" "set_style_align")
QDEF1(MP_QSTR_set_style_anim_speed, (const byte*)"\x63\xc7\x14" "set_style_anim_speed")
QDEF1(MP_QSTR_set_style_anim_time, (const byte*)"\x11\x5f\x13" "set_style_anim_time")
QDEF1(MP_QSTR_set_style_arc_color, (const byte*)"\xe2\x9f\x13" "set_style_arc_color")
QDEF1(MP_QSTR_set_style_arc_color_filtered, (const byte*)"\x3c\xaa\x1c" "set_style_arc_color_filtered")
QDEF1(MP_QSTR_set_style_arc_img_src, (const byte*)"\x41\xcd\x15" "set_style_arc_img_src")
QDEF1(MP_QSTR_set_style_arc_opa, (const byte*)"\xe1\x76\x11" "set_style_arc_opa")
QDEF1(MP_QSTR_set_style_arc_rounded, (const byte*)"\xbc\x77\x15" "set_style_arc_rounded")
QDEF1(MP_QSTR_set_style_arc_width, (const byte*)"\x59\xd0\x13" "set_style_arc_width")
QDEF1(MP_QSTR_set_style_base_dir, (const byte*)"\xc5\x05\x12" "set_style_base_dir")
QDEF1(MP_QSTR_set_style_bg_color, (const byte*)"\x57\x5f\x12" "set_style_bg_color")
QDEF1(MP_QSTR_set_style_bg_color_filtered, (const byte*)"\x29\xf1\x1b" "set_style_bg_color_filtered")
QDEF1(MP_QSTR_set_style_bg_grad_color, (const byte*)"\x38\x2b\x17" "set_style_bg_grad_color")
QDEF1(MP_QSTR_set_style_bg_grad_color_filtered, (const byte*)"\xa6\x71\x20" "set_style_bg_grad_color_filtered")
QDEF1(MP_QSTR_set_style_bg_grad_dir, (const byte*)"\x5a\xa5\x15" "set_style_bg_grad_dir")
QDEF1(MP_QSTR_set_style_bg_grad_stop, (const byte*)"\x3d\x48\x16" "set_style_bg_grad_stop")
QDEF1(MP_QSTR_set_style_bg_img_opa, (const byte*)"\x68\x88\x14" "set_style_bg_img_opa")
QDEF1(MP_QSTR_set_style_bg_img_recolor, (const byte*)"\xdc\x48\x18" "set_style_bg_img_recolor")
QDEF1(MP_QSTR_set_style_bg_img_recolor_filtered, (const byte*)"\x42\xe4\x21" "set_style_bg_img_recolor_filtered")
QDEF1(MP_QSTR_set_style_bg_img_recolor_opa, (const byte*)"\x1d\x25\x1c" "set_style_bg_img_recolor_opa")
QDEF1(MP_QSTR_set_style_bg_img_src, (const byte*)"\x34\x37\x14" "set_style_bg_img_src")
QDEF1(MP_QSTR_set_style_bg_img_tiled, (const byte*)"\xe6\x92\x16" "set_style_bg_img_tiled")
QDEF1(MP_QSTR_set_style_bg_main_stop, (const byte*)"\x86\x5a\x16" "set_style_bg_main_stop")
QDEF1(MP_QSTR_set_style_bg_opa, (const byte*)"\x54\x4b\x10" "set_style_bg_opa")
QDEF1(MP_QSTR_set_style_blend_mode, (const byte*)"\xad\xfd\x14" "set_style_blend_mode")
QDEF1(MP_QSTR_set_style_border_color, (const byte*)"\x7e\xa4\x16" "set_style_border_color")
QDEF1(MP_QSTR_set_style_border_color_filtered, (const byte*)"\x20\x74\x1f" "set_style_border_color_filtered")
QDEF1(MP_QSTR_set_style_border_opa, (const byte*)"\x7d\x36\x14" "set_style_border_opa")
QDEF1(MP_QSTR_set_style_border_post, (const byte*)"\x5b\xc5\x15" "set_style_border_post")
QDEF1(MP_QSTR_set_style_border_side, (const byte*)"\x98\x11\x15" "set_style_border_side")
QDEF1(MP_QSTR_set_style_border_width, (const byte*)"\xc5\x83\x16" "set_style_border_width")
QDEF1(MP_QSTR_set_style_clip_corner, (const byte*)"\xde\xdc\x15" "set_style_clip_corner")
QDEF1(MP_QSTR_set_style_color_filter_dsc, (const byte*)"\xd9\x7f\x1a" "set_style_color_filter_dsc")
QDEF1(MP_QSTR_set_style_color_filter_opa, (const byte*)"\xf3\x59\x1a" "set_style_color_filter_opa")
QDEF1(MP_QSTR_set_style_flex_cross_place, (const byte*)"\x22\x82\x1a" "set_style_flex_cross_place")
QDEF1(MP_QSTR_set_style_flex_flow, (const byte*)"\x6a\xb6\x13" "set_style_flex_flow")
QDEF1(MP_QSTR_set_style_flex_grow, (const byte*)"\x15\x05\x13" "set_style_flex_grow")
QDEF1(MP_QSTR_set_style_flex_main_place, (const byte*)"\xf7\xe2\x19" "set_style_flex_main_place")
QDEF1(MP_QSTR_set_style_flex_track_place, (const byte*)"\x33\x0a\x1a" "set_style_flex_track_place")
QDEF1(MP_QSTR_set_style_grid_cell_column_pos, (const byte*)"\xeb\xb9\x1e" "set_style_grid_cell_column_pos")
QDEF1(MP_QSTR_set_style_grid_cell_column_span, (const byte*)"\xcb\x23\x1f" "set_style_grid_cell_column_span")
QDEF1(MP_QSTR_set_style_grid_cell_row_pos, (const byte*)"\x77\x26\x1b" "set_style_grid_cell_row_pos")
QDEF1(MP_QSTR_set_style_grid_cell_row_span, (const byte*)"\xd7\xc7\x1c" "set_style_grid_cell_row_span")
QDEF1(MP_QSTR_set_style_grid_cell_x_align, (const byte*)"\x84\x6a\x1b" "set_style_grid_cell_x_align")
QDEF1(MP_QSTR_set_style_grid_cell_y_align, (const byte*)"\xc5\xbf\x1b" "set_style_grid_cell_y_align")
QDEF1(MP_QSTR_set_style_grid_column_align, (const byte*)"\x73\x50\x1b" "set_style_grid_column_align")
QDEF1(MP_QSTR_set_style_grid_column_dsc_array, (const byte*)"\x8c\x63\x1f" "set_style_grid_column_dsc_array")
QDEF1(MP_QSTR_set_style_grid_row_align, (const byte*)"\xcf\x1f\x18" "set_style_grid_row_align")
QDEF1(MP_QSTR_set_style_grid_row_dsc_array, (const byte*)"\x30\x52\x1c" "set_style_grid_row_dsc_array")
QDEF1(MP_QSTR_set_style_height, (const byte*)"\x6f\x35\x10" "set_style_height")
QDEF1(MP_QSTR_set_style_img_opa, (const byte*)"\x92\x21\x11" "set_style_img_opa")
QDEF1(MP_QSTR_set_style_img_recolor, (const byte*)"\xe6\x91\x15" "set_style_img_recolor")
QDEF1(MP_QSTR_set_style_img_recolor_filtered, (const byte*)"\xb8\x5c\x1e" "set_style_img_recolor_filtered")
QDEF1(MP_QSTR_set_style_img_recolor_opa, (const byte*)"\x67\x26\x19" "set_style_img_recolor_opa")
QDEF1(MP_QSTR_set_style_layout, (const byte*)"\x8a\xd2\x10" "set_style_layout")
QDEF1(MP_QSTR_set_style_line_color, (const byte*)"\xdc\x73\x14" "set_style_line_color")
QDEF1(MP_QSTR_set_style_line_color_filtered, (const byte*)"\x42\x6f\x1d" "set_style_line_color_filtered")
QDEF1(MP_QSTR_set_style_line_dash_gap, (const byte*)"\xd6\xfc\x17" "set_style_line_dash_gap")
QDEF1(MP_QSTR_set_style_line_dash_width, (const byte*)"\x46\x2b\x19" "set_style_line_dash_width")
QDEF1(MP_QSTR_set_style_line_opa, (const byte*)"\xdf\xbc\x12" "set_style_line_opa")
QDEF1(MP_QSTR_set_style_line_rounded, (const byte*)"\x82\xd3\x16" "set_style_line_rounded")
QDEF1(MP_QSTR_set_style_line_width, (const byte*)"\x27\x43\x14" "set_style_line_width")
QDEF1(MP_QSTR_set_style_max_height, (const byte*)"\x64\x22\x14" "set_style_max_height")
QDEF1(MP_QSTR_set_style_max_width, (const byte*)"\xfd\x2e\x13" "set_style_max_width")
QDEF1(MP_QSTR_set_style_min_height, (const byte*)"\xba\xd0\x14" "set_style_min_height")
QDEF1(MP_QSTR_set_style_min_width, (const byte*)"\x63\x4b\x13" "set_style_min_width")
QDEF1(MP_QSTR_set_style_opa, (const byte*)"\x2e\x20\x0d" "set_style_opa")
QDEF1(MP_QSTR_set_style_outline_color, (const byte*)"\x52\x7c\x17" "set_style_outline_color")
QDEF1(MP_QSTR_set_style_outline_color_filtered, (const byte*)"\x8c\x6c\x20" "set_style_outline_color_filtered")
QDEF1(MP_QSTR_set_style_outline_opa, (const byte*)"\x51\xfa\x15" "set_style_outline_opa")
QDEF1(MP_QSTR_set_style_outline_pad, (const byte*)"\x7a\x84\x15" "set_style_outline_pad")
QDEF1(MP_QSTR_set_style_outline_width, (const byte*)"\xa9\x77\x17" "set_style_outline_width")
QDEF1(MP_QSTR_set_style_pad_all, (const byte*)"\xdb\x3c\x11" "set_style_pad_all")
QDEF1(MP_QSTR_set_style_pad_bottom, (const byte*)"\x95\x4a\x14" "set_style_pad_bottom")
QDEF1(MP_QSTR_set_style_pad_column, (const byte*)"\x2c\x6c\x14" "set_style_pad_column")
QDEF1(MP_QSTR_set_style_pad_gap, (const byte*)"\x6c\x35\x11" "set_style_pad_gap")
QDEF1(MP_QSTR_set_style_pad_hor, (const byte*)"\xef\x20\x11" "set_style_pad_hor")
QDEF1(MP_QSTR_set_style_pad_left, (const byte*)"\x21\x26\x12" "set_style_pad_left")
QDEF1(MP_QSTR_set_style_pad_right, (const byte*)"\x3a\x39\x13" "set_style_pad_right")
QDEF1(MP_QSTR_set_style_pad_row, (const byte*)"\x70\xe4\x11" "set_style_pad_row")
QDEF1(MP_QSTR_set_style_pad_top, (const byte*)"\xf1\x0c\x11" "set_style_pad_top")
QDEF1(MP_QSTR_set_style_pad_ver, (const byte*)"\xbb\xf4\x11" "set_style_pad_ver")
QDEF1(MP_QSTR_set_style_radius, (const byte*)"\xe8\x27\x10" "set_style_radius")
QDEF1(MP_QSTR_set_style_shadow_color, (const byte*)"\x34\x51\x16" "set_style_shadow_color")
QDEF1(MP_QSTR_set_style_shadow_color_filtered, (const byte*)"\x2a\x1d\x1f" "set_style_shadow_color_filtered")
QDEF1(MP_QSTR_set_style_shadow_ofs_x, (const byte*)"\xf4\xb6\x16" "set_style_shadow_ofs_x")
QDEF1(MP_QSTR_set_style_shadow_ofs_y, (const byte*)"\xf5\xb6\x16" "set_style_shadow_ofs_y")
QDEF1(MP_QSTR_set_style_shadow_opa, (const byte*)"\x37\x39\x14" "set_style_shadow_opa")
QDEF1(MP_QSTR_set_style_shadow_spread, (const byte*)"\x78\x90\x17" "set_style_shadow_spread")
QDEF1(MP_QSTR_set_style_shadow_width, (const byte*)"\x8f\xde\x16" "set_style_shadow_width")
QDEF1(MP_QSTR_set_style_size, (const byte*)"\x35\x36\x0e" "set_style_size")
QDEF1(MP_QSTR_set_style_text_align, (const byte*)"\x3f\x97\x14" "set_style_text_align")
QDEF1(MP_QSTR_set_style_text_color, (const byte*)"\x0f\x51\x14" "set_style_text_color")
QDEF1(MP_QSTR_set_style_text_color_filtered, (const byte*)"\x71\x1c\x1d" "set_style_text_color_filtered")
QDEF1(MP_QSTR_set_style_text_decor, (const byte*)"\x8d\x03\x14" "set_style_text_decor")
QDEF1(MP_QSTR_set_style_text_font, (const byte*)"\xa1\x21\x13" "set_style_text_font")
QDEF1(MP_QSTR_set_style_text_letter_space, (const byte*)"\xf7\xdf\x1b" "set_style_text_letter_space")
QDEF1(MP_QSTR_set_style_text_line_space, (const byte*)"\x47\x8e\x19" "set_style_text_line_space")
QDEF1(MP_QSTR_set_style_text_opa, (const byte*)"\x0c\xd6\x12" "set_style_text_opa")
QDEF1(MP_QSTR_set_style_transform_angle, (const byte*)"\xe2\xb4\x19" "set_style_transform_angle")
QDEF1(MP_QSTR_set_style_transform_height, (const byte*)"\x5c\x06\x1a" "set_style_transform_height")
QDEF1(MP_QSTR_set_style_transform_width, (const byte*)"\x05\xdb\x19" "set_style_transform_width")
QDEF1(MP_QSTR_set_style_transform_zoom, (const byte*)"\x54\x1d\x18" "set_style_transform_zoom")
QDEF1(MP_QSTR_set_style_transition, (const byte*)"\xbf\x50\x14" "set_style_transition")
QDEF1(MP_QSTR_set_style_translate_x, (const byte*)"\x31\x74\x15" "set_style_translate_x")
QDEF1(MP_QSTR_set_style_translate_y, (const byte*)"\x30\x74\x15" "set_style_translate_y")
QDEF1(MP_QSTR_set_style_width, (const byte*)"\xd6\x46\x0f" "set_style_width")
QDEF1(MP_QSTR_set_style_x, (const byte*)"\x28\x8a\x0b" "set_style_x")
QDEF1(MP_QSTR_set_style_y, (const byte*)"\x29\x8a\x0b" "set_style_y")
QDEF1(MP_QSTR_set_symbol, (const byte*)"\xbe\x2c\x0a" "set_symbol")
QDEF1(MP_QSTR_set_text, (const byte*)"\xc5\x2f\x08" "set_text")
QDEF1(MP_QSTR_set_text_align, (const byte*)"\x37\xef\x0e" "set_text_align")
QDEF1(MP_QSTR_set_text_color, (const byte*)"\x07\xa7\x0e" "set_text_color")
QDEF1(MP_QSTR_set_text_color_filtered, (const byte*)"\x79\x77\x17" "set_text_color_filtered")
QDEF1(MP_QSTR_set_text_decor, (const byte*)"\x85\xdb\x0e" "set_text_decor")
QDEF1(MP_QSTR_set_text_font, (const byte*)"\xa9\x98\x0d" "set_text_font")
QDEF1(MP_QSTR_set_text_letter_space, (const byte*)"\xff\xd4\x15" "set_text_letter_space")
QDEF1(MP_QSTR_set_text_line_space, (const byte*)"\x4f\x27\x13" "set_text_line_space")
QDEF1(MP_QSTR_set_text_opa, (const byte*)"\x04\x4a\x0c" "set_text_opa")
QDEF1(MP_QSTR_set_text_sel_end, (const byte*)"\x70\x57\x10" "set_text_sel_end")
QDEF1(MP_QSTR_set_text_sel_start, (const byte*)"\xff\x9a\x12" "set_text_sel_start")
QDEF1(MP_QSTR_set_text_selection, (const byte*)"\x7a\x22\x12" "set_text_selection")
QDEF1(MP_QSTR_set_text_static, (const byte*)"\x42\xfc\x0f" "set_text_static")
QDEF1(MP_QSTR_set_textarea, (const byte*)"\x52\x42\x0c" "set_textarea")
QDEF1(MP_QSTR_set_theme, (const byte*)"\xc9\x46\x09" "set_theme")
QDEF1(MP_QSTR_set_tile, (const byte*)"\x4c\x1e\x08" "set_tile")
QDEF1(MP_QSTR_set_tile_id, (const byte*)"\xbe\x0c\x0b" "set_tile_id")
QDEF1(MP_QSTR_set_time, (const byte*)"\x6d\x1e\x08" "set_time")
QDEF1(MP_QSTR_set_today_date, (const byte*)"\x14\xa6\x0e" "set_today_date")
QDEF1(MP_QSTR_set_transform_angle, (const byte*)"\xea\x8b\x13" "set_transform_angle")
QDEF1(MP_QSTR_set_transform_height, (const byte*)"\x54\x3c\x14" "set_transform_height")
QDEF1(MP_QSTR_set_transform_width, (const byte*)"\x0d\xb0\x13" "set_transform_width")
QDEF1(MP_QSTR_set_transform_zoom, (const byte*)"\x5c\xf3\x12" "set_transform_zoom")
QDEF1(MP_QSTR_set_transition, (const byte*)"\xb7\x68\x0e" "set_transition")
QDEF1(MP_QSTR_set_translate_x, (const byte*)"\x39\x0d\x0f" "set_translate_x")
QDEF1(MP_QSTR_set_translate_y, (const byte*)"\x38\x0d\x0f" "set_translate_y")
QDEF1(MP_QSTR_set_type, (const byte*)"\xc0\x5f\x08" "set_type")
QDEF1(MP_QSTR_set_update_mode, (const byte*)"\x75\x23\x0f" "set_update_mode")
QDEF1(MP_QSTR_set_user_data, (const byte*)"\x66\x1d\x0d" "set_user_data")
QDEF1(MP_QSTR_set_value, (const byte*)"\xb3\xf8\x09" "set_value")
QDEF1(MP_QSTR_set_value_by_id, (const byte*)"\x85\x9d\x0f" "set_value_by_id")
QDEF1(MP_QSTR_set_value_by_id2, (const byte*)"\x17\x4e\x10" "set_value_by_id2")
QDEF1(MP_QSTR_set_values, (const byte*)"\x60\x0f\x0a" "set_values")
QDEF1(MP_QSTR_set_var, (const byte*)"\x1d\x76\x07" "set_var")
QDEF1(MP_QSTR_set_visible_row_count, (const byte*)"\xbf\x48\x15" "set_visible_row_count")
QDEF1(MP_QSTR_set_width, (const byte*)"\xde\x39\x09" "set_width")
QDEF1(MP_QSTR_set_wrap, (const byte*)"\x8c\x44\x08" "set_wrap")
QDEF1(MP_QSTR_set_x, (const byte*)"\x20\xff\x05" "set_x")
QDEF1(MP_QSTR_set_x_start_point, (const byte*)"\x4c\x3b\x11" "set_x_start_point")
QDEF1(MP_QSTR_set_y, (const byte*)"\x21\xff\x05" "set_y")
QDEF1(MP_QSTR_set_y_invert, (const byte*)"\x6c\xf3\x0c" "set_y_invert")
QDEF1(MP_QSTR_set_zoom, (const byte*)"\x6f\xdd\x08" "set_zoom")
QDEF1(MP_QSTR_set_zoom_x, (const byte*)"\x68\xed\x0a" "set_zoom_x")
QDEF1(MP_QSTR_set_zoom_y, (const byte*)"\x69\xed\x0a" "set_zoom_y")
QDEF1(MP_QSTR_setblocking, (const byte*)"\x6e\x18\x0b" "setblocking")
QDEF1(MP_QSTR_seti, (const byte*)"\x6e\x74\x04" "seti")
QDEF1(MP_QSTR_setpos, (const byte*)"\x4b\x6a\x06" "setpos")
QDEF1(MP_QSTR_setsockopt, (const byte*)"\x38\xe8\x0a" "setsockopt")
QDEF1(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF1(MP_QSTR_settimeout, (const byte*)"\xdc\x8a\x0a" "settimeout")
QDEF1(MP_QSTR_sha1, (const byte*)"\x8e\xac\x04" "sha1")
QDEF1(MP_QSTR_sha256, (const byte*)"\x2e\x01\x06" "sha256")
QDEF1(MP_QSTR_shadow_color, (const byte*)"\xa1\xea\x0c" "shadow_color")
QDEF1(MP_QSTR_shadow_ofs_x, (const byte*)"\xe1\xd4\x0c" "shadow_ofs_x")
QDEF1(MP_QSTR_shadow_ofs_y, (const byte*)"\xe0\xd4\x0c" "shadow_ofs_y")
QDEF1(MP_QSTR_shadow_opa, (const byte*)"\xa2\x15\x0a" "shadow_opa")
QDEF1(MP_QSTR_shadow_spread, (const byte*)"\x0d\x4c\x0d" "shadow_spread")
QDEF1(MP_QSTR_shadow_width, (const byte*)"\x5a\x4c\x0c" "shadow_width")
QDEF1(MP_QSTR_side, (const byte*)"\x7e\xa8\x04" "side")
QDEF1(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF1(MP_QSTR_single, (const byte*)"\x3f\x20\x06" "single")
QDEF1(MP_QSTR_sinh, (const byte*)"\xb9\xa6\x04" "sinh")
QDEF1(MP_QSTR_size, (const byte*)"\x20\xa5\x04" "size")
QDEF1(MP_QSTR_sizeof, (const byte*)"\x49\x73\x06" "sizeof")
QDEF1(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF1(MP_QSTR_sleep_ms, (const byte*)"\x0b\x63\x08" "sleep_ms")
QDEF1(MP_QSTR_sleep_us, (const byte*)"\x13\x60\x08" "sleep_us")
QDEF1(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF1(MP_QSTR_slider, (const byte*)"\x60\xb0\x06" "slider")
QDEF1(MP_QSTR_slider_class, (const byte*)"\xd1\x90\x0c" "slider_class")
QDEF1(MP_QSTR_snapshot_buf_size_needed, (const byte*)"\x09\x2a\x18" "snapshot_buf_size_needed")
QDEF1(MP_QSTR_snapshot_free, (const byte*)"\x42\xdf\x0d" "snapshot_free")
QDEF1(MP_QSTR_snapshot_take, (const byte*)"\x0d\x59\x0d" "snapshot_take")
QDEF1(MP_QSTR_snapshot_take_to_buf, (const byte*)"\x47\xc9\x14" "snapshot_take_to_buf")
QDEF1(MP_QSTR_sntp, (const byte*)"\x7c\x81\x04" "sntp")
QDEF1(MP_QSTR_sockaddr, (const byte*)"\x62\x8c\x08" "sockaddr")
QDEF1(MP_QSTR_socket, (const byte*)"\x60\xcc\x06" "socket")
QDEF1(MP_QSTR_soft_reset, (const byte*)"\xe1\x65\x0a" "soft_reset")
QDEF1(MP_QSTR_space, (const byte*)"\x21\x1f\x05" "space")
QDEF1(MP_QSTR_span_t, (const byte*)"\x02\x16\x06" "span_t")
QDEF1(MP_QSTR_spangroup, (const byte*)"\x76\xbc\x09" "spangroup")
QDEF1(MP_QSTR_spangroup_class, (const byte*)"\xc7\x12\x0f" "spangroup_class")
QDEF1(MP_QSTR_spinbox, (const byte*)"\x74\x21\x07" "spinbox")
QDEF1(MP_QSTR_spinbox_class, (const byte*)"\xc5\x8e\x0d" "spinbox_class")
QDEF1(MP_QSTR_spinner, (const byte*)"\x38\x52\x07" "spinner")
QDEF1(MP_QSTR_spinner_class, (const byte*)"\x89\x6f\x0d" "spinner_class")
QDEF1(MP_QSTR_split_jpeg_init, (const byte*)"\xb5\xbe\x0f" "split_jpeg_init")
QDEF1(MP_QSTR_splitlines, (const byte*)"\x6a\xd3\x0a" "splitlines")
QDEF1(MP_QSTR_spx, (const byte*)"\xde\x8d\x03" "spx")
QDEF1(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF1(MP_QSTR_sqrt_res_t, (const byte*)"\xd1\x4d\x0a" "sqrt_res_t")
QDEF1(MP_QSTR_src, (const byte*)"\x07\x8d\x03" "src")
QDEF1(MP_QSTR_src_get_type, (const byte*)"\xe9\xf6\x0c" "src_get_type")
QDEF1(MP_QSTR_src_type, (const byte*)"\x20\xd9\x08" "src_type")
QDEF1(MP_QSTR_srgb_defined, (const byte*)"\x3f\x51\x0c" "srgb_defined")
QDEF1(MP_QSTR_srgb_intent, (const byte*)"\x12\xe2\x0b" "srgb_intent")
QDEF1(MP_QSTR_stack_size, (const byte*)"\x31\x3b\x0a" "stack_size")
QDEF1(MP_QSTR_stack_use, (const byte*)"\x97\xf7\x09" "stack_use")
QDEF1(MP_QSTR_startAdv, (const byte*)"\xf6\x7c\x08" "startAdv")
QDEF1(MP_QSTR_startDecode, (const byte*)"\x09\x38\x0b" "startDecode")
QDEF1(MP_QSTR_startEncode, (const byte*)"\xa3\x67\x0b" "startEncode")
QDEF1(MP_QSTR_start_angle, (const byte*)"\x1b\xff\x0b" "start_angle")
QDEF1(MP_QSTR_start_cb, (const byte*)"\x9b\xea\x08" "start_cb")
QDEF1(MP_QSTR_start_cb_called, (const byte*)"\x27\xc7\x0f" "start_cb_called")
QDEF1(MP_QSTR_start_line, (const byte*)"\xb4\xa0\x0a" "start_line")
QDEF1(MP_QSTR_start_new_thread, (const byte*)"\xd7\x25\x10" "start_new_thread")
QDEF1(MP_QSTR_start_point, (const byte*)"\xb6\x53\x0b" "start_point")
QDEF1(MP_QSTR_start_value, (const byte*)"\x51\x39\x0b" "start_value")
QDEF1(MP_QSTR_stat, (const byte*)"\xd7\x35\x04" "stat")
QDEF1(MP_QSTR_state, (const byte*)"\xd2\xf0\x05" "state")
QDEF1(MP_QSTR_state_cleanup, (const byte*)"\x8d\xcb\x0d" "state_cleanup")
QDEF1(MP_QSTR_state_copy, (const byte*)"\x28\x10\x0a" "state_copy")
QDEF1(MP_QSTR_state_init, (const byte*)"\x57\x0b\x0a" "state_init")
QDEF1(MP_QSTR_static_flag, (const byte*)"\x6e\x80\x0b" "static_flag")
QDEF1(MP_QSTR_statvfs, (const byte*)"\x14\x19\x07" "statvfs")
QDEF1(MP_QSTR_stderr, (const byte*)"\xa3\x58\x06" "stderr")
QDEF1(MP_QSTR_stdin, (const byte*)"\x21\x04\x05" "stdin")
QDEF1(MP_QSTR_stdloglevel, (const byte*)"\x34\xd1\x0b" "stdloglevel")
QDEF1(MP_QSTR_stdout, (const byte*)"\x08\x83\x06" "stdout")
QDEF1(MP_QSTR_steep, (const byte*)"\xf2\xfe\x05" "steep")
QDEF1(MP_QSTR_step_next, (const byte*)"\xaf\x32\x09" "step_next")
QDEF1(MP_QSTR_step_prev, (const byte*)"\xd9\xf8\x09" "step_prev")
QDEF1(MP_QSTR_stopAdv, (const byte*)"\xee\x8c\x07" "stopAdv")
QDEF1(MP_QSTR_stopDecode, (const byte*)"\x11\x2d\x0a" "stopDecode")
QDEF1(MP_QSTR_stopEncode, (const byte*)"\xbb\x5c\x0a" "stopEncode")
QDEF1(MP_QSTR_str_val, (const byte*)"\xb4\xa6\x07" "str_val")
QDEF1(MP_QSTR_struct, (const byte*)"\x12\x90\x06" "struct")
QDEF1(MP_QSTR_style, (const byte*)"\xd2\x53\x05" "style")
QDEF1(MP_QSTR_style_const_prop_t, (const byte*)"\xa1\x90\x12" "style_const_prop_t")
QDEF1(MP_QSTR_style_get_selector_part, (const byte*)"\xd9\xcf\x17" "style_get_selector_part")
QDEF1(MP_QSTR_style_get_selector_state, (const byte*)"\x39\xa0\x18" "style_get_selector_state")
QDEF1(MP_QSTR_style_prop_get_default, (const byte*)"\xcd\x5a\x16" "style_prop_get_default")
QDEF1(MP_QSTR_style_register_prop, (const byte*)"\x86\xa9\x13" "style_register_prop")
QDEF1(MP_QSTR_style_t, (const byte*)"\x99\x97\x07" "style_t")
QDEF1(MP_QSTR_style_transition_dsc_t, (const byte*)"\x82\x8f\x16" "style_transition_dsc_t")
QDEF1(MP_QSTR_style_v_p_t, (const byte*)"\x9f\xfa\x0b" "style_v_p_t")
QDEF1(MP_QSTR_style_value_t, (const byte*)"\xcd\x27\x0d" "style_value_t")
QDEF1(MP_QSTR_sub, (const byte*)"\x21\x8d\x03" "sub")
QDEF1(MP_QSTR_sub_part_ptr, (const byte*)"\x00\x45\x0c" "sub_part_ptr")
QDEF1(MP_QSTR_subpx, (const byte*)"\x29\x57\x05" "subpx")
QDEF1(MP_QSTR_subscribe, (const byte*)"\x0d\x08\x09" "subscribe")
QDEF1(MP_QSTR_sw_rotate, (const byte*)"\x87\x9f\x09" "sw_rotate")
QDEF1(MP_QSTR_swap, (const byte*)"\x10\x39\x04" "swap")
QDEF1(MP_QSTR_switch, (const byte*)"\xb7\x3d\x06" "switch")
QDEF1(MP_QSTR_switch_class, (const byte*)"\x46\x47\x0c" "switch_class")
QDEF1(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF1(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF1(MP_QSTR_sync, (const byte*)"\xa2\x62\x04" "sync")
QDEF1(MP_QSTR_sys, (const byte*)"\xbc\x8e\x03" "sys")
QDEF1(MP_QSTR_sys_layer, (const byte*)"\x60\xbc\x09" "sys_layer")
QDEF1(MP_QSTR_sysname, (const byte*)"\x9b\x36\x07" "sysname")
QDEF1(MP_QSTR_system, (const byte*)"\xa0\x14\x06" "system")
QDEF1(MP_QSTR_table, (const byte*)"\x7b\xac\x05" "table")
QDEF1(MP_QSTR_table_class, (const byte*)"\x0a\xc7\x0b" "table_class")
QDEF1(MP_QSTR_tabview, (const byte*)"\x5f\x83\x07" "tabview")
QDEF1(MP_QSTR_tabview_class, (const byte*)"\xae\xf5\x0d" "tabview_class")
QDEF1(MP_QSTR_tail, (const byte*)"\x75\xa1\x04" "tail")
QDEF1(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF1(MP_QSTR_tanh, (const byte*)"\xd6\xa1\x04" "tanh")
QDEF1(MP_QSTR_target, (const byte*)"\xf4\x36\x06" "target")
QDEF1(MP_QSTR_task_handler, (const byte*)"\x2f\x4d\x0c" "task_handler")
QDEF1(MP_QSTR_tell, (const byte*)"\x14\xb1\x04" "tell")
QDEF1(MP_QSTR_tell_cb, (const byte*)"\x2a\xf6\x07" "tell_cb")
QDEF1(MP_QSTR_text, (const byte*)"\x98\xaf\x04" "text")
QDEF1(MP_QSTR_text_is_selected, (const byte*)"\xab\x25\x10" "text_is_selected")
QDEF1(MP_QSTR_text_keys, (const byte*)"\x43\x60\x09" "text_keys")
QDEF1(MP_QSTR_text_length, (const byte*)"\x9b\xdd\x0b" "text_length")
QDEF1(MP_QSTR_text_num, (const byte*)"\x71\x08\x08" "text_num")
QDEF1(MP_QSTR_text_strings, (const byte*)"\x81\x00\x0c" "text_strings")
QDEF1(MP_QSTR_textarea, (const byte*)"\x0f\x45\x08" "textarea")
QDEF1(MP_QSTR_textarea_class, (const byte*)"\x7e\x9d\x0e" "textarea_class")
QDEF1(MP_QSTR_theme, (const byte*)"\x34\x84\x05" "theme")
QDEF1(MP_QSTR_theme_apply, (const byte*)"\xbf\xb5\x0b" "theme_apply")
QDEF1(MP_QSTR_theme_basic_init, (const byte*)"\xd4\x26\x10" "theme_basic_init")
QDEF1(MP_QSTR_theme_default_get, (const byte*)"\x89\x72\x11" "theme_default_get")
QDEF1(MP_QSTR_theme_default_init, (const byte*)"\x65\x98\x12" "theme_default_init")
QDEF1(MP_QSTR_theme_default_is_inited, (const byte*)"\xc1\x2b\x17" "theme_default_is_inited")
QDEF1(MP_QSTR_theme_get_color_primary, (const byte*)"\x2c\xb2\x17" "theme_get_color_primary")
QDEF1(MP_QSTR_theme_get_color_secondary, (const byte*)"\xda\xfa\x19" "theme_get_color_secondary")
QDEF1(MP_QSTR_theme_get_font_large, (const byte*)"\xb3\x1b\x14" "theme_get_font_large")
QDEF1(MP_QSTR_theme_get_font_normal, (const byte*)"\x3d\xfb\x15" "theme_get_font_normal")
QDEF1(MP_QSTR_theme_get_font_small, (const byte*)"\x91\xd5\x14" "theme_get_font_small")
QDEF1(MP_QSTR_theme_get_from_obj, (const byte*)"\xcc\x51\x12" "theme_get_from_obj")
QDEF1(MP_QSTR_theme_mono_init, (const byte*)"\x8d\xf6\x0f" "theme_mono_init")
QDEF1(MP_QSTR_theme_t, (const byte*)"\x3f\x68\x07" "theme_t")
QDEF1(MP_QSTR_threshold, (const byte*)"\xf2\x2f\x09" "threshold")
QDEF1(MP_QSTR_tick_cnt, (const byte*)"\x76\x54\x08" "tick_cnt")
QDEF1(MP_QSTR_tick_color, (const byte*)"\x32\xa6\x0a" "tick_color")
QDEF1(MP_QSTR_tick_elaps, (const byte*)"\xa4\xcf\x0a" "tick_elaps")
QDEF1(MP_QSTR_tick_get, (const byte*)"\x99\x44\x08" "tick_get")
QDEF1(MP_QSTR_tick_inc, (const byte*)"\xeb\x2b\x08" "tick_inc")
QDEF1(MP_QSTR_tick_length, (const byte*)"\x33\x26\x0b" "tick_length")
QDEF1(MP_QSTR_tick_major_color, (const byte*)"\x76\xd7\x10" "tick_major_color")
QDEF1(MP_QSTR_tick_major_length, (const byte*)"\x77\xe0\x11" "tick_major_length")
QDEF1(MP_QSTR_tick_major_nth, (const byte*)"\xf9\x63\x0e" "tick_major_nth")
QDEF1(MP_QSTR_tick_major_width, (const byte*)"\xcd\x74\x10" "tick_major_width")
QDEF1(MP_QSTR_tick_width, (const byte*)"\x89\xa1\x0a" "tick_width")
QDEF1(MP_QSTR_ticks_add, (const byte*)"\x9d\xae\x09" "ticks_add")
QDEF1(MP_QSTR_ticks_cpu, (const byte*)"\x1a\xa5\x09" "ticks_cpu")
QDEF1(MP_QSTR_ticks_diff, (const byte*)"\xb1\xe0\x0a" "ticks_diff")
QDEF1(MP_QSTR_ticks_ms, (const byte*)"\x42\x32\x08" "ticks_ms")
QDEF1(MP_QSTR_ticks_us, (const byte*)"\x5a\x31\x08" "ticks_us")
QDEF1(MP_QSTR_tileview, (const byte*)"\xbc\xa3\x08" "tileview")
QDEF1(MP_QSTR_tileview_class, (const byte*)"\x0d\xf2\x0e" "tileview_class")
QDEF1(MP_QSTR_tileview_tile_class, (const byte*)"\x06\x03\x13" "tileview_tile_class")
QDEF1(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF1(MP_QSTR_time_defined, (const byte*)"\x0e\xb9\x0c" "time_defined")
QDEF1(MP_QSTR_time_ns, (const byte*)"\x72\xb2\x07" "time_ns")
QDEF1(MP_QSTR_time_pulse_us, (const byte*)"\x89\x0c\x0d" "time_pulse_us")
QDEF1(MP_QSTR_time_to_open, (const byte*)"\x3f\xbe\x0c" "time_to_open")
QDEF1(MP_QSTR_timeout, (const byte*)"\x3e\x54\x07" "timeout")
QDEF1(MP_QSTR_timeout_char, (const byte*)"\x79\x4a\x0c" "timeout_char")
QDEF1(MP_QSTR_timer_cb, (const byte*)"\x7c\x4f\x08" "timer_cb")
QDEF1(MP_QSTR_timer_create, (const byte*)"\x59\x5e\x0c" "timer_create")
QDEF1(MP_QSTR_timer_create_basic, (const byte*)"\x5c\x86\x12" "timer_create_basic")
QDEF1(MP_QSTR_timer_enable, (const byte*)"\x9c\xc4\x0c" "timer_enable")
QDEF1(MP_QSTR_timer_get_idle, (const byte*)"\xb0\xd3\x0e" "timer_get_idle")
QDEF1(MP_QSTR_timer_handler, (const byte*)"\x45\xd5\x0d" "timer_handler")
QDEF1(MP_QSTR_timer_t, (const byte*)"\x49\xe3\x07" "timer_t")
QDEF1(MP_QSTR_toggle, (const byte*)"\xb7\x43\x06" "toggle")
QDEF1(MP_QSTR_top_layer, (const byte*)"\x72\xf6\x09" "top_layer")
QDEF1(MP_QSTR_total_size, (const byte*)"\x9d\xe1\x0a" "total_size")
QDEF1(MP_QSTR_touch_read, (const byte*)"\xed\x79\x0a" "touch_read")
QDEF1(MP_QSTR_transform, (const byte*)"\x49\x73\x09" "transform")
QDEF1(MP_QSTR_tree_walk, (const byte*)"\x6d\x1c\x09" "tree_walk")
QDEF1(MP_QSTR_trig_activity, (const byte*)"\x3f\x21\x0d" "trig_activity")
QDEF1(MP_QSTR_trigger, (const byte*)"\x9d\x8c\x07" "trigger")
QDEF1(MP_QSTR_trigo_cos, (const byte*)"\x42\xcb\x09" "trigo_cos")
QDEF1(MP_QSTR_trigo_sin, (const byte*)"\x89\x87\x09" "trigo_sin")
QDEF1(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF1(MP_QSTR_tx, (const byte*)"\x89\x6f\x02" "tx")
QDEF1(MP_QSTR_txbuf, (const byte*)"\x78\xc6\x05" "txbuf")
QDEF1(MP_QSTR_txt, (const byte*)"\xdd\x60\x03" "txt")
QDEF1(MP_QSTR_txt_get_size, (const byte*)"\x8e\xde\x0c" "txt_get_size")
QDEF1(MP_QSTR_txt_get_width, (const byte*)"\x0d\x29\x0d" "txt_get_width")
QDEF1(MP_QSTR_type_data, (const byte*)"\x72\xac\x09" "type_data")
QDEF1(MP_QSTR_types, (const byte*)"\x4e\x73\x05" "types")
QDEF1(MP_QSTR_uarray, (const byte*)"\x89\x86\x06" "uarray")
QDEF1(MP_QSTR_ubinascii, (const byte*)"\xc4\x88\x09" "ubinascii")
QDEF1(MP_QSTR_ucamera, (const byte*)"\x09\x79\x07" "ucamera")
QDEF1(MP_QSTR_ucollections, (const byte*)"\x15\x9a\x0c" "ucollections")
QDEF1(MP_QSTR_ucryptolib, (const byte*)"\x34\xda\x0a" "ucryptolib")
QDEF1(MP_QSTR_uctypes, (const byte*)"\xf8\x71\x07" "uctypes")
QDEF1(MP_QSTR_uerrno, (const byte*)"\xb4\xe9\x06" "uerrno")
QDEF1(MP_QSTR_uhashlib, (const byte*)"\x65\x9d\x08" "uhashlib")
QDEF1(MP_QSTR_uheapq, (const byte*)"\x1d\x43\x06" "uheapq")
QDEF1(MP_QSTR_uint, (const byte*)"\xe3\x3d\x04" "uint")
QDEF1(MP_QSTR_uint_val, (const byte*)"\xc7\x64\x08" "uint_val")
QDEF1(MP_QSTR_uio, (const byte*)"\xb6\x66\x03" "uio")
QDEF1(MP_QSTR_ujson, (const byte*)"\xe8\x30\x05" "ujson")
QDEF1(MP_QSTR_ulog, (const byte*)"\xd4\x51\x04" "ulog")
QDEF1(MP_QSTR_umount, (const byte*)"\xdd\x9e\x06" "umount")
QDEF1(MP_QSTR_unLoadNet, (const byte*)"\xc7\x4c\x09" "unLoadNet")
QDEF1(MP_QSTR_uname, (const byte*)"\xb7\x9c\x05" "uname")
QDEF1(MP_QSTR_underline_position, (const byte*)"\xc5\xcc\x12" "underline_position")
QDEF1(MP_QSTR_underline_thickness, (const byte*)"\x6a\xc4\x13" "underline_thickness")
QDEF1(MP_QSTR_unhexlify, (const byte*)"\xb1\xb9\x09" "unhexlify")
QDEF1(MP_QSTR_uniform, (const byte*)"\x01\xf5\x07" "uniform")
QDEF1(MP_QSTR_uninit, (const byte*)"\xa4\x16\x06" "uninit")
QDEF1(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF1(MP_QSTR_unique_id, (const byte*)"\x04\x89\x09" "unique_id")
QDEF1(MP_QSTR_unknown_chunks_data, (const byte*)"\x35\x5b\x13" "unknown_chunks_data")
QDEF1(MP_QSTR_unknown_chunks_size, (const byte*)"\x40\xe3\x13" "unknown_chunks_size")
QDEF1(MP_QSTR_unlink, (const byte*)"\xfe\x8f\x06" "unlink")
QDEF1(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF1(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
QDEF1(MP_QSTR_unprepare, (const byte*)"\x1f\xfc\x09" "unprepare")
QDEF1(MP_QSTR_unregister, (const byte*)"\x17\xd4\x0a" "unregister")
QDEF1(MP_QSTR_unsetenv, (const byte*)"\x81\x46\x08" "unsetenv")
QDEF1(MP_QSTR_unsubscribe, (const byte*)"\xd6\xa0\x0b" "unsubscribe")
QDEF1(MP_QSTR_uos, (const byte*)"\xec\x67\x03" "uos")
QDEF1(MP_QSTR_updateCharacter, (const byte*)"\xed\x43\x0f" "updateCharacter")
QDEF1(MP_QSTR_updateDisplay, (const byte*)"\x2e\x61\x0d" "updateDisplay")
QDEF1(MP_QSTR_update_layout, (const byte*)"\x31\x57\x0d" "update_layout")
QDEF1(MP_QSTR_update_snap, (const byte*)"\xa7\x2b\x0b" "update_snap")
QDEF1(MP_QSTR_upgrade, (const byte*)"\x95\x97\x07" "upgrade")
QDEF1(MP_QSTR_uploadContent, (const byte*)"\x6f\xbd\x0d" "uploadContent")
QDEF1(MP_QSTR_uploadFile, (const byte*)"\xa0\xd8\x0a" "uploadFile")
QDEF1(MP_QSTR_uptime, (const byte*)"\xd5\x5b\x06" "uptime")
QDEF1(MP_QSTR_urandom, (const byte*)"\xab\xae\x07" "urandom")
QDEF1(MP_QSTR_ure, (const byte*)"\x87\x63\x03" "ure")
QDEF1(MP_QSTR_use_generic_set_px_cb, (const byte*)"\xbc\xe6\x15" "use_generic_set_px_cb")
QDEF1(MP_QSTR_used_cnt, (const byte*)"\xc4\x0e\x08" "used_cnt")
QDEF1(MP_QSTR_used_pct, (const byte*)"\xfa\xd0\x08" "used_pct")
QDEF1(MP_QSTR_uselect, (const byte*)"\x58\x8e\x07" "uselect")
QDEF1(MP_QSTR_user_data, (const byte*)"\x9b\xd6\x09" "user_data")
QDEF1(MP_QSTR_usocket, (const byte*)"\x75\x00\x07" "usocket")
QDEF1(MP_QSTR_ussl, (const byte*)"\x1c\xf2\x04" "ussl")
QDEF1(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
QDEF1(MP_QSTR_usys, (const byte*)"\xc9\xf3\x04" "usys")
QDEF1(MP_QSTR_utime, (const byte*)"\xe5\x9d\x05" "utime")
QDEF1(MP_QSTR_utimeq, (const byte*)"\xf4\x5a\x06" "utimeq")
QDEF1(MP_QSTR_uwebsocket, (const byte*)"\xe5\x33\x0a" "uwebsocket")
QDEF1(MP_QSTR_uzlib, (const byte*)"\x6d\x9b\x05" "uzlib")
QDEF1(MP_QSTR_v, (const byte*)"\xd3\xb5\x01" "v")
QDEF1(MP_QSTR_v_p, (const byte*)"\x9c\x7d\x03" "v_p")
QDEF1(MP_QSTR_value1, (const byte*)"\x3f\xbe\x06" "value1")
QDEF1(MP_QSTR_values_and_props, (const byte*)"\x78\xbc\x10" "values_and_props")
QDEF1(MP_QSTR_var, (const byte*)"\xe0\x7a\x03" "var")
QDEF1(MP_QSTR_vect, (const byte*)"\x61\xea\x04" "vect")
QDEF1(MP_QSTR_ver_res, (const byte*)"\x1f\x6a\x07" "ver_res")
QDEF1(MP_QSTR_verify, (const byte*)"\xd2\x02\x06" "verify")
QDEF1(MP_QSTR_version, (const byte*)"\xbf\xd3\x07" "version")
QDEF1(MP_QSTR_version_info, (const byte*)"\x6e\x0a\x0c" "version_info")
QDEF1(MP_QSTR_version_major, (const byte*)"\x7b\x35\x0d" "version_major")
QDEF1(MP_QSTR_version_minor, (const byte*)"\x77\x04\x0d" "version_minor")
QDEF1(MP_QSTR_version_patch, (const byte*)"\x6e\x6d\x0d" "version_patch")
QDEF1(MP_QSTR_versions, (const byte*)"\xec\x4b\x08" "versions")
QDEF1(MP_QSTR_vertex_p, (const byte*)"\x62\x11\x08" "vertex_p")
QDEF1(MP_QSTR_viper, (const byte*)"\x5d\x23\x05" "viper")
QDEF1(MP_QSTR_vline, (const byte*)"\x1d\xf6\x05" "vline")
QDEF1(MP_QSTR_w, (const byte*)"\xd2\xb5\x01" "w")
QDEF1(MP_QSTR_waitComplete, (const byte*)"\x27\x3c\x0c" "waitComplete")
QDEF1(MP_QSTR_wait_cb, (const byte*)"\xf0\x13\x07" "wait_cb")
QDEF1(MP_QSTR_wait_release, (const byte*)"\x78\x8c\x0c" "wait_release")
QDEF1(MP_QSTR_wait_until_release, (const byte*)"\xcd\x96\x12" "wait_until_release")
QDEF1(MP_QSTR_wake, (const byte*)"\xdd\x55\x04" "wake")
QDEF1(MP_QSTR_wake_reason, (const byte*)"\x66\xc6\x0b" "wake_reason")
QDEF1(MP_QSTR_wakelockLock, (const byte*)"\xbd\x0a\x0c" "wakelockLock")
QDEF1(MP_QSTR_wakelockTimedlock, (const byte*)"\xcc\x89\x11" "wakelockTimedlock")
QDEF1(MP_QSTR_wakelockUnlock, (const byte*)"\x46\x5b\x0e" "wakelockUnlock")
QDEF1(MP_QSTR_warn, (const byte*)"\xaf\x52\x04" "warn")
QDEF1(MP_QSTR_wb, (const byte*)"\x70\x70\x02" "wb")
QDEF1(MP_QSTR_websocket, (const byte*)"\x90\x8d\x09" "websocket")
QDEF1(MP_QSTR_width, (const byte*)"\x23\x75\x05" "width")
QDEF1(MP_QSTR_width_def, (const byte*)"\x9b\x87\x09" "width_def")
QDEF1(MP_QSTR_width_mod, (const byte*)"\x9a\x62\x09" "width_mod")
QDEF1(MP_QSTR_win, (const byte*)"\xb5\x7f\x03" "win")
QDEF1(MP_QSTR_win_class, (const byte*)"\x44\x60\x09" "win_class")
QDEF1(MP_QSTR_wrap, (const byte*)"\x51\xfc\x04" "wrap")
QDEF1(MP_QSTR_wrap_socket, (const byte*)"\xcb\xf3\x0b" "wrap_socket")
QDEF1(MP_QSTR_writeCoil, (const byte*)"\x31\x59\x09" "writeCoil")
QDEF1(MP_QSTR_writeHoldingRegister, (const byte*)"\x7e\x4d\x14" "writeHoldingRegister")
QDEF1(MP_QSTR_writeImageToFile, (const byte*)"\xc2\x25\x10" "writeImageToFile")
QDEF1(MP_QSTR_writeMultipleCoils, (const byte*)"\x12\xb8\x12" "writeMultipleCoils")
QDEF1(MP_QSTR_writeMultipleHoldingRegisters, (const byte*)"\xbd\xf4\x1d" "writeMultipleHoldingRegisters")
QDEF1(MP_QSTR_write_cb, (const byte*)"\x26\xcd\x08" "write_cb")
QDEF1(MP_QSTR_write_readinto, (const byte*)"\x89\x84\x0e" "write_readinto")
QDEF1(MP_QSTR_writebit, (const byte*)"\xc7\xa5\x08" "writebit")
QDEF1(MP_QSTR_writeblocks, (const byte*)"\x02\xdf\x0b" "writeblocks")
QDEF1(MP_QSTR_writebyte, (const byte*)"\xd2\x1e\x09" "writebyte")
QDEF1(MP_QSTR_writeto, (const byte*)"\x03\x39\x07" "writeto")
QDEF1(MP_QSTR_writeto_mem, (const byte*)"\x79\xed\x0b" "writeto_mem")
QDEF1(MP_QSTR_writevto, (const byte*)"\x75\x75\x08" "writevto")
QDEF1(MP_QSTR_x, (const byte*)"\xdd\xb5\x01" "x")
QDEF1(MP_QSTR_x1, (const byte*)"\x4c\x71\x02" "x1")
QDEF1(MP_QSTR_x2, (const byte*)"\x4f\x71\x02" "x2")
QDEF1(MP_QSTR_x_axis_sec, (const byte*)"\x4b\xfc\x0a" "x_axis_sec")
QDEF1(MP_QSTR_x_ext_buf_assigned, (const byte*)"\x5a\xd7\x12" "x_ext_buf_assigned")
QDEF1(MP_QSTR_x_points, (const byte*)"\xdd\xbe\x08" "x_points")
QDEF1(MP_QSTR_x_start_on_y, (const byte*)"\x3a\xa9\x0c" "x_start_on_y")
QDEF1(MP_QSTR_xy_steep, (const byte*)"\x6c\x0c\x08" "xy_steep")
QDEF1(MP_QSTR_y, (const byte*)"\xdc\xb5\x01" "y")
QDEF1(MP_QSTR_y1, (const byte*)"\x6d\x71\x02" "y1")
QDEF1(MP_QSTR_y2, (const byte*)"\x6e\x71\x02" "y2")
QDEF1(MP_QSTR_y_axis_sec, (const byte*)"\xaa\x24\x0a" "y_axis_sec")
QDEF1(MP_QSTR_y_bottom, (const byte*)"\x6c\x41\x08" "y_bottom")
QDEF1(MP_QSTR_y_ext_buf_assigned, (const byte*)"\xfb\x6f\x12" "y_ext_buf_assigned")
QDEF1(MP_QSTR_y_points, (const byte*)"\x7c\x5b\x08" "y_points")
QDEF1(MP_QSTR_y_top, (const byte*)"\xe8\x26\x05" "y_top")
QDEF1(MP_QSTR_year, (const byte*)"\x4a\x9f\x04" "year")
QDEF1(MP_QSTR_yx_steep, (const byte*)"\x4c\x94\x08" "yx_steep")
QDEF1(MP_QSTR_zlib_decompress, (const byte*)"\x80\xe5\x0f" "zlib_decompress")
QDEF1(MP_QSTR_zlibsettings, (const byte*)"\x5d\xc2\x0c" "zlibsettings")
QDEF1(MP_QSTR_zoom, (const byte*)"\xf2\x23\x04" "zoom")
QDEF1(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")

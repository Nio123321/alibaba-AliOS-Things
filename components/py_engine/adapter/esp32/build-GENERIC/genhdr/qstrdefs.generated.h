// This file was automatically generated by makeqstrdata.py

QDEF0(MP_QSTRnull, (const byte*)"\x00\x00\x00" "")
QDEF0(MP_QSTR_, (const byte*)"\x05\x15\x00" "")
QDEF0(MP_QSTR___dir__, (const byte*)"\x7a\x8f\x07" "__dir__")
QDEF0(MP_QSTR__0x0a_, (const byte*)"\xaf\xb5\x01" "\x0a")
QDEF0(MP_QSTR__space_, (const byte*)"\x85\xb5\x01" " ")
QDEF0(MP_QSTR__star_, (const byte*)"\x8f\xb5\x01" "*")
QDEF0(MP_QSTR__slash_, (const byte*)"\x8a\xb5\x01" "/")
QDEF0(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x94\x08" "<module>")
QDEF0(MP_QSTR__, (const byte*)"\xfa\xb5\x01" "_")
QDEF0(MP_QSTR___call__, (const byte*)"\xa7\xf9\x08" "__call__")
QDEF0(MP_QSTR___class__, (const byte*)"\x2b\xc5\x09" "__class__")
QDEF0(MP_QSTR___delitem__, (const byte*)"\xfd\x35\x0b" "__delitem__")
QDEF0(MP_QSTR___enter__, (const byte*)"\x6d\xba\x09" "__enter__")
QDEF0(MP_QSTR___exit__, (const byte*)"\x45\xf8\x08" "__exit__")
QDEF0(MP_QSTR___getattr__, (const byte*)"\x40\xf8\x0b" "__getattr__")
QDEF0(MP_QSTR___getitem__, (const byte*)"\x26\x39\x0b" "__getitem__")
QDEF0(MP_QSTR___hash__, (const byte*)"\xf7\xc8\x08" "__hash__")
QDEF0(MP_QSTR___init__, (const byte*)"\x5f\xa5\x08" "__init__")
QDEF0(MP_QSTR___int__, (const byte*)"\x16\x1b\x07" "__int__")
QDEF0(MP_QSTR___iter__, (const byte*)"\xcf\x32\x08" "__iter__")
QDEF0(MP_QSTR___len__, (const byte*)"\xe2\xb0\x07" "__len__")
QDEF0(MP_QSTR___main__, (const byte*)"\x8e\x13\x08" "__main__")
QDEF0(MP_QSTR___module__, (const byte*)"\xff\x30\x0a" "__module__")
QDEF0(MP_QSTR___name__, (const byte*)"\xe2\x38\x08" "__name__")
QDEF0(MP_QSTR___new__, (const byte*)"\x79\x15\x07" "__new__")
QDEF0(MP_QSTR___next__, (const byte*)"\x02\x73\x08" "__next__")
QDEF0(MP_QSTR___qualname__, (const byte*)"\x6b\x00\x0c" "__qualname__")
QDEF0(MP_QSTR___repr__, (const byte*)"\x10\x0b\x08" "__repr__")
QDEF0(MP_QSTR___setitem__, (const byte*)"\x32\x3e\x0b" "__setitem__")
QDEF0(MP_QSTR___str__, (const byte*)"\xd0\xcd\x07" "__str__")
QDEF0(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x8c\x0f" "ArithmeticError")
QDEF0(MP_QSTR_AssertionError, (const byte*)"\x97\x5a\x0e" "AssertionError")
QDEF0(MP_QSTR_AttributeError, (const byte*)"\x21\xde\x0e" "AttributeError")
QDEF0(MP_QSTR_BaseException, (const byte*)"\x07\x92\x0d" "BaseException")
QDEF0(MP_QSTR_EOFError, (const byte*)"\x91\xbf\x08" "EOFError")
QDEF0(MP_QSTR_Ellipsis, (const byte*)"\xf0\xe0\x08" "Ellipsis")
QDEF0(MP_QSTR_Exception, (const byte*)"\xf2\x29\x09" "Exception")
QDEF0(MP_QSTR_GeneratorExit, (const byte*)"\x16\x62\x0d" "GeneratorExit")
QDEF0(MP_QSTR_ImportError, (const byte*)"\x20\x9c\x0b" "ImportError")
QDEF0(MP_QSTR_IndentationError, (const byte*)"\x5c\x20\x10" "IndentationError")
QDEF0(MP_QSTR_IndexError, (const byte*)"\x83\xad\x0a" "IndexError")
QDEF0(MP_QSTR_KeyError, (const byte*)"\xea\x00\x08" "KeyError")
QDEF0(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\xe2\x11" "KeyboardInterrupt")
QDEF0(MP_QSTR_LookupError, (const byte*)"\xff\x69\x0b" "LookupError")
QDEF0(MP_QSTR_MemoryError, (const byte*)"\xdc\x83\x0b" "MemoryError")
QDEF0(MP_QSTR_NameError, (const byte*)"\xba\x2d\x09" "NameError")
QDEF0(MP_QSTR_NoneType, (const byte*)"\x17\x68\x08" "NoneType")
QDEF0(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x98\x13" "NotImplementedError")
QDEF0(MP_QSTR_OSError, (const byte*)"\xa1\x65\x07" "OSError")
QDEF0(MP_QSTR_OverflowError, (const byte*)"\x81\xe1\x0d" "OverflowError")
QDEF0(MP_QSTR_RuntimeError, (const byte*)"\x61\xf1\x0c" "RuntimeError")
QDEF0(MP_QSTR_StopIteration, (const byte*)"\xea\x1c\x0d" "StopIteration")
QDEF0(MP_QSTR_SyntaxError, (const byte*)"\x94\x8f\x0b" "SyntaxError")
QDEF0(MP_QSTR_SystemExit, (const byte*)"\x20\xff\x0a" "SystemExit")
QDEF0(MP_QSTR_TypeError, (const byte*)"\x25\x96\x09" "TypeError")
QDEF0(MP_QSTR_ValueError, (const byte*)"\x96\x87\x0a" "ValueError")
QDEF0(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x27\x11" "ZeroDivisionError")
QDEF0(MP_QSTR_abs, (const byte*)"\x95\x32\x03" "abs")
QDEF0(MP_QSTR_all, (const byte*)"\x44\x33\x03" "all")
QDEF0(MP_QSTR_any, (const byte*)"\x13\x33\x03" "any")
QDEF0(MP_QSTR_append, (const byte*)"\x6b\x97\x06" "append")
QDEF0(MP_QSTR_args, (const byte*)"\xc2\xc6\x04" "args")
QDEF0(MP_QSTR_bool, (const byte*)"\xeb\x3c\x04" "bool")
QDEF0(MP_QSTR_builtins, (const byte*)"\xf7\x31\x08" "builtins")
QDEF0(MP_QSTR_bytearray, (const byte*)"\x76\xa3\x09" "bytearray")
QDEF0(MP_QSTR_bytecode, (const byte*)"\x22\x7d\x08" "bytecode")
QDEF0(MP_QSTR_bytes, (const byte*)"\x5c\xb2\x05" "bytes")
QDEF0(MP_QSTR_callable, (const byte*)"\x0d\x70\x08" "callable")
QDEF0(MP_QSTR_chr, (const byte*)"\xdc\x4c\x03" "chr")
QDEF0(MP_QSTR_classmethod, (const byte*)"\xb4\x8c\x0b" "classmethod")
QDEF0(MP_QSTR_clear, (const byte*)"\x7c\xa0\x05" "clear")
QDEF0(MP_QSTR_close, (const byte*)"\x33\x67\x05" "close")
QDEF0(MP_QSTR_const, (const byte*)"\xc0\xff\x05" "const")
QDEF0(MP_QSTR_copy, (const byte*)"\xe0\xdb\x04" "copy")
QDEF0(MP_QSTR_count, (const byte*)"\xa6\x4d\x05" "count")
QDEF0(MP_QSTR_dict, (const byte*)"\x3f\xfc\x04" "dict")
QDEF0(MP_QSTR_dir, (const byte*)"\xfa\x1e\x03" "dir")
QDEF0(MP_QSTR_divmod, (const byte*)"\xb8\x04\x06" "divmod")
QDEF0(MP_QSTR_end, (const byte*)"\x0a\x23\x03" "end")
QDEF0(MP_QSTR_endswith, (const byte*)"\x1b\xa3\x08" "endswith")
QDEF0(MP_QSTR_eval, (const byte*)"\x9b\xa6\x04" "eval")
QDEF0(MP_QSTR_exec, (const byte*)"\x1e\xc0\x04" "exec")
QDEF0(MP_QSTR_extend, (const byte*)"\x63\xe8\x06" "extend")
QDEF0(MP_QSTR_find, (const byte*)"\x00\x34\x04" "find")
QDEF0(MP_QSTR_format, (const byte*)"\x26\x33\x06" "format")
QDEF0(MP_QSTR_from_bytes, (const byte*)"\x35\x74\x0a" "from_bytes")
QDEF0(MP_QSTR_get, (const byte*)"\x33\x3b\x03" "get")
QDEF0(MP_QSTR_getattr, (const byte*)"\xc0\x17\x07" "getattr")
QDEF0(MP_QSTR_globals, (const byte*)"\x9d\x49\x07" "globals")
QDEF0(MP_QSTR_hasattr, (const byte*)"\x8c\xb0\x07" "hasattr")
QDEF0(MP_QSTR_hash, (const byte*)"\xb7\x70\x04" "hash")
QDEF0(MP_QSTR_id, (const byte*)"\x28\x6f\x02" "id")
QDEF0(MP_QSTR_index, (const byte*)"\x7b\x28\x05" "index")
QDEF0(MP_QSTR_insert, (const byte*)"\x12\x54\x06" "insert")
QDEF0(MP_QSTR_int, (const byte*)"\x16\x53\x03" "int")
QDEF0(MP_QSTR_isalpha, (const byte*)"\xeb\x37\x07" "isalpha")
QDEF0(MP_QSTR_isdigit, (const byte*)"\xa8\x9a\x07" "isdigit")
QDEF0(MP_QSTR_isinstance, (const byte*)"\xb6\xbe\x0a" "isinstance")
QDEF0(MP_QSTR_islower, (const byte*)"\xfc\x80\x07" "islower")
QDEF0(MP_QSTR_isspace, (const byte*)"\x5b\xf8\x07" "isspace")
QDEF0(MP_QSTR_issubclass, (const byte*)"\xb5\x7f\x0a" "issubclass")
QDEF0(MP_QSTR_isupper, (const byte*)"\xdd\xa7\x07" "isupper")
QDEF0(MP_QSTR_items, (const byte*)"\xe3\x53\x05" "items")
QDEF0(MP_QSTR_iter, (const byte*)"\x8f\x21\x04" "iter")
QDEF0(MP_QSTR_join, (const byte*)"\xa7\x5c\x04" "join")
QDEF0(MP_QSTR_key, (const byte*)"\x32\x6d\x03" "key")
QDEF0(MP_QSTR_keys, (const byte*)"\x01\x13\x04" "keys")
QDEF0(MP_QSTR_len, (const byte*)"\x62\x40\x03" "len")
QDEF0(MP_QSTR_list, (const byte*)"\x27\x1d\x04" "list")
QDEF0(MP_QSTR_little, (const byte*)"\x89\x6a\x06" "little")
QDEF0(MP_QSTR_locals, (const byte*)"\x3b\xa1\x06" "locals")
QDEF0(MP_QSTR_lower, (const byte*)"\xc6\xcb\x05" "lower")
QDEF0(MP_QSTR_lstrip, (const byte*)"\xe5\xb9\x06" "lstrip")
QDEF0(MP_QSTR_main, (const byte*)"\xce\xb7\x04" "main")
QDEF0(MP_QSTR_map, (const byte*)"\xb9\x43\x03" "map")
QDEF0(MP_QSTR_micropython, (const byte*)"\x0b\x7c\x0b" "micropython")
QDEF0(MP_QSTR_next, (const byte*)"\x42\x88\x04" "next")
QDEF0(MP_QSTR_object, (const byte*)"\x90\x8d\x06" "object")
QDEF0(MP_QSTR_open, (const byte*)"\xd1\x3a\x04" "open")
QDEF0(MP_QSTR_ord, (const byte*)"\x1c\x5e\x03" "ord")
QDEF0(MP_QSTR_pop, (const byte*)"\x2a\x73\x03" "pop")
QDEF0(MP_QSTR_popitem, (const byte*)"\xbf\x2c\x07" "popitem")
QDEF0(MP_QSTR_pow, (const byte*)"\x2d\x73\x03" "pow")
QDEF0(MP_QSTR_print, (const byte*)"\x54\xc6\x05" "print")
QDEF0(MP_QSTR_range, (const byte*)"\x1a\x5e\x05" "range")
QDEF0(MP_QSTR_read, (const byte*)"\xb7\xf9\x04" "read")
QDEF0(MP_QSTR_readinto, (const byte*)"\x4b\xbf\x08" "readinto")
QDEF0(MP_QSTR_readline, (const byte*)"\xf9\x19\x08" "readline")
QDEF0(MP_QSTR_remove, (const byte*)"\x63\x8a\x06" "remove")
QDEF0(MP_QSTR_replace, (const byte*)"\x49\x25\x07" "replace")
QDEF0(MP_QSTR_repr, (const byte*)"\xd0\xf7\x04" "repr")
QDEF0(MP_QSTR_reverse, (const byte*)"\x25\x2a\x07" "reverse")
QDEF0(MP_QSTR_rfind, (const byte*)"\xd2\x9c\x05" "rfind")
QDEF0(MP_QSTR_rindex, (const byte*)"\xe9\x2b\x06" "rindex")
QDEF0(MP_QSTR_round, (const byte*)"\xe7\x25\x05" "round")
QDEF0(MP_QSTR_rsplit, (const byte*)"\xa5\x00\x06" "rsplit")
QDEF0(MP_QSTR_rstrip, (const byte*)"\x3b\x95\x06" "rstrip")
QDEF0(MP_QSTR_self, (const byte*)"\x79\x77\x04" "self")
QDEF0(MP_QSTR_send, (const byte*)"\xb9\x76\x04" "send")
QDEF0(MP_QSTR_sep, (const byte*)"\x23\x8f\x03" "sep")
QDEF0(MP_QSTR_set, (const byte*)"\x27\x8f\x03" "set")
QDEF0(MP_QSTR_setattr, (const byte*)"\xd4\xa8\x07" "setattr")
QDEF0(MP_QSTR_setdefault, (const byte*)"\x6c\xa3\x0a" "setdefault")
QDEF0(MP_QSTR_sort, (const byte*)"\xbf\x9d\x04" "sort")
QDEF0(MP_QSTR_sorted, (const byte*)"\x5e\x15\x06" "sorted")
QDEF0(MP_QSTR_split, (const byte*)"\xb7\x33\x05" "split")
QDEF0(MP_QSTR_start, (const byte*)"\x85\xef\x05" "start")
QDEF0(MP_QSTR_startswith, (const byte*)"\x74\xe8\x0a" "startswith")
QDEF0(MP_QSTR_staticmethod, (const byte*)"\x62\xaf\x0c" "staticmethod")
QDEF0(MP_QSTR_step, (const byte*)"\x57\x36\x04" "step")
QDEF0(MP_QSTR_stop, (const byte*)"\x9d\x36\x04" "stop")
QDEF0(MP_QSTR_str, (const byte*)"\x50\x8d\x03" "str")
QDEF0(MP_QSTR_strip, (const byte*)"\x29\x1e\x05" "strip")
QDEF0(MP_QSTR_sum, (const byte*)"\x2e\x8d\x03" "sum")
QDEF0(MP_QSTR_super, (const byte*)"\xc4\xb2\x05" "super")
QDEF0(MP_QSTR_throw, (const byte*)"\xb3\x44\x05" "throw")
QDEF0(MP_QSTR_to_bytes, (const byte*)"\xd8\x3e\x08" "to_bytes")
QDEF0(MP_QSTR_tuple, (const byte*)"\xfd\x41\x05" "tuple")
QDEF0(MP_QSTR_type, (const byte*)"\x9d\x7f\x04" "type")
QDEF0(MP_QSTR_update, (const byte*)"\xb4\x76\x06" "update")
QDEF0(MP_QSTR_upper, (const byte*)"\x27\x94\x05" "upper")
QDEF0(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x82\x05" "utf-8")
QDEF0(MP_QSTR_value, (const byte*)"\x4e\x34\x05" "value")
QDEF0(MP_QSTR_values, (const byte*)"\x7d\xbe\x06" "values")
QDEF0(MP_QSTR_write, (const byte*)"\x98\xa8\x05" "write")
QDEF0(MP_QSTR_zip, (const byte*)"\xe6\xac\x03" "zip")
QDEF0(MP_QSTR___abs__, (const byte*)"\x95\xd6\x07" "__abs__")
QDEF0(MP_QSTR___add__, (const byte*)"\xc4\x82\x07" "__add__")
QDEF0(MP_QSTR___aenter__, (const byte*)"\x4c\x84\x0a" "__aenter__")
QDEF0(MP_QSTR___aexit__, (const byte*)"\xc4\xcf\x09" "__aexit__")
QDEF0(MP_QSTR___aiter__, (const byte*)"\x4e\x2b\x09" "__aiter__")
QDEF0(MP_QSTR___and__, (const byte*)"\x0e\xdb\x07" "__and__")
QDEF0(MP_QSTR___anext__, (const byte*)"\x83\xb4\x09" "__anext__")
QDEF0(MP_QSTR___bases__, (const byte*)"\x03\x30\x09" "__bases__")
QDEF0(MP_QSTR___bool__, (const byte*)"\x2b\x65\x08" "__bool__")
QDEF0(MP_QSTR___build_class__, (const byte*)"\x42\x88\x0f" "__build_class__")
QDEF0(MP_QSTR___contains__, (const byte*)"\xc6\x5f\x0c" "__contains__")
QDEF0(MP_QSTR___del__, (const byte*)"\x68\x37\x07" "__del__")
QDEF0(MP_QSTR___delattr__, (const byte*)"\x5b\x77\x0b" "__delattr__")
QDEF0(MP_QSTR___delete__, (const byte*)"\xdc\xed\x0a" "__delete__")
QDEF0(MP_QSTR___dict__, (const byte*)"\x7f\x54\x08" "__dict__")
QDEF0(MP_QSTR___divmod__, (const byte*)"\x78\x11\x0a" "__divmod__")
QDEF0(MP_QSTR___eq__, (const byte*)"\x71\x3e\x06" "__eq__")
QDEF0(MP_QSTR___file__, (const byte*)"\x03\x54\x08" "__file__")
QDEF0(MP_QSTR___floordiv__, (const byte*)"\x46\x5f\x0c" "__floordiv__")
QDEF0(MP_QSTR___ge__, (const byte*)"\xa7\x46\x06" "__ge__")
QDEF0(MP_QSTR___get__, (const byte*)"\xb3\x8f\x07" "__get__")
QDEF0(MP_QSTR___globals__, (const byte*)"\x9d\xae\x0b" "__globals__")
QDEF0(MP_QSTR___gt__, (const byte*)"\xb6\x82\x06" "__gt__")
QDEF0(MP_QSTR___iadd__, (const byte*)"\x6d\x4a\x08" "__iadd__")
QDEF0(MP_QSTR___iand__, (const byte*)"\xa7\x21\x08" "__iand__")
QDEF0(MP_QSTR___ifloordiv__, (const byte*)"\x4f\x0f\x0d" "__ifloordiv__")
QDEF0(MP_QSTR___ilshift__, (const byte*)"\x80\xa2\x0b" "__ilshift__")
QDEF0(MP_QSTR___imatmul__, (const byte*)"\xc0\x6e\x0b" "__imatmul__")
QDEF0(MP_QSTR___imod__, (const byte*)"\x4a\x86\x08" "__imod__")
QDEF0(MP_QSTR___import__, (const byte*)"\x38\x3e\x0a" "__import__")
QDEF0(MP_QSTR___imul__, (const byte*)"\x18\xce\x08" "__imul__")
QDEF0(MP_QSTR___invert__, (const byte*)"\xf7\x77\x0a" "__invert__")
QDEF0(MP_QSTR___ior__, (const byte*)"\xf1\x8f\x07" "__ior__")
QDEF0(MP_QSTR___ipow__, (const byte*)"\x84\xd5\x08" "__ipow__")
QDEF0(MP_QSTR___irshift__, (const byte*)"\xde\xf8\x0b" "__irshift__")
QDEF0(MP_QSTR___isub__, (const byte*)"\x08\x78\x08" "__isub__")
QDEF0(MP_QSTR___itruediv__, (const byte*)"\x21\x02\x0c" "__itruediv__")
QDEF0(MP_QSTR___ixor__, (const byte*)"\x09\xb9\x08" "__ixor__")
QDEF0(MP_QSTR___le__, (const byte*)"\xcc\x13\x06" "__le__")
QDEF0(MP_QSTR___lshift__, (const byte*)"\x09\x88\x0a" "__lshift__")
QDEF0(MP_QSTR___lt__, (const byte*)"\x5d\x68\x06" "__lt__")
QDEF0(MP_QSTR___matmul__, (const byte*)"\x49\xf3\x0a" "__matmul__")
QDEF0(MP_QSTR___mod__, (const byte*)"\x63\x37\x07" "__mod__")
QDEF0(MP_QSTR___mul__, (const byte*)"\x31\x42\x07" "__mul__")
QDEF0(MP_QSTR___ne__, (const byte*)"\x0e\x0b\x06" "__ne__")
QDEF0(MP_QSTR___neg__, (const byte*)"\x69\xd5\x07" "__neg__")
QDEF0(MP_QSTR___or__, (const byte*)"\x38\xbb\x06" "__or__")
QDEF0(MP_QSTR___path__, (const byte*)"\xc8\x23\x08" "__path__")
QDEF0(MP_QSTR___pos__, (const byte*)"\x29\xf0\x07" "__pos__")
QDEF0(MP_QSTR___pow__, (const byte*)"\x2d\x00\x07" "__pow__")
QDEF0(MP_QSTR___radd__, (const byte*)"\x16\xc5\x08" "__radd__")
QDEF0(MP_QSTR___rand__, (const byte*)"\xdc\x2e\x08" "__rand__")
QDEF0(MP_QSTR___repl_print__, (const byte*)"\x00\xbb\x0e" "__repl_print__")
QDEF0(MP_QSTR___reversed__, (const byte*)"\x61\xff\x0c" "__reversed__")
QDEF0(MP_QSTR___rfloordiv__, (const byte*)"\x54\x98\x0d" "__rfloordiv__")
QDEF0(MP_QSTR___rlshift__, (const byte*)"\x1b\xd1\x0b" "__rlshift__")
QDEF0(MP_QSTR___rmatmul__, (const byte*)"\xdb\x03\x0b" "__rmatmul__")
QDEF0(MP_QSTR___rmod__, (const byte*)"\x31\x8a\x08" "__rmod__")
QDEF0(MP_QSTR___rmul__, (const byte*)"\x63\x01\x08" "__rmul__")
QDEF0(MP_QSTR___ror__, (const byte*)"\x2a\xdc\x07" "__ror__")
QDEF0(MP_QSTR___rpow__, (const byte*)"\xff\x9a\x08" "__rpow__")
QDEF0(MP_QSTR___rrshift__, (const byte*)"\xc5\x9d\x0b" "__rrshift__")
QDEF0(MP_QSTR___rshift__, (const byte*)"\x57\x98\x0a" "__rshift__")
QDEF0(MP_QSTR___rsub__, (const byte*)"\x73\x77\x08" "__rsub__")
QDEF0(MP_QSTR___rtruediv__, (const byte*)"\x5a\xd7\x0c" "__rtruediv__")
QDEF0(MP_QSTR___rxor__, (const byte*)"\xf2\x86\x08" "__rxor__")
QDEF0(MP_QSTR___set__, (const byte*)"\xa7\xb3\x07" "__set__")
QDEF0(MP_QSTR___setattr__, (const byte*)"\x54\x19\x0b" "__setattr__")
QDEF0(MP_QSTR___sub__, (const byte*)"\x21\x09\x07" "__sub__")
QDEF0(MP_QSTR___traceback__, (const byte*)"\x4f\xcf\x0d" "__traceback__")
QDEF0(MP_QSTR___truediv__, (const byte*)"\x88\xef\x0b" "__truediv__")
QDEF0(MP_QSTR___xor__, (const byte*)"\x20\xec\x07" "__xor__")
QDEF1(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x1a\x03" "%#o")
QDEF1(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x1a\x03" "%#x")
QDEF1(MP_QSTR__slash_lib, (const byte*)"\x8d\x9c\x04" "/lib")
QDEF1(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x8d\x0a" "<dictcomp>")
QDEF1(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x6a\x09" "<genexpr>")
QDEF1(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x8c\x08" "<lambda>")
QDEF1(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x15\x0a" "<listcomp>")
QDEF1(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x51\x09" "<setcomp>")
QDEF1(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x63\x07" "<stdin>")
QDEF1(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x53\x08" "<string>")
QDEF1(MP_QSTR_ADC, (const byte*)"\x63\xb6\x03" "ADC")
QDEF1(MP_QSTR_ADCBlock, (const byte*)"\x2a\x30\x08" "ADCBlock")
QDEF1(MP_QSTR_AF_INET, (const byte*)"\xeb\xb7\x07" "AF_INET")
QDEF1(MP_QSTR_AF_INET6, (const byte*)"\x7d\xb5\x08" "AF_INET6")
QDEF1(MP_QSTR_AP_IF, (const byte*)"\x04\x96\x05" "AP_IF")
QDEF1(MP_QSTR_ARRAY, (const byte*)"\x5c\x7a\x05" "ARRAY")
QDEF1(MP_QSTR_ATTN_0DB, (const byte*)"\x23\x45\x08" "ATTN_0DB")
QDEF1(MP_QSTR_ATTN_11DB, (const byte*)"\x13\x1d\x09" "ATTN_11DB")
QDEF1(MP_QSTR_ATTN_2_5DB, (const byte*)"\xeb\xf6\x0a" "ATTN_2_5DB")
QDEF1(MP_QSTR_ATTN_6DB, (const byte*)"\x25\x2d\x08" "ATTN_6DB")
QDEF1(MP_QSTR_AUTH_CHAP, (const byte*)"\x48\x85\x09" "AUTH_CHAP")
QDEF1(MP_QSTR_AUTH_MAX, (const byte*)"\x66\x8d\x08" "AUTH_MAX")
QDEF1(MP_QSTR_AUTH_NONE, (const byte*)"\x18\x46\x09" "AUTH_NONE")
QDEF1(MP_QSTR_AUTH_OPEN, (const byte*)"\x46\xb3\x09" "AUTH_OPEN")
QDEF1(MP_QSTR_AUTH_PAP, (const byte*)"\x73\x12\x08" "AUTH_PAP")
QDEF1(MP_QSTR_AUTH_WEP, (const byte*)"\xf0\x0d\x08" "AUTH_WEP")
QDEF1(MP_QSTR_AUTH_WPA2_ENTERPRISE, (const byte*)"\x2c\x6f\x14" "AUTH_WPA2_ENTERPRISE")
QDEF1(MP_QSTR_AUTH_WPA2_PSK, (const byte*)"\xf1\xfe\x0d" "AUTH_WPA2_PSK")
QDEF1(MP_QSTR_AUTH_WPA_PSK, (const byte*)"\xc3\x6c\x0c" "AUTH_WPA_PSK")
QDEF1(MP_QSTR_AUTH_WPA_WPA2_PSK, (const byte*)"\xe8\x79\x11" "AUTH_WPA_WPA2_PSK")
QDEF1(MP_QSTR_BFINT16, (const byte*)"\x95\xe2\x07" "BFINT16")
QDEF1(MP_QSTR_BFINT32, (const byte*)"\x53\xe2\x07" "BFINT32")
QDEF1(MP_QSTR_BFINT8, (const byte*)"\x4a\x9a\x06" "BFINT8")
QDEF1(MP_QSTR_BFUINT16, (const byte*)"\x40\xa6\x08" "BFUINT16")
QDEF1(MP_QSTR_BFUINT32, (const byte*)"\x06\xa6\x08" "BFUINT32")
QDEF1(MP_QSTR_BFUINT8, (const byte*)"\xbf\xaf\x07" "BFUINT8")
QDEF1(MP_QSTR_BF_LEN, (const byte*)"\x19\xb0\x06" "BF_LEN")
QDEF1(MP_QSTR_BF_POS, (const byte*)"\x52\x9d\x06" "BF_POS")
QDEF1(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x51\x0a" "BIG_ENDIAN")
QDEF1(MP_QSTR_BLE, (const byte*)"\xae\xc3\x03" "BLE")
QDEF1(MP_QSTR_BOOT, (const byte*)"\xf3\x3c\x04" "BOOT")
QDEF1(MP_QSTR_BufferedWriter, (const byte*)"\xeb\x2c\x0e" "BufferedWriter")
QDEF1(MP_QSTR_BytesIO, (const byte*)"\x1a\xb7\x07" "BytesIO")
QDEF1(MP_QSTR_CTS, (const byte*)"\x61\xd1\x03" "CTS")
QDEF1(MP_QSTR_CancelledError, (const byte*)"\xf6\x9b\x0e" "CancelledError")
QDEF1(MP_QSTR_DAC, (const byte*)"\x03\xba\x03" "DAC")
QDEF1(MP_QSTR_DEEPSLEEP, (const byte*)"\x7e\xf3\x09" "DEEPSLEEP")
QDEF1(MP_QSTR_DEEPSLEEP_RESET, (const byte*)"\x14\x0e\x0f" "DEEPSLEEP_RESET")
QDEF1(MP_QSTR_DESC, (const byte*)"\x34\x0d\x04" "DESC")
QDEF1(MP_QSTR_DecompIO, (const byte*)"\x93\xb7\x08" "DecompIO")
QDEF1(MP_QSTR_Device, (const byte*)"\x1d\xb7\x06" "Device")
QDEF1(MP_QSTR_EACCES, (const byte*)"\x37\xc2\x06" "EACCES")
QDEF1(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x11\x0a" "EADDRINUSE")
QDEF1(MP_QSTR_EAGAIN, (const byte*)"\x20\xec\x06" "EAGAIN")
QDEF1(MP_QSTR_EALREADY, (const byte*)"\x46\x15\x08" "EALREADY")
QDEF1(MP_QSTR_EBADF, (const byte*)"\x61\xa3\x05" "EBADF")
QDEF1(MP_QSTR_ECONNABORTED, (const byte*)"\x27\xab\x0c" "ECONNABORTED")
QDEF1(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x2c\x0c" "ECONNREFUSED")
QDEF1(MP_QSTR_ECONNRESET, (const byte*)"\x19\xfb\x0a" "ECONNRESET")
QDEF1(MP_QSTR_EEXIST, (const byte*)"\x53\xad\x06" "EEXIST")
QDEF1(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x25\x0c" "EHOSTUNREACH")
QDEF1(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\xa0\x0b" "EINPROGRESS")
QDEF1(MP_QSTR_EINVAL, (const byte*)"\x5c\xff\x06" "EINVAL")
QDEF1(MP_QSTR_EIO, (const byte*)"\x86\xa6\x03" "EIO")
QDEF1(MP_QSTR_EISDIR, (const byte*)"\xa5\x4f\x06" "EISDIR")
QDEF1(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x87\x07" "ENOBUFS")
QDEF1(MP_QSTR_ENODEV, (const byte*)"\xb6\x67\x06" "ENODEV")
QDEF1(MP_QSTR_ENOENT, (const byte*)"\x5e\x65\x06" "ENOENT")
QDEF1(MP_QSTR_ENOMEM, (const byte*)"\xa4\x85\x06" "ENOMEM")
QDEF1(MP_QSTR_ENOTCONN, (const byte*)"\x79\xd7\x08" "ENOTCONN")
QDEF1(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x97\x0a" "EOPNOTSUPP")
QDEF1(MP_QSTR_EPERM, (const byte*)"\xea\x7f\x05" "EPERM")
QDEF1(MP_QSTR_ETH_CONNECTED, (const byte*)"\xbc\xc7\x0d" "ETH_CONNECTED")
QDEF1(MP_QSTR_ETH_DISCONNECTED, (const byte*)"\x22\xc5\x10" "ETH_DISCONNECTED")
QDEF1(MP_QSTR_ETH_GOT_IP, (const byte*)"\xf9\xe6\x0a" "ETH_GOT_IP")
QDEF1(MP_QSTR_ETH_INITIALIZED, (const byte*)"\x2f\x28\x0f" "ETH_INITIALIZED")
QDEF1(MP_QSTR_ETH_STARTED, (const byte*)"\xe2\x5b\x0b" "ETH_STARTED")
QDEF1(MP_QSTR_ETH_STOPPED, (const byte*)"\x2a\xe6\x0b" "ETH_STOPPED")
QDEF1(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\xf8\x09" "ETIMEDOUT")
QDEF1(MP_QSTR_EXT0_WAKE, (const byte*)"\x5b\xf3\x09" "EXT0_WAKE")
QDEF1(MP_QSTR_EXT1_WAKE, (const byte*)"\xfa\xda\x09" "EXT1_WAKE")
QDEF1(MP_QSTR_FAIL, (const byte*)"\x27\xf3\x04" "FAIL")
QDEF1(MP_QSTR_FLAG_INDICATE, (const byte*)"\xcf\xa9\x0d" "FLAG_INDICATE")
QDEF1(MP_QSTR_FLAG_NOTIFY, (const byte*)"\xd5\x5d\x0b" "FLAG_NOTIFY")
QDEF1(MP_QSTR_FLAG_READ, (const byte*)"\x64\x6d\x09" "FLAG_READ")
QDEF1(MP_QSTR_FLAG_WRITE, (const byte*)"\x8b\x63\x0a" "FLAG_WRITE")
QDEF1(MP_QSTR_FLAG_WRITE_NO_RESPONSE, (const byte*)"\xa9\xf7\x16" "FLAG_WRITE_NO_RESPONSE")
QDEF1(MP_QSTR_FLOAT32, (const byte*)"\xb4\x87\x07" "FLOAT32")
QDEF1(MP_QSTR_FLOAT64, (const byte*)"\x17\x87\x07" "FLOAT64")
QDEF1(MP_QSTR_FONT_ASC12_8, (const byte*)"\xbc\xfc\x0c" "FONT_ASC12_8")
QDEF1(MP_QSTR_FONT_ASC16_8, (const byte*)"\xb8\x0c\x0c" "FONT_ASC16_8")
QDEF1(MP_QSTR_FONT_ASC24_12, (const byte*)"\xe2\xaa\x0d" "FONT_ASC24_12")
QDEF1(MP_QSTR_FONT_ASC32_16, (const byte*)"\xe1\xa3\x0d" "FONT_ASC32_16")
QDEF1(MP_QSTR_FONT_ASC8_8, (const byte*)"\xe7\x5b\x0b" "FONT_ASC8_8")
QDEF1(MP_QSTR_FONT_HZK12, (const byte*)"\x13\xad\x0a" "FONT_HZK12")
QDEF1(MP_QSTR_FONT_HZK16, (const byte*)"\x17\xad\x0a" "FONT_HZK16")
QDEF1(MP_QSTR_FONT_HZK24, (const byte*)"\x76\xad\x0a" "FONT_HZK24")
QDEF1(MP_QSTR_FONT_HZK32, (const byte*)"\x51\xad\x0a" "FONT_HZK32")
QDEF1(MP_QSTR_FallingEdge, (const byte*)"\xa1\x8f\x0b" "FallingEdge")
QDEF1(MP_QSTR_FileIO, (const byte*)"\xc5\x15\x06" "FileIO")
QDEF1(MP_QSTR_FrameBuffer, (const byte*)"\xd8\xbe\x0b" "FrameBuffer")
QDEF1(MP_QSTR_FrameBuffer1, (const byte*)"\xe9\x99\x0c" "FrameBuffer1")
QDEF1(MP_QSTR_GPIO, (const byte*)"\x14\xe0\x04" "GPIO")
QDEF1(MP_QSTR_GS2_HMSB, (const byte*)"\x28\xc3\x08" "GS2_HMSB")
QDEF1(MP_QSTR_GS4_HMSB, (const byte*)"\x6e\x73\x08" "GS4_HMSB")
QDEF1(MP_QSTR_GS8, (const byte*)"\xa9\xc0\x03" "GS8")
QDEF1(MP_QSTR_Gateway, (const byte*)"\x9d\x89\x07" "Gateway")
QDEF1(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x51\x0a" "HARD_RESET")
QDEF1(MP_QSTR_HEAP_DATA, (const byte*)"\x16\x76\x09" "HEAP_DATA")
QDEF1(MP_QSTR_HEAP_EXEC, (const byte*)"\x9d\x51\x09" "HEAP_EXEC")
QDEF1(MP_QSTR_I2C, (const byte*)"\x5d\xdf\x03" "I2C")
QDEF1(MP_QSTR_I2S, (const byte*)"\x4d\xdf\x03" "I2S")
QDEF1(MP_QSTR_IN, (const byte*)"\x22\x73\x02" "IN")
QDEF1(MP_QSTR_INCL, (const byte*)"\x0d\xbb\x04" "INCL")
QDEF1(MP_QSTR_INT, (const byte*)"\x36\xd7\x03" "INT")
QDEF1(MP_QSTR_INT16, (const byte*)"\x91\x76\x05" "INT16")
QDEF1(MP_QSTR_INT32, (const byte*)"\x57\x76\x05" "INT32")
QDEF1(MP_QSTR_INT64, (const byte*)"\xf4\x75\x05" "INT64")
QDEF1(MP_QSTR_INT8, (const byte*)"\xce\xbd\x04" "INT8")
QDEF1(MP_QSTR_INV_CTS, (const byte*)"\x8f\x67\x07" "INV_CTS")
QDEF1(MP_QSTR_INV_RTS, (const byte*)"\x5e\xac\x07" "INV_RTS")
QDEF1(MP_QSTR_INV_RX, (const byte*)"\x61\xde\x06" "INV_RX")
QDEF1(MP_QSTR_INV_TX, (const byte*)"\xa7\xde\x06" "INV_TX")
QDEF1(MP_QSTR_IOBase, (const byte*)"\x36\xbe\x06" "IOBase")
QDEF1(MP_QSTR_IPPROTO_IP, (const byte*)"\x0c\x8e\x0a" "IPPROTO_IP")
QDEF1(MP_QSTR_IPPROTO_TCP, (const byte*)"\xb2\xde\x0b" "IPPROTO_TCP")
QDEF1(MP_QSTR_IPPROTO_UDP, (const byte*)"\x54\xdb\x0b" "IPPROTO_UDP")
QDEF1(MP_QSTR_IP_ADD_MEMBERSHIP, (const byte*)"\x6f\x5b\x11" "IP_ADD_MEMBERSHIP")
QDEF1(MP_QSTR_IRQ, (const byte*)"\xaf\xda\x03" "IRQ")
QDEF1(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\xc0\x0b" "IRQ_FALLING")
QDEF1(MP_QSTR_IRQ_RISING, (const byte*)"\x78\xed\x0a" "IRQ_RISING")
QDEF1(MP_QSTR_LAN, (const byte*)"\x06\xdc\x03" "LAN")
QDEF1(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x5b\x0d" "LITTLE_ENDIAN")
QDEF1(MP_QSTR_LOG_DEBUG, (const byte*)"\x6f\xdb\x09" "LOG_DEBUG")
QDEF1(MP_QSTR_LOG_ERROR, (const byte*)"\x06\xce\x09" "LOG_ERROR")
QDEF1(MP_QSTR_LOG_INFO, (const byte*)"\xd0\x75\x08" "LOG_INFO")
QDEF1(MP_QSTR_LOG_NONE, (const byte*)"\xf4\xd3\x08" "LOG_NONE")
QDEF1(MP_QSTR_LOG_VERBOSE, (const byte*)"\x24\xbd\x0b" "LOG_VERBOSE")
QDEF1(MP_QSTR_LOG_WARNING, (const byte*)"\x94\xb9\x0b" "LOG_WARNING")
QDEF1(MP_QSTR_LONG, (const byte*)"\x0f\x65\x04" "LONG")
QDEF1(MP_QSTR_LONGLONG, (const byte*)"\x85\xd4\x08" "LONGLONG")
QDEF1(MP_QSTR_LSB, (const byte*)"\xd8\xde\x03" "LSB")
QDEF1(MP_QSTR_LockType, (const byte*)"\x36\x20\x08" "LockType")
QDEF1(MP_QSTR_MODE_11B, (const byte*)"\xfb\x44\x08" "MODE_11B")
QDEF1(MP_QSTR_MODE_11G, (const byte*)"\xfe\x44\x08" "MODE_11G")
QDEF1(MP_QSTR_MODE_11N, (const byte*)"\xf7\x44\x08" "MODE_11N")
QDEF1(MP_QSTR_MONO, (const byte*)"\xa6\xc0\x04" "MONO")
QDEF1(MP_QSTR_MONO_HLSB, (const byte*)"\x4c\x98\x09" "MONO_HLSB")
QDEF1(MP_QSTR_MONO_HMSB, (const byte*)"\xcd\x83\x09" "MONO_HMSB")
QDEF1(MP_QSTR_MONO_VLSB, (const byte*)"\x12\xfc\x09" "MONO_VLSB")
QDEF1(MP_QSTR_MSB, (const byte*)"\x59\xca\x03" "MSB")
QDEF1(MP_QSTR_MVLSB, (const byte*)"\x03\x14\x05" "MVLSB")
QDEF1(MP_QSTR_NATIVE, (const byte*)"\x04\x8e\x06" "NATIVE")
QDEF1(MP_QSTR_NULL, (const byte*)"\x9e\xa8\x04" "NULL")
QDEF1(MP_QSTR_NVS, (const byte*)"\xee\xd6\x03" "NVS")
QDEF1(MP_QSTR_None, (const byte*)"\x6f\xd1\x04" "None")
QDEF1(MP_QSTR_NotImplemented, (const byte*)"\x3e\xc6\x0e" "NotImplemented")
QDEF1(MP_QSTR_OK, (const byte*)"\x61\x73\x02" "OK")
QDEF1(MP_QSTR_ONE_SHOT, (const byte*)"\x5e\xff\x08" "ONE_SHOT")
QDEF1(MP_QSTR_ON_CLOSE, (const byte*)"\x2d\xad\x08" "ON_CLOSE")
QDEF1(MP_QSTR_ON_CONNECT, (const byte*)"\x05\x5a\x0a" "ON_CONNECT")
QDEF1(MP_QSTR_ON_DISCONNECT, (const byte*)"\x9b\xe2\x0d" "ON_DISCONNECT")
QDEF1(MP_QSTR_ON_ERROR, (const byte*)"\x63\xc2\x08" "ON_ERROR")
QDEF1(MP_QSTR_ON_LOGIN, (const byte*)"\x58\x64\x08" "ON_LOGIN")
QDEF1(MP_QSTR_ON_LOGOUT, (const byte*)"\xf1\xc3\x09" "ON_LOGOUT")
QDEF1(MP_QSTR_ON_PROPS, (const byte*)"\x55\x54\x08" "ON_PROPS")
QDEF1(MP_QSTR_ON_RAWDATA, (const byte*)"\xaf\x04\x0a" "ON_RAWDATA")
QDEF1(MP_QSTR_ON_SERVICE, (const byte*)"\x46\x63\x0a" "ON_SERVICE")
QDEF1(MP_QSTR_ON_SUBCRIBE, (const byte*)"\x40\x17\x0b" "ON_SUBCRIBE")
QDEF1(MP_QSTR_ON_SUBREGISTER, (const byte*)"\x56\x40\x0e" "ON_SUBREGISTER")
QDEF1(MP_QSTR_ON_TOPOADD, (const byte*)"\x9e\x39\x0a" "ON_TOPOADD")
QDEF1(MP_QSTR_ON_TOPOGET, (const byte*)"\xa9\x31\x0a" "ON_TOPOGET")
QDEF1(MP_QSTR_ON_TOPOREMOVE, (const byte*)"\xd9\xda\x0d" "ON_TOPOREMOVE")
QDEF1(MP_QSTR_OPEN_DRAIN, (const byte*)"\x5e\x48\x0a" "OPEN_DRAIN")
QDEF1(MP_QSTR_OUT, (const byte*)"\x0b\xe3\x03" "OUT")
QDEF1(MP_QSTR_OrderedDict, (const byte*)"\xf0\x7e\x0b" "OrderedDict")
QDEF1(MP_QSTR_PARITY_EVEN, (const byte*)"\x05\x9f\x0b" "PARITY_EVEN")
QDEF1(MP_QSTR_PARITY_NONE, (const byte*)"\x97\x20\x0b" "PARITY_NONE")
QDEF1(MP_QSTR_PARITY_ODD, (const byte*)"\x32\x39\x0a" "PARITY_ODD")
QDEF1(MP_QSTR_PERIODIC, (const byte*)"\x0a\x35\x08" "PERIODIC")
QDEF1(MP_QSTR_PHY_DP83848, (const byte*)"\x90\x31\x0b" "PHY_DP83848")
QDEF1(MP_QSTR_PHY_IP101, (const byte*)"\x72\x61\x09" "PHY_IP101")
QDEF1(MP_QSTR_PHY_LAN8720, (const byte*)"\xf5\x1f\x0b" "PHY_LAN8720")
QDEF1(MP_QSTR_PHY_RTL8201, (const byte*)"\xda\xf4\x0b" "PHY_RTL8201")
QDEF1(MP_QSTR_PIN_WAKE, (const byte*)"\xd5\x94\x08" "PIN_WAKE")
QDEF1(MP_QSTR_POLLERR, (const byte*)"\xdf\xc0\x07" "POLLERR")
QDEF1(MP_QSTR_POLLHUP, (const byte*)"\x77\x8a\x07" "POLLHUP")
QDEF1(MP_QSTR_POLLIN, (const byte*)"\x7d\x61\x06" "POLLIN")
QDEF1(MP_QSTR_POLLOUT, (const byte*)"\x74\x85\x07" "POLLOUT")
QDEF1(MP_QSTR_PPP, (const byte*)"\x35\x0d\x03" "PPP")
QDEF1(MP_QSTR_PTR, (const byte*)"\xb3\x0c\x03" "PTR")
QDEF1(MP_QSTR_PULL_DOWN, (const byte*)"\xad\xfb\x09" "PULL_DOWN")
QDEF1(MP_QSTR_PULL_HOLD, (const byte*)"\x50\xee\x09" "PULL_HOLD")
QDEF1(MP_QSTR_PULL_UP, (const byte*)"\xba\x5e\x07" "PULL_UP")
QDEF1(MP_QSTR_PWM, (const byte*)"\x4f\x0d\x03" "PWM")
QDEF1(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\xcb\x0b" "PWRON_RESET")
QDEF1(MP_QSTR_Partition, (const byte*)"\xa7\x43\x09" "Partition")
QDEF1(MP_QSTR_Pin, (const byte*)"\x12\x14\x03" "Pin")
QDEF1(MP_QSTR_RESERVE_MEM, (const byte*)"\xff\x5f\x0b" "RESERVE_MEM")
QDEF1(MP_QSTR_RGB565, (const byte*)"\x64\xcc\x06" "RGB565")
QDEF1(MP_QSTR_RGB888, (const byte*)"\xaa\xd0\x06" "RGB888")
QDEF1(MP_QSTR_RMT, (const byte*)"\x8e\x07\x03" "RMT")
QDEF1(MP_QSTR_RTC, (const byte*)"\xa0\x04\x03" "RTC")
QDEF1(MP_QSTR_RTS, (const byte*)"\xb0\x04\x03" "RTS")
QDEF1(MP_QSTR_RUNNING, (const byte*)"\x42\x45\x07" "RUNNING")
QDEF1(MP_QSTR_RX, (const byte*)"\x8f\x74\x02" "RX")
QDEF1(MP_QSTR_RisingEdge, (const byte*)"\xae\xa8\x0a" "RisingEdge")
QDEF1(MP_QSTR_SDCard, (const byte*)"\xa6\xaf\x06" "SDCard")
QDEF1(MP_QSTR_SHORT, (const byte*)"\xf7\x1b\x05" "SHORT")
QDEF1(MP_QSTR_SLEEP, (const byte*)"\x0a\x27\x05" "SLEEP")
QDEF1(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x14\x0a" "SOCK_DGRAM")
QDEF1(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x96\x08" "SOCK_RAW")
QDEF1(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\xbe\x0b" "SOCK_STREAM")
QDEF1(MP_QSTR_SOFT_RESET, (const byte*)"\x01\xc6\x0a" "SOFT_RESET")
QDEF1(MP_QSTR_SOL_SOCKET, (const byte*)"\x0f\xdf\x0a" "SOL_SOCKET")
QDEF1(MP_QSTR_SO_REUSEADDR, (const byte*)"\x21\x53\x0c" "SO_REUSEADDR")
QDEF1(MP_QSTR_SPI, (const byte*)"\xef\x11\x03" "SPI")
QDEF1(MP_QSTR_STAT_ASSOC_FAIL, (const byte*)"\xf8\xa8\x0f" "STAT_ASSOC_FAIL")
QDEF1(MP_QSTR_STAT_BEACON_TIMEOUT, (const byte*)"\xa8\x58\x13" "STAT_BEACON_TIMEOUT")
QDEF1(MP_QSTR_STAT_CONNECTING, (const byte*)"\xf6\xb2\x0f" "STAT_CONNECTING")
QDEF1(MP_QSTR_STAT_GOT_IP, (const byte*)"\xb2\xf2\x0b" "STAT_GOT_IP")
QDEF1(MP_QSTR_STAT_HANDSHAKE_TIMEOUT, (const byte*)"\xfb\x42\x16" "STAT_HANDSHAKE_TIMEOUT")
QDEF1(MP_QSTR_STAT_IDLE, (const byte*)"\x0c\x1f\x09" "STAT_IDLE")
QDEF1(MP_QSTR_STAT_NO_AP_FOUND, (const byte*)"\xee\xcd\x10" "STAT_NO_AP_FOUND")
QDEF1(MP_QSTR_STAT_WRONG_PASSWORD, (const byte*)"\x0b\x98\x13" "STAT_WRONG_PASSWORD")
QDEF1(MP_QSTR_STA_IF, (const byte*)"\xb3\x1b\x06" "STA_IF")
QDEF1(MP_QSTR_STEREO, (const byte*)"\xbf\x1e\x06" "STEREO")
QDEF1(MP_QSTR_Signal, (const byte*)"\x9b\xe4\x06" "Signal")
QDEF1(MP_QSTR_SoftI2C, (const byte*)"\x13\xf2\x07" "SoftI2C")
QDEF1(MP_QSTR_SoftSPI, (const byte*)"\x21\x58\x07" "SoftSPI")
QDEF1(MP_QSTR_StopAsyncIteration, (const byte*)"\xec\xf0\x12" "StopAsyncIteration")
QDEF1(MP_QSTR_StringIO, (const byte*)"\x76\x76\x08" "StringIO")
QDEF1(MP_QSTR_TIMER, (const byte*)"\xa2\x1f\x05" "TIMER")
QDEF1(MP_QSTR_TIMER_WAKE, (const byte*)"\x65\x11\x0a" "TIMER_WAKE")
QDEF1(MP_QSTR_TOUCHPAD_WAKE, (const byte*)"\xb2\x8c\x0d" "TOUCHPAD_WAKE")
QDEF1(MP_QSTR_TX, (const byte*)"\x49\x74\x02" "TX")
QDEF1(MP_QSTR_TYPE_APP, (const byte*)"\xe3\x9e\x08" "TYPE_APP")
QDEF1(MP_QSTR_TYPE_DATA, (const byte*)"\xf2\xc3\x09" "TYPE_DATA")
QDEF1(MP_QSTR_Task, (const byte*)"\x08\x42\x04" "Task")
QDEF1(MP_QSTR_TaskQueue, (const byte*)"\x99\x5c\x09" "TaskQueue")
QDEF1(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x8d\x0d" "TextIOWrapper")
QDEF1(MP_QSTR_Timer, (const byte*)"\xa2\x1f\x05" "Timer")
QDEF1(MP_QSTR_TouchPad, (const byte*)"\xd5\x8a\x08" "TouchPad")
QDEF1(MP_QSTR_UART, (const byte*)"\xb7\x19\x04" "UART")
QDEF1(MP_QSTR_UINT, (const byte*)"\x23\x3d\x04" "UINT")
QDEF1(MP_QSTR_UINT16, (const byte*)"\xc4\x17\x06" "UINT16")
QDEF1(MP_QSTR_UINT32, (const byte*)"\x82\x17\x06" "UINT32")
QDEF1(MP_QSTR_UINT64, (const byte*)"\x61\x18\x06" "UINT64")
QDEF1(MP_QSTR_UINT8, (const byte*)"\xbb\xe1\x05" "UINT8")
QDEF1(MP_QSTR_ULONG, (const byte*)"\x7a\x8d\x05" "ULONG")
QDEF1(MP_QSTR_ULONGLONG, (const byte*)"\x70\xc6\x09" "ULONGLONG")
QDEF1(MP_QSTR_ULP, (const byte*)"\x6c\xeb\x03" "ULP")
QDEF1(MP_QSTR_ULP_WAKE, (const byte*)"\x6b\x56\x08" "ULP_WAKE")
QDEF1(MP_QSTR_USHORT, (const byte*)"\xa2\xf4\x06" "USHORT")
QDEF1(MP_QSTR_UUID, (const byte*)"\xc8\xe9\x04" "UUID")
QDEF1(MP_QSTR_UnicodeError, (const byte*)"\x22\xd1\x0c" "UnicodeError")
QDEF1(MP_QSTR_VOID, (const byte*)"\x31\xf2\x04" "VOID")
QDEF1(MP_QSTR_VfsPosix, (const byte*)"\xbb\x4e\x08" "VfsPosix")
QDEF1(MP_QSTR_ViperTypeError, (const byte*)"\xdd\x05\x0e" "ViperTypeError")
QDEF1(MP_QSTR_WAKEUP_ALL_LOW, (const byte*)"\x0d\xaa\x0e" "WAKEUP_ALL_LOW")
QDEF1(MP_QSTR_WAKEUP_ANY_HIGH, (const byte*)"\x40\x48\x0f" "WAKEUP_ANY_HIGH")
QDEF1(MP_QSTR_WAKE_HIGH, (const byte*)"\x0c\xf7\x09" "WAKE_HIGH")
QDEF1(MP_QSTR_WAKE_LOW, (const byte*)"\x96\x2e\x08" "WAKE_LOW")
QDEF1(MP_QSTR_WDT, (const byte*)"\x62\x03\x03" "WDT")
QDEF1(MP_QSTR_WDT_RESET, (const byte*)"\x08\x72\x09" "WDT_RESET")
QDEF1(MP_QSTR_WIDTH_10BIT, (const byte*)"\xc2\x7c\x0b" "WIDTH_10BIT")
QDEF1(MP_QSTR_WIDTH_11BIT, (const byte*)"\xa3\xdf\x0b" "WIDTH_11BIT")
QDEF1(MP_QSTR_WIDTH_12BIT, (const byte*)"\x80\xa4\x0b" "WIDTH_12BIT")
QDEF1(MP_QSTR_WIDTH_9BIT, (const byte*)"\x5a\x2c\x0a" "WIDTH_9BIT")
QDEF1(MP_QSTR_WLAN, (const byte*)"\x11\x94\x04" "WLAN")
QDEF1(MP_QSTR__onewire, (const byte*)"\xf7\x79\x08" "_onewire")
QDEF1(MP_QSTR__task_queue, (const byte*)"\xd9\xc5\x0b" "_task_queue")
QDEF1(MP_QSTR__thread, (const byte*)"\xd4\x02\x07" "_thread")
QDEF1(MP_QSTR__uasyncio, (const byte*)"\xcf\x5f\x09" "_uasyncio")
QDEF1(MP_QSTR__webrepl, (const byte*)"\x21\x95\x08" "_webrepl")
QDEF1(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0b\x0a" "a2b_base64")
QDEF1(MP_QSTR_abs_tol, (const byte*)"\x7d\x6d\x07" "abs_tol")
QDEF1(MP_QSTR_accept, (const byte*)"\x85\x89\x06" "accept")
QDEF1(MP_QSTR_acos, (const byte*)"\x1b\xa0\x04" "acos")
QDEF1(MP_QSTR_acosh, (const byte*)"\x13\xa3\x05" "acosh")
QDEF1(MP_QSTR_acquire, (const byte*)"\x1d\xd3\x07" "acquire")
QDEF1(MP_QSTR_active, (const byte*)"\x69\xea\x06" "active")
QDEF1(MP_QSTR_add, (const byte*)"\x44\x32\x03" "add")
QDEF1(MP_QSTR_addTopo, (const byte*)"\xe0\x02\x07" "addTopo")
QDEF1(MP_QSTR_addr, (const byte*)"\xb6\x7a\x04" "addr")
QDEF1(MP_QSTR_addr_mode, (const byte*)"\x4a\x9e\x09" "addr_mode")
QDEF1(MP_QSTR_addressof, (const byte*)"\x5a\xf9\x09" "addressof")
QDEF1(MP_QSTR_addrsize, (const byte*)"\x93\x91\x08" "addrsize")
QDEF1(MP_QSTR_adv_data, (const byte*)"\x59\x08\x08" "adv_data")
QDEF1(MP_QSTR_aes, (const byte*)"\x32\x32\x03" "aes")
QDEF1(MP_QSTR_aliyunIoT, (const byte*)"\x11\x9e\x09" "aliyunIoT")
QDEF1(MP_QSTR_alloc_emergency_exception_buf, (const byte*)"\x78\x2a\x1d" "alloc_emergency_exception_buf")
QDEF1(MP_QSTR_allocate_lock, (const byte*)"\xec\xed\x0d" "allocate_lock")
QDEF1(MP_QSTR_arg, (const byte*)"\x91\x34\x03" "arg")
QDEF1(MP_QSTR_argv, (const byte*)"\xc7\xc6\x04" "argv")
QDEF1(MP_QSTR_array, (const byte*)"\x7c\x72\x05" "array")
QDEF1(MP_QSTR_asin, (const byte*)"\x50\xe5\x04" "asin")
QDEF1(MP_QSTR_asinh, (const byte*)"\x38\x8f\x05" "asinh")
QDEF1(MP_QSTR_atan, (const byte*)"\x1f\xbe\x04" "atan")
QDEF1(MP_QSTR_atan2, (const byte*)"\xcd\x81\x05" "atan2")
QDEF1(MP_QSTR_atanh, (const byte*)"\x97\x81\x05" "atanh")
QDEF1(MP_QSTR_atten, (const byte*)"\xaf\x50\x05" "atten")
QDEF1(MP_QSTR_authmode, (const byte*)"\xce\x65\x08" "authmode")
QDEF1(MP_QSTR_b2a_base64, (const byte*)"\x3c\x8f\x0a" "b2a_base64")
QDEF1(MP_QSTR_baudrate, (const byte*)"\xf5\xd8\x08" "baudrate")
QDEF1(MP_QSTR_bin, (const byte*)"\xe0\x48\x03" "bin")
QDEF1(MP_QSTR_bind, (const byte*)"\x84\x64\x04" "bind")
QDEF1(MP_QSTR_bits, (const byte*)"\x49\x68\x04" "bits")
QDEF1(MP_QSTR_bitstream, (const byte*)"\xa6\x15\x09" "bitstream")
QDEF1(MP_QSTR_blit, (const byte*)"\xf6\x50\x04" "blit")
QDEF1(MP_QSTR_block, (const byte*)"\xec\x65\x05" "block")
QDEF1(MP_QSTR_bound_method, (const byte*)"\x97\xa2\x0c" "bound_method")
QDEF1(MP_QSTR_bssid, (const byte*)"\x4a\x3c\x05" "bssid")
QDEF1(MP_QSTR_btree, (const byte*)"\xe1\x91\x05" "btree")
QDEF1(MP_QSTR_buf, (const byte*)"\x74\x49\x03" "buf")
QDEF1(MP_QSTR_buffer, (const byte*)"\xe5\xa0\x06" "buffer")
QDEF1(MP_QSTR_buffering, (const byte*)"\x25\xdb\x09" "buffering")
QDEF1(MP_QSTR_bytearray_at, (const byte*)"\x9c\x5c\x0c" "bytearray_at")
QDEF1(MP_QSTR_byteorder, (const byte*)"\x61\x99\x09" "byteorder")
QDEF1(MP_QSTR_bytes_at, (const byte*)"\xb6\x5d\x08" "bytes_at")
QDEF1(MP_QSTR_c, (const byte*)"\xc6\xb5\x01" "c")
QDEF1(MP_QSTR_cachesize, (const byte*)"\xcc\x78\x09" "cachesize")
QDEF1(MP_QSTR_calcsize, (const byte*)"\x4d\x38\x08" "calcsize")
QDEF1(MP_QSTR_callback, (const byte*)"\x4c\xf0\x08" "callback")
QDEF1(MP_QSTR_cancel, (const byte*)"\x03\x87\x06" "cancel")
QDEF1(MP_QSTR_cd, (const byte*)"\xe2\x6e\x02" "cd")
QDEF1(MP_QSTR_ceil, (const byte*)"\x06\xb0\x04" "ceil")
QDEF1(MP_QSTR_center, (const byte*)"\x4e\xbf\x06" "center")
QDEF1(MP_QSTR_cert, (const byte*)"\x25\xb1\x04" "cert")
QDEF1(MP_QSTR_channel, (const byte*)"\x26\x91\x07" "channel")
QDEF1(MP_QSTR_chdir, (const byte*)"\xb1\xb2\x05" "chdir")
QDEF1(MP_QSTR_choice, (const byte*)"\x2e\x33\x06" "choice")
QDEF1(MP_QSTR_clock_div, (const byte*)"\x89\x56\x09" "clock_div")
QDEF1(MP_QSTR_closure, (const byte*)"\x74\xca\x07" "closure")
QDEF1(MP_QSTR_cmath, (const byte*)"\xb6\xf4\x05" "cmath")
QDEF1(MP_QSTR_code, (const byte*)"\x68\xda\x04" "code")
QDEF1(MP_QSTR_collect, (const byte*)"\x9b\x65\x07" "collect")
QDEF1(MP_QSTR_commit, (const byte*)"\xb4\x21\x06" "commit")
QDEF1(MP_QSTR_compile, (const byte*)"\xf4\xc9\x07" "compile")
QDEF1(MP_QSTR_complex, (const byte*)"\xc5\x9d\x07" "complex")
QDEF1(MP_QSTR_config, (const byte*)"\x4f\xa2\x06" "config")
QDEF1(MP_QSTR_connect, (const byte*)"\xdb\x3d\x07" "connect")
QDEF1(MP_QSTR_connectable, (const byte*)"\x71\x36\x0b" "connectable")
QDEF1(MP_QSTR_copysign, (const byte*)"\x33\x14\x08" "copysign")
QDEF1(MP_QSTR_coro, (const byte*)"\xb4\xdb\x04" "coro")
QDEF1(MP_QSTR_cos, (const byte*)"\x7a\x4c\x03" "cos")
QDEF1(MP_QSTR_cosh, (const byte*)"\xd2\xdb\x04" "cosh")
QDEF1(MP_QSTR_crc32, (const byte*)"\x76\xe8\x05" "crc32")
QDEF1(MP_QSTR_crc8, (const byte*)"\xcf\xef\x04" "crc8")
QDEF1(MP_QSTR_cs, (const byte*)"\xf5\x6e\x02" "cs")
QDEF1(MP_QSTR_cts, (const byte*)"\x41\x4d\x03" "cts")
QDEF1(MP_QSTR_cur_task, (const byte*)"\xf3\x2d\x08" "cur_task")
QDEF1(MP_QSTR_data, (const byte*)"\x15\xdc\x04" "data")
QDEF1(MP_QSTR_datetime, (const byte*)"\xe4\x04\x08" "datetime")
QDEF1(MP_QSTR_decode, (const byte*)"\xa9\x59\x06" "decode")
QDEF1(MP_QSTR_decompress, (const byte*)"\x62\xfb\x0a" "decompress")
QDEF1(MP_QSTR_decrypt, (const byte*)"\xa8\x72\x07" "decrypt")
QDEF1(MP_QSTR_deepsleep, (const byte*)"\x9e\xd2\x09" "deepsleep")
QDEF1(MP_QSTR_default, (const byte*)"\xce\x7d\x07" "default")
QDEF1(MP_QSTR_degrees, (const byte*)"\x02\x41\x07" "degrees")
QDEF1(MP_QSTR_deinit, (const byte*)"\x9e\x8d\x06" "deinit")
QDEF1(MP_QSTR_delattr, (const byte*)"\xdb\xc8\x07" "delattr")
QDEF1(MP_QSTR_deleter, (const byte*)"\x6e\xdb\x07" "deleter")
QDEF1(MP_QSTR_deque, (const byte*)"\x05\x99\x05" "deque")
QDEF1(MP_QSTR_dhcp_hostname, (const byte*)"\xa2\x49\x0d" "dhcp_hostname")
QDEF1(MP_QSTR_dht_readinto, (const byte*)"\xec\x62\x0c" "dht_readinto")
QDEF1(MP_QSTR_dict_view, (const byte*)"\x2d\xa9\x09" "dict_view")
QDEF1(MP_QSTR_difference, (const byte*)"\x72\x24\x0a" "difference")
QDEF1(MP_QSTR_difference_update, (const byte*)"\x9c\xfa\x11" "difference_update")
QDEF1(MP_QSTR_digest, (const byte*)"\xcd\xc4\x06" "digest")
QDEF1(MP_QSTR_disable, (const byte*)"\x91\x76\x07" "disable")
QDEF1(MP_QSTR_disable_irq, (const byte*)"\x04\x3a\x0b" "disable_irq")
QDEF1(MP_QSTR_discard, (const byte*)"\x0f\x71\x07" "discard")
QDEF1(MP_QSTR_disconnect, (const byte*)"\xa5\x85\x0a" "disconnect")
QDEF1(MP_QSTR_do_handshake, (const byte*)"\x86\x7f\x0c" "do_handshake")
QDEF1(MP_QSTR_doc, (const byte*)"\x2d\x1f\x03" "doc")
QDEF1(MP_QSTR_done, (const byte*)"\x45\x03\x04" "done")
QDEF1(MP_QSTR_download, (const byte*)"\x91\x7d\x08" "download")
QDEF1(MP_QSTR_driver, (const byte*)"\x1b\x71\x06" "driver")
QDEF1(MP_QSTR_dump, (const byte*)"\xe9\x2f\x04" "dump")
QDEF1(MP_QSTR_dumps, (const byte*)"\x7a\x2d\x05" "dumps")
QDEF1(MP_QSTR_dumpsys_mm, (const byte*)"\xaf\x10\x0a" "dumpsys_mm")
QDEF1(MP_QSTR_dupterm, (const byte*)"\xaa\x5a\x07" "dupterm")
QDEF1(MP_QSTR_dupterm_notify, (const byte*)"\xb6\x77\x0e" "dupterm_notify")
QDEF1(MP_QSTR_duty, (const byte*)"\x19\x2c\x04" "duty")
QDEF1(MP_QSTR_e, (const byte*)"\xc0\xb5\x01" "e")
QDEF1(MP_QSTR_enable, (const byte*)"\x04\xde\x06" "enable")
QDEF1(MP_QSTR_enable_irq, (const byte*)"\x91\x60\x0a" "enable_irq")
QDEF1(MP_QSTR_encode, (const byte*)"\x43\xca\x06" "encode")
QDEF1(MP_QSTR_encoding, (const byte*)"\x06\x9c\x08" "encoding")
QDEF1(MP_QSTR_encrypt, (const byte*)"\xc2\x78\x07" "encrypt")
QDEF1(MP_QSTR_enumerate, (const byte*)"\x71\xba\x09" "enumerate")
QDEF1(MP_QSTR_erase_key, (const byte*)"\x0d\xcb\x09" "erase_key")
QDEF1(MP_QSTR_erf, (const byte*)"\x94\x23\x03" "erf")
QDEF1(MP_QSTR_erfc, (const byte*)"\x77\x96\x04" "erfc")
QDEF1(MP_QSTR_errno, (const byte*)"\xc1\x11\x05" "errno")
QDEF1(MP_QSTR_errorcode, (const byte*)"\x10\xdd\x09" "errorcode")
QDEF1(MP_QSTR_esp, (const byte*)"\x63\x24\x03" "esp")
QDEF1(MP_QSTR_esp32, (const byte*)"\xc2\xce\x05" "esp32")
QDEF1(MP_QSTR_essid, (const byte*)"\x4d\xb1\x05" "essid")
QDEF1(MP_QSTR_execfile, (const byte*)"\x58\x28\x08" "execfile")
QDEF1(MP_QSTR_exit, (const byte*)"\x85\xbe\x04" "exit")
QDEF1(MP_QSTR_exp, (const byte*)"\xc8\x24\x03" "exp")
QDEF1(MP_QSTR_expm1, (const byte*)"\x74\x72\x05" "expm1")
QDEF1(MP_QSTR_fabs, (const byte*)"\x93\x12\x04" "fabs")
QDEF1(MP_QSTR_feed, (const byte*)"\xa7\x23\x04" "feed")
QDEF1(MP_QSTR_file, (const byte*)"\xc3\x34\x04" "file")
QDEF1(MP_QSTR_fileno, (const byte*)"\x82\x76\x06" "fileno")
QDEF1(MP_QSTR_fill, (const byte*)"\xca\x34\x04" "fill")
QDEF1(MP_QSTR_fill_rect, (const byte*)"\x35\xed\x09" "fill_rect")
QDEF1(MP_QSTR_filter, (const byte*)"\x25\xbe\x06" "filter")
QDEF1(MP_QSTR_firstbit, (const byte*)"\x20\x39\x08" "firstbit")
QDEF1(MP_QSTR_flags, (const byte*)"\xfa\x8f\x05" "flags")
QDEF1(MP_QSTR_flash_erase, (const byte*)"\xca\x81\x0b" "flash_erase")
QDEF1(MP_QSTR_flash_read, (const byte*)"\xb8\x48\x0a" "flash_read")
QDEF1(MP_QSTR_flash_size, (const byte*)"\x2f\xb9\x0a" "flash_size")
QDEF1(MP_QSTR_flash_user_start, (const byte*)"\x84\x2a\x10" "flash_user_start")
QDEF1(MP_QSTR_flash_write, (const byte*)"\x37\x7f\x0b" "flash_write")
QDEF1(MP_QSTR_float, (const byte*)"\x35\x44\x05" "float")
QDEF1(MP_QSTR_floor, (const byte*)"\x7d\x46\x05" "floor")
QDEF1(MP_QSTR_flow, (const byte*)"\x37\x40\x04" "flow")
QDEF1(MP_QSTR_flush, (const byte*)"\x61\xc1\x05" "flush")
QDEF1(MP_QSTR_fmod, (const byte*)"\xe5\x44\x04" "fmod")
QDEF1(MP_QSTR_font, (const byte*)"\x96\x2b\x04" "font")
QDEF1(MP_QSTR_framebuf, (const byte*)"\x69\x82\x08" "framebuf")
QDEF1(MP_QSTR_freq, (const byte*)"\xe5\x3a\x04" "freq")
QDEF1(MP_QSTR_frexp, (const byte*)"\x1c\x98\x05" "frexp")
QDEF1(MP_QSTR_fromkeys, (const byte*)"\x37\xbd\x08" "fromkeys")
QDEF1(MP_QSTR_frozenset, (const byte*)"\xed\x9c\x09" "frozenset")
QDEF1(MP_QSTR_function, (const byte*)"\x27\x02\x08" "function")
QDEF1(MP_QSTR_gamma, (const byte*)"\x02\x90\x05" "gamma")
QDEF1(MP_QSTR_gap_advertise, (const byte*)"\x23\x58\x0d" "gap_advertise")
QDEF1(MP_QSTR_gap_connect, (const byte*)"\x32\x1b\x0b" "gap_connect")
QDEF1(MP_QSTR_gap_disconnect, (const byte*)"\xac\xff\x0e" "gap_disconnect")
QDEF1(MP_QSTR_gap_name, (const byte*)"\x2b\xb0\x08" "gap_name")
QDEF1(MP_QSTR_gap_scan, (const byte*)"\xd3\xb5\x08" "gap_scan")
QDEF1(MP_QSTR_gattc_discover_characteristics, (const byte*)"\x5d\xec\x1e" "gattc_discover_characteristics")
QDEF1(MP_QSTR_gattc_discover_descriptors, (const byte*)"\xb3\x7a\x1a" "gattc_discover_descriptors")
QDEF1(MP_QSTR_gattc_discover_services, (const byte*)"\x7d\x91\x17" "gattc_discover_services")
QDEF1(MP_QSTR_gattc_exchange_mtu, (const byte*)"\x77\x28\x12" "gattc_exchange_mtu")
QDEF1(MP_QSTR_gattc_read, (const byte*)"\x8d\xb5\x0a" "gattc_read")
QDEF1(MP_QSTR_gattc_write, (const byte*)"\x62\x96\x0b" "gattc_write")
QDEF1(MP_QSTR_gatts_indicate, (const byte*)"\x76\xe2\x0e" "gatts_indicate")
QDEF1(MP_QSTR_gatts_notify, (const byte*)"\x6c\x24\x0c" "gatts_notify")
QDEF1(MP_QSTR_gatts_read, (const byte*)"\x9d\xbb\x0a" "gatts_read")
QDEF1(MP_QSTR_gatts_register_services, (const byte*)"\xf7\x3e\x17" "gatts_register_services")
QDEF1(MP_QSTR_gatts_set_buffer, (const byte*)"\x92\x70\x10" "gatts_set_buffer")
QDEF1(MP_QSTR_gatts_write, (const byte*)"\x72\xd6\x0b" "gatts_write")
QDEF1(MP_QSTR_gc, (const byte*)"\x61\x6e\x02" "gc")
QDEF1(MP_QSTR_generator, (const byte*)"\x96\xc3\x09" "generator")
QDEF1(MP_QSTR_getDeviceHandle, (const byte*)"\xc1\xcf\x0f" "getDeviceHandle")
QDEF1(MP_QSTR_getDeviceInfo, (const byte*)"\xe5\xdb\x0d" "getDeviceInfo")
QDEF1(MP_QSTR_getGatewayHandle, (const byte*)"\xc1\xc0\x10" "getGatewayHandle")
QDEF1(MP_QSTR_getGatewayInfo, (const byte*)"\xe5\x8c\x0e" "getGatewayInfo")
QDEF1(MP_QSTR_getHwParam, (const byte*)"\x83\xfd\x0a" "getHwParam")
QDEF1(MP_QSTR_getNtpTime, (const byte*)"\x0c\xac\x0a" "getNtpTime")
QDEF1(MP_QSTR_getOption, (const byte*)"\x10\x0b\x09" "getOption")
QDEF1(MP_QSTR_getTopo, (const byte*)"\xd7\xaa\x07" "getTopo")
QDEF1(MP_QSTR_get_blob, (const byte*)"\x2f\x66\x08" "get_blob")
QDEF1(MP_QSTR_get_i32, (const byte*)"\x84\x3e\x07" "get_i32")
QDEF1(MP_QSTR_get_ident, (const byte*)"\xfe\xb1\x09" "get_ident")
QDEF1(MP_QSTR_get_next_update, (const byte*)"\x85\x5d\x0f" "get_next_update")
QDEF1(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x18\x0b" "getaddrinfo")
QDEF1(MP_QSTR_getcwd, (const byte*)"\x03\xd0\x06" "getcwd")
QDEF1(MP_QSTR_geti, (const byte*)"\xfa\xa1\x04" "geti")
QDEF1(MP_QSTR_getpeercert, (const byte*)"\xb1\x92\x0b" "getpeercert")
QDEF1(MP_QSTR_getpos, (const byte*)"\xdf\xa3\x06" "getpos")
QDEF1(MP_QSTR_getrandbits, (const byte*)"\x66\x7d\x0b" "getrandbits")
QDEF1(MP_QSTR_getter, (const byte*)"\x90\xb2\x06" "getter")
QDEF1(MP_QSTR_getvalue, (const byte*)"\x78\xac\x08" "getvalue")
QDEF1(MP_QSTR_gmtime, (const byte*)"\x5a\x8e\x06" "gmtime")
QDEF1(MP_QSTR_gpio_matrix_in, (const byte*)"\xa8\xac\x0e" "gpio_matrix_in")
QDEF1(MP_QSTR_gpio_matrix_out, (const byte*)"\x61\x3b\x0f" "gpio_matrix_out")
QDEF1(MP_QSTR_group, (const byte*)"\xba\xb0\x05" "group")
QDEF1(MP_QSTR_hall_sensor, (const byte*)"\x05\x2c\x0b" "hall_sensor")
QDEF1(MP_QSTR_handler, (const byte*)"\xdd\x5d\x07" "handler")
QDEF1(MP_QSTR_heap, (const byte*)"\xf9\x5d\x04" "heap")
QDEF1(MP_QSTR_heap_lock, (const byte*)"\xad\x8c\x09" "heap_lock")
QDEF1(MP_QSTR_heap_unlock, (const byte*)"\x56\x2d\x0b" "heap_unlock")
QDEF1(MP_QSTR_heapify, (const byte*)"\xaf\x2d\x07" "heapify")
QDEF1(MP_QSTR_heappop, (const byte*)"\xd6\x27\x07" "heappop")
QDEF1(MP_QSTR_heappush, (const byte*)"\x87\x6b\x08" "heappush")
QDEF1(MP_QSTR_help, (const byte*)"\x94\x5c\x04" "help")
QDEF1(MP_QSTR_hex, (const byte*)"\x70\x50\x03" "hex")
QDEF1(MP_QSTR_hexlify, (const byte*)"\x2a\x7f\x07" "hexlify")
QDEF1(MP_QSTR_hidden, (const byte*)"\xef\x48\x06" "hidden")
QDEF1(MP_QSTR_hline, (const byte*)"\x83\x3c\x05" "hline")
QDEF1(MP_QSTR_http, (const byte*)"\x9d\x9b\x04" "http")
QDEF1(MP_QSTR_ibuf, (const byte*)"\x9d\xe7\x04" "ibuf")
QDEF1(MP_QSTR_idf_heap_info, (const byte*)"\xbc\x1a\x0d" "idf_heap_info")
QDEF1(MP_QSTR_idle, (const byte*)"\xa1\xdc\x04" "idle")
QDEF1(MP_QSTR_idle_level, (const byte*)"\x28\x75\x0a" "idle_level")
QDEF1(MP_QSTR_ifconfig, (const byte*)"\xe0\x41\x08" "ifconfig")
QDEF1(MP_QSTR_ilistdir, (const byte*)"\x71\x6a\x08" "ilistdir")
QDEF1(MP_QSTR_imag, (const byte*)"\x47\xb7\x04" "imag")
QDEF1(MP_QSTR_implementation, (const byte*)"\x17\x2d\x0e" "implementation")
QDEF1(MP_QSTR_indices, (const byte*)"\x5a\x48\x07" "indices")
QDEF1(MP_QSTR_info, (const byte*)"\xeb\xb3\x04" "info")
QDEF1(MP_QSTR_init, (const byte*)"\x1f\xb4\x04" "init")
QDEF1(MP_QSTR_input, (const byte*)"\x73\x5a\x05" "input")
QDEF1(MP_QSTR_intersection, (const byte*)"\x28\x2a\x0c" "intersection")
QDEF1(MP_QSTR_intersection_update, (const byte*)"\x06\xdd\x13" "intersection_update")
QDEF1(MP_QSTR_interval_us, (const byte*)"\xa3\x2b\x0b" "interval_us")
QDEF1(MP_QSTR_invert, (const byte*)"\xb7\x00\x06" "invert")
QDEF1(MP_QSTR_ioctl, (const byte*)"\x78\xc2\x05" "ioctl")
QDEF1(MP_QSTR_ipoll, (const byte*)"\x53\x5d\x05" "ipoll")
QDEF1(MP_QSTR_irq, (const byte*)"\x8f\x56\x03" "irq")
QDEF1(MP_QSTR_isclose, (const byte*)"\x49\x4e\x07" "isclose")
QDEF1(MP_QSTR_isconnected, (const byte*)"\x80\x99\x0b" "isconnected")
QDEF1(MP_QSTR_isdisjoint, (const byte*)"\xf7\x68\x0a" "isdisjoint")
QDEF1(MP_QSTR_isenabled, (const byte*)"\x9a\xe5\x09" "isenabled")
QDEF1(MP_QSTR_isfinite, (const byte*)"\xa6\xab\x08" "isfinite")
QDEF1(MP_QSTR_isinf, (const byte*)"\x3e\x11\x05" "isinf")
QDEF1(MP_QSTR_isnan, (const byte*)"\x9e\x03\x05" "isnan")
QDEF1(MP_QSTR_issubset, (const byte*)"\xb9\xc1\x08" "issubset")
QDEF1(MP_QSTR_issuperset, (const byte*)"\xfc\xec\x0a" "issuperset")
QDEF1(MP_QSTR_iterable, (const byte*)"\x25\x92\x08" "iterable")
QDEF1(MP_QSTR_iterator, (const byte*)"\x47\xbe\x08" "iterator")
QDEF1(MP_QSTR_kbd_intr, (const byte*)"\xf6\x13\x08" "kbd_intr")
QDEF1(MP_QSTR_keepends, (const byte*)"\x62\x8b\x08" "keepends")
QDEF1(MP_QSTR_kv, (const byte*)"\xf8\x6f\x02" "kv")
QDEF1(MP_QSTR_label, (const byte*)"\x43\xe7\x05" "label")
QDEF1(MP_QSTR_ldexp, (const byte*)"\x40\x6f\x05" "ldexp")
QDEF1(MP_QSTR_level, (const byte*)"\xd3\x4b\x05" "level")
QDEF1(MP_QSTR_lgamma, (const byte*)"\xce\x6c\x06" "lgamma")
QDEF1(MP_QSTR_lightsleep, (const byte*)"\x54\xe7\x0a" "lightsleep")
QDEF1(MP_QSTR_line, (const byte*)"\xcb\x1c\x04" "line")
QDEF1(MP_QSTR_listdir, (const byte*)"\x98\xe3\x07" "listdir")
QDEF1(MP_QSTR_listen, (const byte*)"\xcc\x0e\x06" "listen")
QDEF1(MP_QSTR_load, (const byte*)"\x63\x24\x04" "load")
QDEF1(MP_QSTR_load_binary, (const byte*)"\xd3\xba\x0b" "load_binary")
QDEF1(MP_QSTR_loads, (const byte*)"\xb0\xb0\x05" "loads")
QDEF1(MP_QSTR_localtime, (const byte*)"\x7d\x46\x09" "localtime")
QDEF1(MP_QSTR_lock, (const byte*)"\xae\x23\x04" "lock")
QDEF1(MP_QSTR_locked, (const byte*)"\x0f\xba\x06" "locked")
QDEF1(MP_QSTR_log, (const byte*)"\x21\x3f\x03" "log")
QDEF1(MP_QSTR_log10, (const byte*)"\x40\x91\x05" "log10")
QDEF1(MP_QSTR_log2, (const byte*)"\x73\x23\x04" "log2")
QDEF1(MP_QSTR_login, (const byte*)"\x46\x88\x05" "login")
QDEF1(MP_QSTR_logout, (const byte*)"\x8f\x9b\x06" "logout")
QDEF1(MP_QSTR_loop, (const byte*)"\x39\x24\x04" "loop")
QDEF1(MP_QSTR_mac, (const byte*)"\xaa\x43\x03" "mac")
QDEF1(MP_QSTR_machine, (const byte*)"\x60\xab\x07" "machine")
QDEF1(MP_QSTR_makefile, (const byte*)"\xc1\xd5\x08" "makefile")
QDEF1(MP_QSTR_mark_app_valid_cancel_rollback, (const byte*)"\x77\xe4\x1e" "mark_app_valid_cancel_rollback")
QDEF1(MP_QSTR_match, (const byte*)"\x96\x22\x05" "match")
QDEF1(MP_QSTR_math, (const byte*)"\x35\xbb\x04" "math")
QDEF1(MP_QSTR_max, (const byte*)"\xb1\x43\x03" "max")
QDEF1(MP_QSTR_max_clients, (const byte*)"\x84\xf5\x0b" "max_clients")
QDEF1(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x1e\x20" "maximum recursion depth exceeded")
QDEF1(MP_QSTR_maxsize, (const byte*)"\xd4\x70\x07" "maxsize")
QDEF1(MP_QSTR_mdc, (const byte*)"\x4f\x44\x03" "mdc")
QDEF1(MP_QSTR_mdio, (const byte*)"\x8a\xcc\x04" "mdio")
QDEF1(MP_QSTR_mem, (const byte*)"\x20\x44\x03" "mem")
QDEF1(MP_QSTR_mem16, (const byte*)"\x07\xca\x05" "mem16")
QDEF1(MP_QSTR_mem32, (const byte*)"\x41\xca\x05" "mem32")
QDEF1(MP_QSTR_mem8, (const byte*)"\x18\xc8\x04" "mem8")
QDEF1(MP_QSTR_memRead, (const byte*)"\xf2\xec\x07" "memRead")
QDEF1(MP_QSTR_memWrite, (const byte*)"\x3d\x5c\x08" "memWrite")
QDEF1(MP_QSTR_mem_alloc, (const byte*)"\x52\x2b\x09" "mem_alloc")
QDEF1(MP_QSTR_mem_free, (const byte*)"\xcb\x62\x08" "mem_free")
QDEF1(MP_QSTR_mem_info, (const byte*)"\xd1\xf1\x08" "mem_info")
QDEF1(MP_QSTR_memaddr, (const byte*)"\x93\xe8\x07" "memaddr")
QDEF1(MP_QSTR_memory, (const byte*)"\x84\x1d\x06" "memory")
QDEF1(MP_QSTR_memoryview, (const byte*)"\x69\x44\x0a" "memoryview")
QDEF1(MP_QSTR_min, (const byte*)"\xaf\x42\x03" "min")
QDEF1(MP_QSTR_minkeypage, (const byte*)"\xab\x6f\x0a" "minkeypage")
QDEF1(MP_QSTR_miso, (const byte*)"\x9d\x98\x04" "miso")
QDEF1(MP_QSTR_mkdir, (const byte*)"\x9c\xb5\x05" "mkdir")
QDEF1(MP_QSTR_mkfs, (const byte*)"\x76\xb0\x04" "mkfs")
QDEF1(MP_QSTR_mktime, (const byte*)"\x96\x2b\x06" "mktime")
QDEF1(MP_QSTR_modbus, (const byte*)"\xc7\x4a\x06" "modbus")
QDEF1(MP_QSTR_mode, (const byte*)"\x26\xc0\x04" "mode")
QDEF1(MP_QSTR_modf, (const byte*)"\x25\xc0\x04" "modf")
QDEF1(MP_QSTR_modify, (const byte*)"\xf5\x66\x06" "modify")
QDEF1(MP_QSTR_module, (const byte*)"\xbf\x99\x06" "module")
QDEF1(MP_QSTR_modules, (const byte*)"\xec\xd1\x07" "modules")
QDEF1(MP_QSTR_mosi, (const byte*)"\x1d\xc2\x04" "mosi")
QDEF1(MP_QSTR_mount, (const byte*)"\xa8\x0d\x05" "mount")
QDEF1(MP_QSTR_mpy, (const byte*)"\xc1\x45\x03" "mpy")
QDEF1(MP_QSTR_mtu, (const byte*)"\x49\x46\x03" "mtu")
QDEF1(MP_QSTR_name, (const byte*)"\xa2\x75\x04" "name")
QDEF1(MP_QSTR_namedtuple, (const byte*)"\x1e\x16\x0a" "namedtuple")
QDEF1(MP_QSTR_native, (const byte*)"\x84\x0b\x06" "native")
QDEF1(MP_QSTR_network, (const byte*)"\x5b\x28\x07" "network")
QDEF1(MP_QSTR_nodename, (const byte*)"\x62\xab\x08" "nodename")
QDEF1(MP_QSTR_oct, (const byte*)"\xfd\x5c\x03" "oct")
QDEF1(MP_QSTR_off, (const byte*)"\x8a\x5c\x03" "off")
QDEF1(MP_QSTR_on, (const byte*)"\x64\x6f\x02" "on")
QDEF1(MP_QSTR_onProps, (const byte*)"\x6a\xa8\x07" "onProps")
QDEF1(MP_QSTR_onService, (const byte*)"\xf9\xd6\x09" "onService")
QDEF1(MP_QSTR_onewire, (const byte*)"\x28\xfc\x07" "onewire")
QDEF1(MP_QSTR_opt_level, (const byte*)"\x87\x67\x09" "opt_level")
QDEF1(MP_QSTR_osdebug, (const byte*)"\xe8\xe6\x07" "osdebug")
QDEF1(MP_QSTR_ota, (const byte*)"\x5f\x5f\x03" "ota")
QDEF1(MP_QSTR_pack, (const byte*)"\xbc\xd1\x04" "pack")
QDEF1(MP_QSTR_pack_into, (const byte*)"\x1f\xa9\x09" "pack_into")
QDEF1(MP_QSTR_pagesize, (const byte*)"\x13\x28\x08" "pagesize")
QDEF1(MP_QSTR_parity, (const byte*)"\x42\x05\x06" "parity")
QDEF1(MP_QSTR_partition, (const byte*)"\x87\xe5\x09" "partition")
QDEF1(MP_QSTR_password, (const byte*)"\x9a\x6f\x08" "password")
QDEF1(MP_QSTR_path, (const byte*)"\x88\xce\x04" "path")
QDEF1(MP_QSTR_peek, (const byte*)"\x7e\xc1\x04" "peek")
QDEF1(MP_QSTR_peektime, (const byte*)"\x8b\x5c\x08" "peektime")
QDEF1(MP_QSTR_pend_throw, (const byte*)"\xf3\x74\x0a" "pend_throw")
QDEF1(MP_QSTR_period, (const byte*)"\xa0\xa0\x06" "period")
QDEF1(MP_QSTR_ph_key, (const byte*)"\xf5\x1a\x06" "ph_key")
QDEF1(MP_QSTR_phase, (const byte*)"\x6a\xd5\x05" "phase")
QDEF1(MP_QSTR_phy_addr, (const byte*)"\xa8\xcc\x08" "phy_addr")
QDEF1(MP_QSTR_phy_mode, (const byte*)"\x38\xa0\x08" "phy_mode")
QDEF1(MP_QSTR_phy_type, (const byte*)"\x83\xc7\x08" "phy_type")
QDEF1(MP_QSTR_pi, (const byte*)"\x1c\x70\x02" "pi")
QDEF1(MP_QSTR_pin, (const byte*)"\xf2\x73\x03" "pin")
QDEF1(MP_QSTR_pins, (const byte*)"\x41\xf2\x04" "pins")
QDEF1(MP_QSTR_pixel, (const byte*)"\x4d\xf0\x05" "pixel")
QDEF1(MP_QSTR_platform, (const byte*)"\x3a\x19\x08" "platform")
QDEF1(MP_QSTR_polar, (const byte*)"\x05\x0c\x05" "polar")
QDEF1(MP_QSTR_polarity, (const byte*)"\x41\xed\x08" "polarity")
QDEF1(MP_QSTR_poll, (const byte*)"\x9a\xd9\x04" "poll")
QDEF1(MP_QSTR_pop_head, (const byte*)"\x1d\x28\x08" "pop_head")
QDEF1(MP_QSTR_popleft, (const byte*)"\x71\x9a\x07" "popleft")
QDEF1(MP_QSTR_port, (const byte*)"\x5c\xd8\x04" "port")
QDEF1(MP_QSTR_postEvent, (const byte*)"\x91\x92\x09" "postEvent")
QDEF1(MP_QSTR_postProps, (const byte*)"\x53\x8b\x09" "postProps")
QDEF1(MP_QSTR_postRaw, (const byte*)"\xb9\xf2\x07" "postRaw")
QDEF1(MP_QSTR_power, (const byte*)"\xda\xed\x05" "power")
QDEF1(MP_QSTR_print_exception, (const byte*)"\x1c\x22\x0f" "print_exception")
QDEF1(MP_QSTR_property, (const byte*)"\xc2\x29\x08" "property")
QDEF1(MP_QSTR_ptr, (const byte*)"\x53\x70\x03" "ptr")
QDEF1(MP_QSTR_ptr16, (const byte*)"\xf4\xca\x05" "ptr16")
QDEF1(MP_QSTR_ptr32, (const byte*)"\xb2\xca\x05" "ptr32")
QDEF1(MP_QSTR_ptr8, (const byte*)"\x8b\x7a\x04" "ptr8")
QDEF1(MP_QSTR_publish, (const byte*)"\x5c\x6a\x07" "publish")
QDEF1(MP_QSTR_pull, (const byte*)"\x80\x7d\x04" "pull")
QDEF1(MP_QSTR_push, (const byte*)"\xbb\x7e\x04" "push")
QDEF1(MP_QSTR_push_head, (const byte*)"\x6c\x1e\x09" "push_head")
QDEF1(MP_QSTR_push_sorted, (const byte*)"\x1f\xa0\x0b" "push_sorted")
QDEF1(MP_QSTR_put, (const byte*)"\x74\x70\x03" "put")
QDEF1(MP_QSTR_qstr_info, (const byte*)"\xb0\x81\x09" "qstr_info")
QDEF1(MP_QSTR_r, (const byte*)"\xd7\xb5\x01" "r")
QDEF1(MP_QSTR_radians, (const byte*)"\x87\x3f\x07" "radians")
QDEF1(MP_QSTR_randint, (const byte*)"\xaf\xdc\x07" "randint")
QDEF1(MP_QSTR_random, (const byte*)"\xbe\x2c\x06" "random")
QDEF1(MP_QSTR_randrange, (const byte*)"\xa3\x3e\x09" "randrange")
QDEF1(MP_QSTR_rate, (const byte*)"\x47\x08\x04" "rate")
QDEF1(MP_QSTR_raw_temperature, (const byte*)"\x52\xd0\x0f" "raw_temperature")
QDEF1(MP_QSTR_rb, (const byte*)"\xd5\x70\x02" "rb")
QDEF1(MP_QSTR_readAfterWrite, (const byte*)"\x4e\x3a\x0e" "readAfterWrite")
QDEF1(MP_QSTR_readAndWrite, (const byte*)"\x01\xd1\x0c" "readAndWrite")
QDEF1(MP_QSTR_readCoils, (const byte*)"\x6d\x3d\x09" "readCoils")
QDEF1(MP_QSTR_readDiscreteInputs, (const byte*)"\x69\x1a\x12" "readDiscreteInputs")
QDEF1(MP_QSTR_readHoldingRegisters, (const byte*)"\x22\x64\x14" "readHoldingRegisters")
QDEF1(MP_QSTR_readInputRegisters, (const byte*)"\xdb\xb5\x12" "readInputRegisters")
QDEF1(MP_QSTR_readRaw, (const byte*)"\xf3\x69\x07" "readRaw")
QDEF1(MP_QSTR_readVoltage, (const byte*)"\x95\x75\x0b" "readVoltage")
QDEF1(MP_QSTR_read_u16, (const byte*)"\xda\xae\x08" "read_u16")
QDEF1(MP_QSTR_read_uv, (const byte*)"\x2b\x81\x07" "read_uv")
QDEF1(MP_QSTR_readbit, (const byte*)"\x08\x4f\x07" "readbit")
QDEF1(MP_QSTR_readblocks, (const byte*)"\x2d\x1c\x0a" "readblocks")
QDEF1(MP_QSTR_readbyte, (const byte*)"\x7d\xf0\x08" "readbyte")
QDEF1(MP_QSTR_readfrom, (const byte*)"\x41\xb1\x08" "readfrom")
QDEF1(MP_QSTR_readfrom_into, (const byte*)"\x82\x3f\x0d" "readfrom_into")
QDEF1(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x65\x0c" "readfrom_mem")
QDEF1(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x8e\x11" "readfrom_mem_into")
QDEF1(MP_QSTR_readlines, (const byte*)"\x6a\x59\x09" "readlines")
QDEF1(MP_QSTR_readonly, (const byte*)"\x03\x89\x08" "readonly")
QDEF1(MP_QSTR_real, (const byte*)"\xbf\xf9\x04" "real")
QDEF1(MP_QSTR_reconnects, (const byte*)"\x9f\x3e\x0a" "reconnects")
QDEF1(MP_QSTR_rect, (const byte*)"\xe5\xf9\x04" "rect")
QDEF1(MP_QSTR_recv, (const byte*)"\xe7\xf9\x04" "recv")
QDEF1(MP_QSTR_recvfrom, (const byte*)"\x91\x90\x08" "recvfrom")
QDEF1(MP_QSTR_register, (const byte*)"\xac\xa1\x08" "register")
QDEF1(MP_QSTR_registerSubDevice, (const byte*)"\x10\xfd\x11" "registerSubDevice")
QDEF1(MP_QSTR_rel_tol, (const byte*)"\x56\x46\x07" "rel_tol")
QDEF1(MP_QSTR_release, (const byte*)"\xec\x8f\x07" "release")
QDEF1(MP_QSTR_reload, (const byte*)"\x74\x07\x06" "reload")
QDEF1(MP_QSTR_removeTopo, (const byte*)"\x07\x59\x0a" "removeTopo")
QDEF1(MP_QSTR_rename, (const byte*)"\x35\x18\x06" "rename")
QDEF1(MP_QSTR_report, (const byte*)"\x8b\x14\x06" "report")
QDEF1(MP_QSTR_request, (const byte*)"\x74\xb0\x07" "request")
QDEF1(MP_QSTR_reset, (const byte*)"\x10\xf4\x05" "reset")
QDEF1(MP_QSTR_reset_cause, (const byte*)"\xce\x2f\x0b" "reset_cause")
QDEF1(MP_QSTR_resp_data, (const byte*)"\x5e\x73\x09" "resp_data")
QDEF1(MP_QSTR_reversed, (const byte*)"\xa1\x6e\x08" "reversed")
QDEF1(MP_QSTR_rmdir, (const byte*)"\x45\xa7\x05" "rmdir")
QDEF1(MP_QSTR_rpartition, (const byte*)"\x15\xd0\x0a" "rpartition")
QDEF1(MP_QSTR_rssi, (const byte*)"\x7e\xb0\x04" "rssi")
QDEF1(MP_QSTR_rts, (const byte*)"\x50\x89\x03" "rts")
QDEF1(MP_QSTR_run, (const byte*)"\x6c\x89\x03" "run")
QDEF1(MP_QSTR_rx, (const byte*)"\xcf\x70\x02" "rx")
QDEF1(MP_QSTR_rxbuf, (const byte*)"\x7e\x67\x05" "rxbuf")
QDEF1(MP_QSTR_s, (const byte*)"\xd6\xb5\x01" "s")
QDEF1(MP_QSTR_scan, (const byte*)"\x1a\x8e\x04" "scan")
QDEF1(MP_QSTR_schedule, (const byte*)"\xe0\xac\x08" "schedule")
QDEF1(MP_QSTR_sck, (const byte*)"\xfe\x8f\x03" "sck")
QDEF1(MP_QSTR_scl, (const byte*)"\xf9\x8f\x03" "scl")
QDEF1(MP_QSTR_scroll, (const byte*)"\x28\x5a\x06" "scroll")
QDEF1(MP_QSTR_sd, (const byte*)"\xf2\x70\x02" "sd")
QDEF1(MP_QSTR_sda, (const byte*)"\x53\x8f\x03" "sda")
QDEF1(MP_QSTR_search, (const byte*)"\xab\xc1\x06" "search")
QDEF1(MP_QSTR_seed, (const byte*)"\x92\x75\x04" "seed")
QDEF1(MP_QSTR_seek, (const byte*)"\x9d\x75\x04" "seek")
QDEF1(MP_QSTR_select, (const byte*)"\x8d\x41\x06" "select")
QDEF1(MP_QSTR_sendall, (const byte*)"\x38\x9f\x07" "sendall")
QDEF1(MP_QSTR_sendbreak, (const byte*)"\xc6\x11\x09" "sendbreak")
QDEF1(MP_QSTR_sendto, (const byte*)"\x22\x03\x06" "sendto")
QDEF1(MP_QSTR_separators, (const byte*)"\xeb\x0c\x0a" "separators")
QDEF1(MP_QSTR_seq, (const byte*)"\x22\x8f\x03" "seq")
QDEF1(MP_QSTR_server_hostname, (const byte*)"\x58\xef\x0f" "server_hostname")
QDEF1(MP_QSTR_server_side, (const byte*)"\x64\xef\x0b" "server_side")
QDEF1(MP_QSTR_setOption, (const byte*)"\x04\x27\x09" "setOption")
QDEF1(MP_QSTR_setTime, (const byte*)"\x32\x29\x07" "setTime")
QDEF1(MP_QSTR_set_blob, (const byte*)"\xbb\xbf\x08" "set_blob")
QDEF1(MP_QSTR_set_boot, (const byte*)"\x6e\xc4\x08" "set_boot")
QDEF1(MP_QSTR_set_font_path, (const byte*)"\xf9\xc8\x0d" "set_font_path")
QDEF1(MP_QSTR_set_i32, (const byte*)"\x90\x91\x07" "set_i32")
QDEF1(MP_QSTR_set_wakeup_period, (const byte*)"\x3f\x08\x11" "set_wakeup_period")
QDEF1(MP_QSTR_setblocking, (const byte*)"\x6e\x18\x0b" "setblocking")
QDEF1(MP_QSTR_seti, (const byte*)"\x6e\x74\x04" "seti")
QDEF1(MP_QSTR_setpos, (const byte*)"\x4b\x6a\x06" "setpos")
QDEF1(MP_QSTR_setsockopt, (const byte*)"\x38\xe8\x0a" "setsockopt")
QDEF1(MP_QSTR_setter, (const byte*)"\x04\x59\x06" "setter")
QDEF1(MP_QSTR_settimeout, (const byte*)"\xdc\x8a\x0a" "settimeout")
QDEF1(MP_QSTR_sha1, (const byte*)"\x8e\xac\x04" "sha1")
QDEF1(MP_QSTR_sha256, (const byte*)"\x2e\x01\x06" "sha256")
QDEF1(MP_QSTR_shift, (const byte*)"\x85\x25\x05" "shift")
QDEF1(MP_QSTR_sin, (const byte*)"\xb1\x90\x03" "sin")
QDEF1(MP_QSTR_single, (const byte*)"\x3f\x20\x06" "single")
QDEF1(MP_QSTR_sinh, (const byte*)"\xb9\xa6\x04" "sinh")
QDEF1(MP_QSTR_size, (const byte*)"\x20\xa5\x04" "size")
QDEF1(MP_QSTR_sizeof, (const byte*)"\x49\x73\x06" "sizeof")
QDEF1(MP_QSTR_sleep, (const byte*)"\xea\x27\x05" "sleep")
QDEF1(MP_QSTR_sleep_ms, (const byte*)"\x0b\x63\x08" "sleep_ms")
QDEF1(MP_QSTR_sleep_us, (const byte*)"\x13\x60\x08" "sleep_us")
QDEF1(MP_QSTR_slice, (const byte*)"\xb5\xf4\x05" "slice")
QDEF1(MP_QSTR_slot, (const byte*)"\x81\x9a\x04" "slot")
QDEF1(MP_QSTR_sntp, (const byte*)"\x7c\x81\x04" "sntp")
QDEF1(MP_QSTR_socket, (const byte*)"\x60\xcc\x06" "socket")
QDEF1(MP_QSTR_soft_reset, (const byte*)"\xe1\x65\x0a" "soft_reset")
QDEF1(MP_QSTR_source_freq, (const byte*)"\x47\x26\x0b" "source_freq")
QDEF1(MP_QSTR_space, (const byte*)"\x21\x1f\x05" "space")
QDEF1(MP_QSTR_splitlines, (const byte*)"\x6a\xd3\x0a" "splitlines")
QDEF1(MP_QSTR_sqrt, (const byte*)"\x21\x44\x04" "sqrt")
QDEF1(MP_QSTR_stack_size, (const byte*)"\x31\x3b\x0a" "stack_size")
QDEF1(MP_QSTR_stack_use, (const byte*)"\x97\xf7\x09" "stack_use")
QDEF1(MP_QSTR_start_new_thread, (const byte*)"\xd7\x25\x10" "start_new_thread")
QDEF1(MP_QSTR_stat, (const byte*)"\xd7\x35\x04" "stat")
QDEF1(MP_QSTR_state, (const byte*)"\xd2\xf0\x05" "state")
QDEF1(MP_QSTR_stations, (const byte*)"\x2c\x1b\x08" "stations")
QDEF1(MP_QSTR_status, (const byte*)"\x71\x09\x06" "status")
QDEF1(MP_QSTR_statvfs, (const byte*)"\x14\x19\x07" "statvfs")
QDEF1(MP_QSTR_stderr, (const byte*)"\xa3\x58\x06" "stderr")
QDEF1(MP_QSTR_stdin, (const byte*)"\x21\x04\x05" "stdin")
QDEF1(MP_QSTR_stdout, (const byte*)"\x08\x83\x06" "stdout")
QDEF1(MP_QSTR_struct, (const byte*)"\x12\x90\x06" "struct")
QDEF1(MP_QSTR_sub, (const byte*)"\x21\x8d\x03" "sub")
QDEF1(MP_QSTR_subscribe, (const byte*)"\x0d\x08\x09" "subscribe")
QDEF1(MP_QSTR_subtype, (const byte*)"\xb9\xf8\x07" "subtype")
QDEF1(MP_QSTR_symmetric_difference, (const byte*)"\xce\x67\x14" "symmetric_difference")
QDEF1(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\xf8\x1b" "symmetric_difference_update")
QDEF1(MP_QSTR_sync, (const byte*)"\xa2\x62\x04" "sync")
QDEF1(MP_QSTR_sys, (const byte*)"\xbc\x8e\x03" "sys")
QDEF1(MP_QSTR_sysname, (const byte*)"\x9b\x36\x07" "sysname")
QDEF1(MP_QSTR_system, (const byte*)"\xa0\x14\x06" "system")
QDEF1(MP_QSTR_tan, (const byte*)"\xfe\x61\x03" "tan")
QDEF1(MP_QSTR_tanh, (const byte*)"\xd6\xa1\x04" "tanh")
QDEF1(MP_QSTR_tasklist, (const byte*)"\x8a\x68\x08" "tasklist")
QDEF1(MP_QSTR_tell, (const byte*)"\x14\xb1\x04" "tell")
QDEF1(MP_QSTR_text, (const byte*)"\x98\xaf\x04" "text")
QDEF1(MP_QSTR_threshold, (const byte*)"\xf2\x2f\x09" "threshold")
QDEF1(MP_QSTR_tick_hz, (const byte*)"\x7d\xdb\x07" "tick_hz")
QDEF1(MP_QSTR_ticks_add, (const byte*)"\x9d\xae\x09" "ticks_add")
QDEF1(MP_QSTR_ticks_cpu, (const byte*)"\x1a\xa5\x09" "ticks_cpu")
QDEF1(MP_QSTR_ticks_diff, (const byte*)"\xb1\xe0\x0a" "ticks_diff")
QDEF1(MP_QSTR_ticks_ms, (const byte*)"\x42\x32\x08" "ticks_ms")
QDEF1(MP_QSTR_ticks_us, (const byte*)"\x5a\x31\x08" "ticks_us")
QDEF1(MP_QSTR_time, (const byte*)"\xf0\xc1\x04" "time")
QDEF1(MP_QSTR_time_ns, (const byte*)"\x72\xb2\x07" "time_ns")
QDEF1(MP_QSTR_time_pulse_us, (const byte*)"\x89\x0c\x0d" "time_pulse_us")
QDEF1(MP_QSTR_timeout, (const byte*)"\x3e\x54\x07" "timeout")
QDEF1(MP_QSTR_timeout_char, (const byte*)"\x79\x4a\x0c" "timeout_char")
QDEF1(MP_QSTR_trigger, (const byte*)"\x9d\x8c\x07" "trigger")
QDEF1(MP_QSTR_trunc, (const byte*)"\x5b\x99\x05" "trunc")
QDEF1(MP_QSTR_tx, (const byte*)"\x89\x6f\x02" "tx")
QDEF1(MP_QSTR_tx_carrier, (const byte*)"\xca\x92\x0a" "tx_carrier")
QDEF1(MP_QSTR_txbuf, (const byte*)"\x78\xc6\x05" "txbuf")
QDEF1(MP_QSTR_uarray, (const byte*)"\x89\x86\x06" "uarray")
QDEF1(MP_QSTR_ubinascii, (const byte*)"\xc4\x88\x09" "ubinascii")
QDEF1(MP_QSTR_ubluetooth, (const byte*)"\xe6\x90\x0a" "ubluetooth")
QDEF1(MP_QSTR_ucollections, (const byte*)"\x15\x9a\x0c" "ucollections")
QDEF1(MP_QSTR_ucryptolib, (const byte*)"\x34\xda\x0a" "ucryptolib")
QDEF1(MP_QSTR_uctypes, (const byte*)"\xf8\x71\x07" "uctypes")
QDEF1(MP_QSTR_uerrno, (const byte*)"\xb4\xe9\x06" "uerrno")
QDEF1(MP_QSTR_uhashlib, (const byte*)"\x65\x9d\x08" "uhashlib")
QDEF1(MP_QSTR_uheapq, (const byte*)"\x1d\x43\x06" "uheapq")
QDEF1(MP_QSTR_uint, (const byte*)"\xe3\x3d\x04" "uint")
QDEF1(MP_QSTR_uio, (const byte*)"\xb6\x66\x03" "uio")
QDEF1(MP_QSTR_ujson, (const byte*)"\xe8\x30\x05" "ujson")
QDEF1(MP_QSTR_umachine, (const byte*)"\x95\x7f\x08" "umachine")
QDEF1(MP_QSTR_umount, (const byte*)"\xdd\x9e\x06" "umount")
QDEF1(MP_QSTR_uname, (const byte*)"\xb7\x9c\x05" "uname")
QDEF1(MP_QSTR_unhexlify, (const byte*)"\xb1\xb9\x09" "unhexlify")
QDEF1(MP_QSTR_uniform, (const byte*)"\x01\xf5\x07" "uniform")
QDEF1(MP_QSTR_union, (const byte*)"\xf6\x7c\x05" "union")
QDEF1(MP_QSTR_unique_id, (const byte*)"\x04\x89\x09" "unique_id")
QDEF1(MP_QSTR_unpack, (const byte*)"\x07\x3c\x06" "unpack")
QDEF1(MP_QSTR_unpack_from, (const byte*)"\x0e\x6d\x0b" "unpack_from")
QDEF1(MP_QSTR_unregister, (const byte*)"\x17\xd4\x0a" "unregister")
QDEF1(MP_QSTR_unsetenv, (const byte*)"\x81\x46\x08" "unsetenv")
QDEF1(MP_QSTR_unsubscribe, (const byte*)"\xd6\xa0\x0b" "unsubscribe")
QDEF1(MP_QSTR_uos, (const byte*)"\xec\x67\x03" "uos")
QDEF1(MP_QSTR_upgrade, (const byte*)"\x95\x97\x07" "upgrade")
QDEF1(MP_QSTR_uploadContent, (const byte*)"\x6f\xbd\x0d" "uploadContent")
QDEF1(MP_QSTR_uploadFile, (const byte*)"\xa0\xd8\x0a" "uploadFile")
QDEF1(MP_QSTR_urandom, (const byte*)"\xab\xae\x07" "urandom")
QDEF1(MP_QSTR_ure, (const byte*)"\x87\x63\x03" "ure")
QDEF1(MP_QSTR_uselect, (const byte*)"\x58\x8e\x07" "uselect")
QDEF1(MP_QSTR_username, (const byte*)"\x33\x98\x08" "username")
QDEF1(MP_QSTR_usocket, (const byte*)"\x75\x00\x07" "usocket")
QDEF1(MP_QSTR_ussl, (const byte*)"\x1c\xf2\x04" "ussl")
QDEF1(MP_QSTR_ustruct, (const byte*)"\x47\x08\x07" "ustruct")
QDEF1(MP_QSTR_usys, (const byte*)"\xc9\xf3\x04" "usys")
QDEF1(MP_QSTR_utime, (const byte*)"\xe5\x9d\x05" "utime")
QDEF1(MP_QSTR_utimeq, (const byte*)"\xf4\x5a\x06" "utimeq")
QDEF1(MP_QSTR_uwebsocket, (const byte*)"\xe5\x33\x0a" "uwebsocket")
QDEF1(MP_QSTR_uzlib, (const byte*)"\x6d\x9b\x05" "uzlib")
QDEF1(MP_QSTR_verify, (const byte*)"\xd2\x02\x06" "verify")
QDEF1(MP_QSTR_version, (const byte*)"\xbf\xd3\x07" "version")
QDEF1(MP_QSTR_version_info, (const byte*)"\x6e\x0a\x0c" "version_info")
QDEF1(MP_QSTR_viper, (const byte*)"\x5d\x23\x05" "viper")
QDEF1(MP_QSTR_vline, (const byte*)"\x1d\xf6\x05" "vline")
QDEF1(MP_QSTR_wait_done, (const byte*)"\x51\x5d\x09" "wait_done")
QDEF1(MP_QSTR_wake, (const byte*)"\xdd\x55\x04" "wake")
QDEF1(MP_QSTR_wake_on_ext0, (const byte*)"\x05\xdc\x0c" "wake_on_ext0")
QDEF1(MP_QSTR_wake_on_ext1, (const byte*)"\x04\xdc\x0c" "wake_on_ext1")
QDEF1(MP_QSTR_wake_on_touch, (const byte*)"\xd9\x54\x0d" "wake_on_touch")
QDEF1(MP_QSTR_wake_reason, (const byte*)"\x66\xc6\x0b" "wake_reason")
QDEF1(MP_QSTR_wb, (const byte*)"\x70\x70\x02" "wb")
QDEF1(MP_QSTR_websocket, (const byte*)"\x90\x8d\x09" "websocket")
QDEF1(MP_QSTR_width, (const byte*)"\x23\x75\x05" "width")
QDEF1(MP_QSTR_wp, (const byte*)"\x62\x70\x02" "wp")
QDEF1(MP_QSTR_wrap_socket, (const byte*)"\xcb\xf3\x0b" "wrap_socket")
QDEF1(MP_QSTR_writeCoil, (const byte*)"\x31\x59\x09" "writeCoil")
QDEF1(MP_QSTR_writeHoldingRegister, (const byte*)"\x7e\x4d\x14" "writeHoldingRegister")
QDEF1(MP_QSTR_writeMultipleCoils, (const byte*)"\x12\xb8\x12" "writeMultipleCoils")
QDEF1(MP_QSTR_writeMultipleHoldingRegisters, (const byte*)"\xbd\xf4\x1d" "writeMultipleHoldingRegisters")
QDEF1(MP_QSTR_write_pulses, (const byte*)"\xeb\xd4\x0c" "write_pulses")
QDEF1(MP_QSTR_write_readinto, (const byte*)"\x89\x84\x0e" "write_readinto")
QDEF1(MP_QSTR_writebit, (const byte*)"\xc7\xa5\x08" "writebit")
QDEF1(MP_QSTR_writeblocks, (const byte*)"\x02\xdf\x0b" "writeblocks")
QDEF1(MP_QSTR_writebyte, (const byte*)"\xd2\x1e\x09" "writebyte")
QDEF1(MP_QSTR_writeto, (const byte*)"\x03\x39\x07" "writeto")
QDEF1(MP_QSTR_writeto_mem, (const byte*)"\x79\xed\x0b" "writeto_mem")
QDEF1(MP_QSTR_writevto, (const byte*)"\x75\x75\x08" "writevto")
QDEF1(MP_QSTR_ws, (const byte*)"\x61\x70\x02" "ws")
QDEF1(MP_QSTR_x, (const byte*)"\xdd\xb5\x01" "x")
QDEF1(MP_QSTR_y, (const byte*)"\xdc\xb5\x01" "y")
QDEF1(MP_QSTR_zoom, (const byte*)"\xf2\x23\x04" "zoom")
QDEF1(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x37\x05" "{:#b}")
